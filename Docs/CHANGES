=======================================================================
                  SIESTA CHANGES: TOP IS MOST RECENT
=======================================================================
Version: 1.4.36
Date: 2005/01/25 06:10 GMT
Title: Grdsam array size fix
Author: Julian Gale <julian@power.curtin.edu.au>

The size of the array dpt has been corrected to depend on maxpt+1
rather than na. Order of array deallocations has been reversed to
be deallocation friendly.

Files:

grdsam.F, version.F90, CHANGES
=======================================================================
Version: 1.4.35
Date: 2005/01/08 16:20 GMT
Title: Removed old Denchar source
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Removed all files under Util/Denchar/Src.
(The source for Denchar has been in the top directory
for a while)

Changes to version.F90 and CHANGES.

=======================================================================
Version: 1.4.34
Date: 2005/01/07 13:45 GMT
Title: Bugfixes by Toby White: decls, inits, typos, autoconf
ARCH patches: siesta-devel--reference--1.4--patch-14,
              siesta-devel--reference--1.4--patch-15
Author: Toby White (committed by Alberto Garcia) and Alberto Garcia

* Removal of "use" statement for m_radfft from atom.f
* Fix declarations in mneighb.f similarly to neighb.f
* Fix typo in fft3d.F
* Fix MPI/Makefile to properly inherit FFLAGS_MPI
* Initialise variables properly in meshsubs.F
* Add ifort to list of compilers tested for in configure


ARCH info:

Revision: siesta-devel--reference--1.4--patch-14
Archive: siesta@uam.es--2004
Creator: Alberto Garcia <wdpgaara@lg.ehu.es>
Date: Fri Jan  7 14:32:44 CET 2005
Standard-date: 2005-01-07 13:32:44 GMT
Modified-files: Docs/CHANGES Src/atom.f Src/diagk.F
    Src/fermid.F Src/version.F90 Src/writewave.F
New-patches: agarcia@siesta.arch--2004/siesta-devel--agarcia--1.4--patch-12
    agarcia@siesta.arch--2004/siesta-devel--agarcia--1.4--patch-13
    agarcia@siesta.arch--2004/siesta-devel--agarcia--1.4--patch-14
    agarcia@siesta.arch--2004/siesta-devel--agarcia--1.4--patch-15
    siesta@uam.es--2004/siesta-devel--reference--1.4--patch-14
Summary: Siesta 1.4.32 and 1.4.33, plus radfft removal from atom 
Keywords: cvs-date=2004/12/20,cvs-date=2005/01/05, merge from agarcia

Revision: siesta-devel--reference--1.4--patch-15
Archive: siesta@uam.es--2004
Creator: Alberto Garcia <wdpgaara@lg.ehu.es>
Date: Fri Jan  7 14:47:48 CET 2005
Standard-date: 2005-01-07 13:47:48 GMT
Modified-files: Docs/CHANGES Src/MPI/Makefile Src/aclocal.m4
    Src/configure Src/fft3d.F Src/m4/fortran.m4
    Src/meshsubs.F Src/mneighb.f
New-patches: siesta@uam.es--2004/siesta-devel--reference--1.4--patch-15
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix-2--1.4--patch-3
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix-2--1.4--patch-4
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix-2--1.4--patch-6
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix-2--1.4--patch-7
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-8
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-9
Summary: Bugfixes by Toby White: decls, inits, typos, autoconf
Keywords: Merged from -devel--twhite--patch-9


=======================================================================
Version: 1.4.33
Date: 2005/01/05 16:15 GMT
Title: Fixed bugs in diagk.F for writting of wave functions
Author: Pablo Ordejon <ordejon@icmab.es>

Some bugs introduced in the recent changes of diagk.F in the writting
of the wave functions are corrected.

Files:

diagk.F       All eigenvectors are computed when writing of wave 
              functions is required; the right information about
              eigenvalues is now passed.
writewave.F   Correct call to diagg.f to include new variable 
              neigwanted
version.F90 / CHANGES

=======================================================================
Version: 1.4.32
Date: 2004/12/20  8:30 GMT
Title: Fermi occupancy initialisation
Author: Julian Gale <julian@power.curtin.edu.au>

The occupancies are explicitly initialised to zero in fermid &
fermispin to ensure that the checking of occupancies in the build
of the density matrix is correct.

Files:

fermid.F      Initialisation of occupancies upto maxe added and
              cosmetic f90 changes made.
version.F90 / CHANGES

=======================================================================
Version: 1.4.31
Date: 2004/12/10  16:40 GMT
Title: bugfixes for Julian's diagon improvements
ARCH patches: siesta-devel--reference--1.4--patch-12,
              siesta-devel--reference--1.4--patch-13
Author: Toby White (committed by Alberto Garcia)

* scalapack_extra needs an extra couple of routines now. With
  these siesta will now compile with Sun's S3L library for 
  its blas/scalapack.
* In cdiag.F, ztrsm was being called with an incorrectly typed
  7th argument. This silently introduced random numbers into the
  energy.
* previous bugfix omitted kind= keyword from cmplx
* also apply same bugfix to pblas pztrsm calls.

ARCH info:

Revision: siesta-devel--reference--1.4--patch-12
Archive: siesta@uam.es--2004
Creator: Alberto Garcia <wdpgaara@lg.ehu.es>
Date: Fri Dec 10 16:26:27 CET 2004
Standard-date: 2004-12-10 15:26:27 GMT
Modified-files: Docs/CHANGES Src/cdiag.F
    Src/scalapack_extra.f
    {arch}/siesta-devel/siesta-devel--reference/siesta-devel--reference--1.4/siesta@uam.es--2004/patch-log/patch-4
    {arch}/siesta-devel/siesta-devel--reference/siesta-devel--reference--1.4/siesta@uam.es--2004/patch-log/patch-6
Modified-directories: {arch}/siesta-devel/siesta-devel--reference/siesta-devel--reference--1.4
    {arch}/siesta-devel/siesta-devel--reference/siesta-devel--reference--1.4/siesta@uam.es--2004
    {arch}/siesta-devel/siesta-devel--reference/siesta-devel--reference--1.4/siesta@uam.es--2004/patch-log
New-patches: siesta@uam.es--2004/siesta-devel--reference--1.4--patch-12
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--patch-8
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-8
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-11
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-5
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-6
Summary: bugfixes for Julian's diagon improvements
Keywords: scalapack blas ztrsm

Revision: siesta-devel--reference--1.4--patch-13
Archive: siesta@uam.es--2004
Creator: Alberto Garcia <wdpgaara@lg.ehu.es>
Date: Fri Dec 10 17:30:24 CET 2004
Standard-date: 2004-12-10 16:30:24 GMT
Modified-files: Docs/CHANGES Src/cdiag.F
New-patches: siesta@uam.es--2004/siesta-devel--reference--1.4--patch-13
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-7
Summary: fix ztrsm bugfix



=======================================================================
Version: 1.4.30
Date: 2004/12/10  15:45 GMT
Title: Add missing autoconf files (no arch change)
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

While committing patch-10 from arch, CVS did not flag
some files as "not added". They are added now.
These files should have been part of 1.4.28.

Files:

aclocal.m4 arch.make.in config.guess 
config.sub configure configure.ac       : New files

ARCH info:  No change (new files were part of
                       siesta-devel--reference--1.4--patch-10)
=======================================================================
Version: 1.4.29
Date: 2004/12/10  7:30 GMT
Title: New parallel denmat 
Author: Julian Gale <julian@power.curtin.edu.au>

The multiplication of cHc / cSc by c in denmat has been rewritten in
terms of using numct/listct, instead of numf/listf to go directly
to ftG/fstG, rather than via chcc/cscc. A number of related clean ups
in the parallel order N have been made.

Files:

atomlwf.F     The arrays nbNode and nbAtom have been removed
denmat.F      Algorithm changed for chc/csc x c step /
              arrays chcc & cscc eliminated / globaliseF not
              called anymore.
egandd.F      Arrays f & fs no longer passed to denmat.F
ener3.F       The array nbNode is no longer "use"d
ener3lomem.F  The array nbNode is no longer "use"d
globalise.F   Local elements of buxg are now explicitly zeroed for
              safety during rezero call.
onmod.F       The arrays nbNode and nbAtom have been removed
ordern.F      The arrays nbNode and nbAtom have been removed
version.F / CHANGES - as per usual
=======================================================================
Version: 1.4.28
Date: 2004/12/09  18:00 GMT
Title: Autoconf (siesta-devel--reference--1.4--patch-10)
Author: Toby White (committed by Alberto Garcia)

Changes:

 * Add requisite files for autoconf.
  - aclocal.m4 & configure are generated files.

 * Remove cleaning of aux_ files from Makefile

ARCH info:

Revision: siesta-devel--reference--1.4--patch-10
Archive: siesta@uam.es--2004
Creator: Alberto Garcia <wdpgaara@lg.ehu.es>
Date: Tue Dec  7 21:54:51 CET 2004
Standard-date: 2004-12-07 20:54:51 GMT
New-files: Src/.arch-ids/aclocal.m4.id
    Src/.arch-ids/arch.make.in.id
    Src/.arch-ids/config.guess.id
    Src/.arch-ids/config.sub.id
    Src/.arch-ids/configure.ac.id
    Src/.arch-ids/configure.id Src/aclocal.m4
    Src/arch.make.in Src/config.guess Src/config.sub
    Src/configure Src/configure.ac Src/m4/.arch-ids/=id
    Src/m4/.arch-ids/ACX_MPI.m4.id
    Src/m4/.arch-ids/TW_CHECK_BLACS.m4.id
    Src/m4/.arch-ids/TW_CHECK_FC_90.m4.id
    Src/m4/.arch-ids/TW_CHECK_FC_95.m4.id
    Src/m4/.arch-ids/TW_CHECK_FC_FPP.m4.id
    Src/m4/.arch-ids/TW_CHECK_FC_FPP_90.m4.id
    Src/m4/.arch-ids/TW_CHECK_FC_TR15580.m4.id
    Src/m4/.arch-ids/TW_CHECK_FC_TR15581.m4.id
    Src/m4/.arch-ids/TW_CHECK_SCALAPACK.m4.id
    Src/m4/.arch-ids/TW_FC_CHECK_DCFUNS.m4.id
    Src/m4/.arch-ids/TW_FC_CHECK_FLUSH.m4.id
    Src/m4/.arch-ids/TW_FC_ID.m4.id
    Src/m4/.arch-ids/TW_FC_ID_FLAGS.m4.id
    Src/m4/.arch-ids/TW_FIND_FC_BLAS.m4.id
    Src/m4/.arch-ids/TW_FIND_LAPACK.m4.id
    Src/m4/.arch-ids/TW_PATH_NETCDF.m4.id
    Src/m4/.arch-ids/TW_TRY_DC_LAPACK.m4.id
    Src/m4/.arch-ids/ac_config_aux_dirs.m4.id
    Src/m4/.arch-ids/fortran.m4.id Src/m4/ACX_MPI.m4
    Src/m4/TW_CHECK_BLACS.m4 Src/m4/TW_CHECK_FC_90.m4
    Src/m4/TW_CHECK_FC_95.m4 Src/m4/TW_CHECK_FC_FPP.m4
    Src/m4/TW_CHECK_FC_FPP_90.m4
    Src/m4/TW_CHECK_FC_TR15580.m4
    Src/m4/TW_CHECK_FC_TR15581.m4
    Src/m4/TW_CHECK_SCALAPACK.m4
    Src/m4/TW_FC_CHECK_DCFUNS.m4
    Src/m4/TW_FC_CHECK_FLUSH.m4 Src/m4/TW_FC_ID.m4
    Src/m4/TW_FC_ID_FLAGS.m4 Src/m4/TW_FIND_FC_BLAS.m4
    Src/m4/TW_FIND_LAPACK.m4 Src/m4/TW_PATH_NETCDF.m4
    Src/m4/TW_TRY_DC_LAPACK.m4 Src/m4/ac_config_aux_dirs.m4
    Src/m4/fortran.m4
New-directories: Src/m4 Src/m4/.arch-ids
Modified-files: Src/Makefile
New-patches: siesta@uam.es--2004/siesta-devel--reference--1.4--patch-10
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--base-0
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--patch-1
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--patch-2
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--patch-3
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--patch-4
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--patch-5
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--patch-6
    twhite@siesta.arch--2004/siesta-devel--autoconf--1.4--patch-7
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--base-0
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-1
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-2
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-7
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-4
Summary: Autoconf files -- merge of siesta-devel--twhite--1.4--patch-4
Keywords: 



=======================================================================
Version: 1.4.27
Date: 2004/12/09  17:30 GMT
Title: Fixes by Toby White (siesta-devel--reference--1.4--patch-9)
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Changes:

    * minor fixes to let NAG run with fewer complaints
    * - neigh.f: initialize CELAST & RGLAST before use
                 use precision module
                 add intents to arguments
      - meshmatrix.F: do not test size of unallocated array
      - matel.f & meshsubs.f: make sure literal constants have
                              correct precision
    * Rearrange Libs:
      - move IEEECK from blas.f to lapack.f
      - replace machine.f with LAPACK3E version which is not
        broken by optimization.
      - Src/Libs/makefile & Src/Makefile: add separate targets 
                                          for libblas.a and liblapack.a
    * Src/Makefile fixes: 
      - clear SUFFIXES at the start (fixes .mod Modula-2 problems)
      - Fix sed quoting in version rule (and tidy it up a bit)

ARCH info:

Revision: siesta-devel--reference--1.4--patch-9
Archive: siesta@uam.es--2004
Creator: Alberto Garcia <wdpgaara@lg.ehu.es>
Date: Tue Dec  7 20:22:24 CET 2004
Standard-date: 2004-12-07 19:22:24 GMT
Renamed-files: Src/Libs/.arch-ids/machine.f.id Src/Libs/.arch-ids/machine.F.id
    Src/Libs/machine.f Src/Libs/machine.F
Modified-files: Src/Libs/README Src/Libs/blas.f
    Src/Libs/lapack.f Src/Libs/machine.F Src/Libs/makefile
    Src/Makefile Src/matel.f Src/meshmatrix.F Src/meshsubs.F
    Src/neighb.f
Modified-directories: Src/Libs/.arch-ids
New-patches: siesta@uam.es--2004/siesta-devel--reference--1.4--patch-9
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-3
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-4
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-5
    twhite@siesta.arch--2004/siesta-devel--tw-bugfix--1.4--patch-6
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--base-0
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-1
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-2
    twhite@siesta.arch--2004/siesta-devel--twhite--1.4--patch-3
Summary: Merge of siesta-devel--twhite--1.4--patch-3
Keywords: 

** Transitional fixes:

	Removed obsolete files:

	Src/fdf:   fdf2.f  fdf3.f
        Src/NetCDF:  netcdf.f90.orig netcdf_overloads.f90.orig
        Util/Denchar/Src/NetCDF:  netcdf.f90.orig netcdf_overloads.f90.orig
	Docs/Tech: basis_generation.html index.html

=======================================================================
Version: 1.4.26
Date: 2004/12/05  3:30 GMT
Title: Fixes for test example bugs
Author: Julian Gale <julian@power.curtin.edu.au>

dfscf.f         Setting of Parallel_Run variable corrected
gradient.F      Reinitialisation of bux1/2 moved for correct 
                operation of serial version.
pdos.F          Deallocation of tmp moved to correct place
siesta.F        Initialisation of Escf given explicit limits
=======================================================================
Version: 1.4.25
Date: 2004/12/02  4:00 GMT
Title: Fix for parallel ON grad
Author: Julian Gale <julian@power.curtin.edu.au>

The algorithm used in gradient.F to calculate the gradients of the
LWF coefficients has been subtly modified. In the previous version
it was found that every so often a contribution from one Node to 
a gradient only present on another node was occuring. This is now
avoided by computing the first term in the gradient using globalised
versions of bux1/2 & ft/fst. Consequently it is now restricted to 
only those basis functions in grad for which the local node is
responsible. However, bux1 has to be globalised as well as bux2.

Files:
dhscf.F      Call to create mapping of Dscf to DscfL wrapped by check
             on number of processors, rather than local number of 
             orbitals in line with changes for version 1.4.24
gradient.F   Algorithm modifed as described above
version.F90, CHANGES
=======================================================================
Version: 1.4.24
Date: 2004/11/28 12:00 GMT
Title: Zero work on nodes fixes
Author: Julian Gale <julian@power.curtin.edu.au>

A few changes have been made to handle the case where a spatial
decomposition is used but there are no orbitals assigned to a
given node. 

Files:
denmat.F     Trap for nbasisloc = 0 in referencing arrays
dfscf.f      Local parallel variables set based on number of nodes
ordern.F     Trap for nbasisloc = 0 in referencing arrays
rhoofd.f     Local parallel variables set based on number of nodes
vmat.f       Local parallel variables set based on number of nodes
version.F90, CHANGES
=======================================================================
Version: 1.4.23
Date: 2004/11/24 12:00 GMT
Title: Increased maxclustersize in diagonalisation
Author: Julian Gale <julian@power.curtin.edu.au>

The default value of maxclustersize in rdiag/cdiag has been increased
from 0 to 12. In the case of degenerate eigenvalue clusters, this will
save one call to the diag routines if the number is less than 12.

Files:

cdiag.F      maxclustersize initialised to 12
rdiag.F      maxclustersize initialised to 12
version.F90, CHANGES
=======================================================================
Version: 1.4.22
Date: 2004/11/23 1:00 GMT
Title: Fix to setting of neigwanted for spin polarisation
Author: Julian Gale <julian@power.curtin.edu.au>

Small fix to siesta.F in the setting of neigwanted. Previous
version failed for spin polarisation because qtot needed to
be replaced by qs(is) in the calculation of neigmin. Check
against neigmin moved to last for safety too.

Files:

siesta.F      Setting of neigmin corrected for nspin>1
version.F90, CHANGES
=======================================================================
Version: 1.4.21
Date: 2004/11/22 8:40 GMT
Title: New spin polarised order N and diagonalisation routines
Author: Julian Gale <julian@power.curtin.edu.au>

Three major changes and lots of small ones. The key changes are:

(A) Matrix diagonalisation:

Matrix diagonalisation routines have been rewritten to give greater 
control over diagonalisation algorithms. Changes include:

(1) Option to use expert or simple interface
(2) Option to use "all in one" call of diagonaliser or components
(3) Parallel divide and conquer added
(4) Option for pre- and post- rotation of standard eigensolutions added
(5) SIESTA specific lapack calls added to reduce memory usage in
    divide and conquer algorithms
(6) Work space sizes now set to value that is likely to give the
    best performance rather than the minimum
(7) Names of control options now pre-fixed with "Diag."
(8) Facility for changing algorithm as a function of no. of SCF
    cycle included
(9) A 2-D decomposition is now the default for scalapack since this
    is found to give radically improved scaling in the parallel
    performance.

(B) Order N:

Parallel code has been rewritten based on 0.15 version, with a spatial
decomposition strategy. This is based on an approach that minimises
communication at the expense of memory by only passing between two
nodes once per array during the key order N routines. The routines
are designed to be efficient for large problems - i.e. when the size
of the interaction range is small compared to region size stored on
each node.

(C) Spin-polarised order N:

Separate Fermi lelvels can now be set for alpha and beta spin so as
to perform spin polarised order N. Look forward to double the
convergence problems though!

Files:

Docs/

siesta.tex         Modified to reflect the option changes for the 
                   new version.

Src/

alloc.F90          Unused variables removed
                   REPORT_LEVEL now broadcast to all nodes
                   Output now enable for level 4 case in parallel
atmfuncs.f         lmxkbfis accessed from module
atmparams.f        Default value of nsmx now = 2, rather than 1.
atomlist.f         Size of variable in write statement increased
atomlwf.F          New order N version with spin polarisation
bands.F            Reference to dot removed
                   occtol pased through to diag routines
                   Unused variables removed
cart2frac.f        Routine added to convert Cartesian to fractional coordinates
                   for use in spatial decomposition.
cdiag.F            Blacs communicators now only setup once
                   Rewritten to allow access to full (sca)lapack functionality
                   Parallel divide and conquer added
                   2-D decomposition added
cellxc.F           Double precision -> real(dp)
                   Unused variables removed
chkgmx.f           Function dot replaced by blas routine ddot
cgwf.F             New order N version with spin polarisation
chempot.F          Double precision -> real(dp) + module use onlys added
                   Order of dense matrix initialise loop swaped for efficiency
                   Timing calls placed in chempot rather than calling routine
chkgmx.f           Function dot replaced by blas routine ddot
conjgr.f           Function dot replaced by blas routine ddot
denmat.F           New order N version with spin polarisation
detover.F          Unused variables removed
dfscf.f            Double precision -> real(dp)
                   Small modifications of some operations to try to achieve
                   better performance.
dhscf.F            Function dot replaced by blas routine ddot
                   Modifications made for spatial decomposition when nuo = 0
                   Double precision -> real(dp)
                   Call to readsp moved to frstme section and results saved
                   Calls to mesh subroutines - arguments changed
diagg.F            Handling of small occupancies in DM build revised
diagk.F            Handling of small occupancies in DM build revised
                   Calculation of eigenvectors now restricted to the minimum needed
diagkp.F           Handling of small occupancies in DM build revised
                   Calculation of eigenvectors now restricted to the minimum needed
diag2g.F           Handling of small occupancies in DM build revised
diag2k.F           Handling of small occupancies in DM build revised
                   Calculation of eigenvectors now restricted to the minimum needed
diagg.F            Handling of small occupancies in DM build revised
diagsprl.F         Handling of small occupancies in DM build revised
                   Calculation of eigenvectors now restricted to the minimum needed
                   Note that it appeared that twice as many eigenvectors as possible
                   were being calculated.
                   calculated previous
diagon.F           New parameters passed through - iscf & occtol
                   Call to readsp moved to frstme section and results saved
diagpol.f          Call to cdiag modified
                   Memory handling modified
                   Local array aux removed
dsyevds.f          Setting of LOPT modified on return from dsytrd
efield.F           Function dot replaced by blas routine ddot
egandd.F           New order N version with spin polarisation
eggbox.F           Unused variables removed
ener3.F            New order N version with spin polarisation
ener3lomem.F       Lower memory version of ener3
extrapol.F         Trapped added for parallel case where nuo is zero
extrapolon.F       New order N version with spin polarisation
fermid.F           Unused variables removed
fft3d.F            MPI sub groups only created on first call 
fixed.F            Function dot replaced by blas routine ddot
globalise.F        Routine for communication in order N added
gradient.F         New order N version with spin polarisation
grdsam.F           Fa / stress removed and order of dealloc improved
hsparse.f          Calculation of numh & listh separated
initdm.F           Trap added for parallel case where nuo is zero
initparallel.F     Routine added to initialise parallel parameters
iodm.F             Variable declaration made more f90 like
iohs.F             Unused variables removed
iolwf.F            New order N version. Only new format files supported
iorho.F            Variable declarations moved to ifdef MPI block
                   Unused variables removed
kgrid.F            Error message for non-normalised weights replaced by
                   correction of weights.
ksv.f              Function dot replaced by blas routine ddot
ksvinit.f          Unused variables removed
linpack.F          Unused variables removed
Makefile           New routines added
matel.f            Double precision -> real(dp)
                   Unused variables removed
                   Upper bounds for arrays specified on call to ylmexp to
                   avoid out of bounds error messages when debugging. 
memoryinfo.F       DiagScale & TryMemoryIncrease removed
meshmatrix.F       Variable declarations moved to ifdef MPI block
meshsubs.F         Function dot replaced by blas routine ddot
                   Unused variables removed
minvec.f           Function dot replaced by blas routine ddot
                   Unused variables removed
mneighb.f          Module version of neighb added for order N
m_denchar_neighb.f Function dot replaced by blas routine ddot
mulliken.F         Minor tidy
onmod.F            New order N version with spin polarisation
on_subs.F          New order N version with spin polarisation
ordern.F           New order N version with spin polarisation
outcell.f          Double precision -> real(dp)
outcoor.f          Double precision -> real(dp)
overfsm.f          Double precision -> real(dp)
parallel.f         Default blocksize set to 24
parallelsubs.f     Support for spatial decomposition added
pdos.F             Unused variables removed, including array aux
pdosg.F            Call to rdiag modified
                   Unused variables removed
                   Memory handling for diagonalisation changed
pdosk.F            Call to cdiag modified
                   Unused variables removed
                   Memory handling for diagonalisation changed
phirphi_opt.f      Reference to dot removed
phonon.F           Double precision -> real(dp)
plcharge.F         Declaration of maxnhg moved to MPI block
poison.F           Style changed (partly) to resemble rest of code
propor.f           Convert to lower case style
pulayx.F           Indenting standardised
radfft.f           Unused variables removed
                   Double precision -> real(dp)
                   Order of memory allocation/deallocation optimised
ranger.f           Double precision -> real(dp)
                   Function dot replaced by blas routine ddot
rdiag.F            2-D decomposition added
                   Blacs communicators now only setup once
                   Rewritten to allow access to full (sca)lapack functionality
                   Parallel divide and conquer added
readsp.F           Duplicate definition of 'use parallel' removed
redata.F           Separate eta values for alpha & beta spin added
                   Occupancy tolerance made an input parameter
                   DiagScale & TryMemoryIncrease removed
                   DiagMemory option -> Diag.Memory for consistency
                   with new options in cdiag.F / rdiag.F
redcel.F           Double precision -> real(dp)
reoptical.F        Unused variables removed
rhoofd.f           Modifications made for spatial decomposition when nuo = 0
rhoofdsp.f         Unused variables removed
parallelsubs.f     Spatial decomposition included
propor.f           Numbered do loops removed
setatomnodes.F     Routine added to assign atoms to Nodes
setspatial.f       Spatial decomposition included
shaper.f           Double precision -> real(dp)
sig.f              Double precision -> real(dp)
                   Unused variables removed
siesta.F           New parameters passed to diagon / bands
                   Unused variables removed
                   Trap on error message for order N / PDOS combination added
                   so that it is only output if do_pdos is actually true.
                   Variable neigwanted added to restrict eigenstate computation
                   for gamma point case.
spatial.F          Spatial decomposition included
spher_harm.f       Function dot replaced by blas routine ddot
                   Referencing of passed arrays in YLMYLM shifted by 1 (Y &
                   DYDR now start at 0)
siesta.F           Call to ordern changed & eta now eta(2)
                   Pressure now output for variable cell optimisation
sys.F              Unused variables removed
transition_rate.F  Unused variables removed
typecell.f         Double precision -> real(dp)
uncell.f           Routine added for conversion of vectors to cell parameters
vmat.f             Trap for nuo = 0 added in parallel
                   Double precision -> real(dp)
vmatsp.f           Unused variables removed
vmb.F              Double precision -> real(dp)
writewave.F        Reference to dot removed
                   Calls to diag routines modified
                   Unused variables removed
xc.f               Double precision -> real(dp)
                   Unused variables removed
zheevds.f          Lower memory version of lapack routine zheevd

Src/Libs/

lapack.f           Routines required for new rdiag/cdiag added
=======================================================================
Version: 1.4.20
Date: 2004/11/19 8:40 GMT
Title: Fixed import of symbols from basis_types and basis_specs modules
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Files:
	Src/initatom.f 
            gen-basis.F
            basis_specs.f :  Added "private" clause to basis_specs
                             and imported symbols explicitly in
                             initatom and gen-basis.

	version.F90: Customary changes.

=======================================================================
Version: 1.4.19
Date: 2004/11/13 15:00 GMT
Title: Added pdosxml utility, ps rc table, MPI test files, "only" clauses
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Files:
	Util/pdosxml/       : Directory containing PDOS file processor
                              which uses the Fortran XML parser.

	Pseudo/atom/Contrib/atom_table.txt:
                              Table by Jose Luis Martins with suggested
                              values for the configurations and rc
                              parameters for pseudopotential generation.

        Src/MPI/blacs_prb.f90
                pblas_prb.f90
                pblas.dat
                pi3.F      :  Files to test the MPI installation, and
                              the blacs and pblas libraries.
        Src/MPI/Makefile   :  Support for the test files.
        Src/MPI/generate.sh:  Fix a typo (SV, VS overloads)
	
	Src/atom.f 
            basis_types.f  :  Added "only" clauses in import of
                              basis_types module.
        Src/Makefile       :  Added dependency for sys.o

	version.F90: Customary changes.

=======================================================================
Version: 1.4.18
Date: 2004/08/30 11:00 GMT
Title: Bug in noncollinear spin input angles, reported by Ivan Runger
Author: Jose M. Soler <jose.soler@uam.es>

With the noncollinear spin option, the input spin angles were not
converted to radians

Files:
	initdm.F : Factor pi/180 added to angles
	version.F90: Customary changes.

=======================================================================
Version: 1.4.17
Date: 2004/07/19 12:00 GMT
Title: More code cleanup after optical props import
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

A number of mostly cosmetic changes were necessary to make the code
acceptable by the Intel Compiler.

Files:

	fermid.F : Changed into a module

	Makefile bands.F conjgr.f dfscf.f 
	diag2g.F diag2k.F diagg.F diagk.F diagkp.F diagsprl.F
	diagon.F optical.F phirphi_opt.f rdiag.F 
	timer.F transition_rate.F writewave.F: Assorted cosmetic changes.

	scalapack_extra.f: New file to hold SCALAPACK routines not
                           in old versions.
	Sys/itanium2-mpi.make: Use scalapack_extr

	version.F90: Customary changes.

=======================================================================
Version: 1.4.16
Date: 2004/07/14 10:40
Title: HighestOccupiedBand fix
Author: Julian Gale <julian@power.curtin.edu.au>

The setting of the highest occupied orbital has been changed to
come from the top downwards to avoid problems with the
SingleExcitation option.

Files:

diagg.F   Setting of HighestOccupiedBand changed
diagk.F   Setting of HighestOccupiedBand changed
diagkp.F  Setting of HighestOccupiedBand changed

+ usual changes to CHANGES, version.F90
=======================================================================
Version: 1.4.15
Date: 2004/07/13 11:30
Title: Optical properties & improved gamma point diagonalisation
Author: Daniel Sanchez-Portal and 
        Julian Gale <julian@power.curtin.edu.au>

Optical property calculation reintroduced, modified for improved
efficiency, and parallelised. It should be noted that while it works
in parallel there is scope for improvement of the performance.

Arrays Haux, Saux & psi which are dense moved into a new module.

Memory requirements for gamma point divide and conquer option reduced 
by adding SIESTA specific routine that avoids copying.

Parallel divide and conquer for gamma point added.

Node & Nodes placed in parallel module.

Memory accounting made more reliable.

Files:

In Src/

Makefile           New routines & modules added
alloc.F90          Subroutine count changed so that memory is always
                   called to ensure that total memory count is correct.
atmfuncs.f         rphiatm made public for benefit of phirphi_opt
atomlwf.F          Node/Nodes now accessed from parallel module
bands.F            Node/Nodes now accessed from parallel module
                   Haux, Saux & psi accessed from module
broadcast_basis.F  Node/Nodes now accessed from parallel module
cdiag.F            Node/Nodes now accessed from parallel module
cellxc.F           Node/Nodes now accessed from parallel module
cgvc.F             Node now accessed from parallel module
cgwf.F             Node/Nodes now accessed from parallel module
chempot.F          Node/Nodes now accessed from parallel module
chkgmx.F           Removed
chkgmx.f           chkgmx.F but with no need for cpp since Node is
                   now accessed from parallel module
denchar.F          Node/Nodes now accessed from parallel module
denmat.F           Node/Nodes now accessed from parallel module
densematrix.f      Module containing Haux, Saux & psi added
detover.F          Node/Nodes now accessed from parallel module
dhscf.F            Node now accessed from parallel module
diagg.F            No. of eigenvectors argument added to rdiag call
                   Node/Nodes now accessed from parallel module
diag2g.F           Node/Nodes now accessed from parallel module
diag2k.F           Node/Nodes now accessed from parallel module
diagk.F            Node/Nodes now accessed from parallel module
diagkp.F           Node/Nodes now accessed from parallel module
diagon.F           Arrays Haux, Saux & psi now accessed from module
                   Node/Nodes now accessed from parallel module
diagpol.f          Arrays Haux & Saux now passed in
diagsprl.F         Node/Nodes now accessed from parallel module
dipole.F           Node/Nodes accessed from parallel module
dnaefs.f           Call to chkdim removed
dsyevds.f          Modified version of Lapack routine to save memory
dynamics.F         Renamed to dynamics.f
dynamics.f         As per dynamics.F except that Node is accessed from
                   parallel module & uses module precision
efield.F           Use of "double precision" replaced by real(dp)
                   Node/Nodes accessed from parallel module
eggbox.F           Node now accessed from parallel module
egandd.F           Node/Nodes accessed from parallel module
ener3.F            Node/Nodes accessed from parallel module
extrapol.F         Node/Nodes accessed from parallel module
extrapolon.F       Node/Nodes accessed from parallel module
fermid.F           Node/Nodes accessed from parallel module
                   Precision taken from module
fft3d.F            Node/Nodes accessed from parallel module
fixed.F            Node/Nodes accessed from parallel module
gauleg.f           File removed since it is no longer used
gen-basis.F        Node/Nodes accessed from parallel module
gradient.F         Node/Nodes accessed from parallel module
grdsam.F           Node accessed from parallel module
hsparse.f          Node/Nodes accessed from parallel module
idiag.f            Fast return added for case where MOLD is diagonal
                   already to avoid crash in kgrid
initdm.F           Node/Nodes accessed from parallel module
iodm.F             Node/Nodes accessed from parallel module
iohs.F             Node/Nodes accessed from parallel module
iolwf.F            Node/Nodes accessed from parallel module
ionew.F            Node accessed from parallel module
iorho.F            Node/Nodes accessed from parallel module
ioxv.F             Node accessed from parallel module
kgrid.F            Node accessed from parallel module
kgridinit.F        Cosmetic changes & Node accessed from parallel module
kinefsm.f          Call to chkdim removed
                   Node/Nodes accessed from parallel module
ksv.F              Renamed to ksv.f as cpp now not needed
ksv.f              As per ksv.F, but Node accessed from parallel module
                   Arrays Haux, Saux & psi now accessed from module
                   Size of psi arrays is reduced by a factor of nspin
                   which is not actually needed.
                   Output that was in the main routine is now here.
listsc.f           Redundant reference to external chkdim removed
madelung.F         Renamed to madelung.f as cpp now not needed
madelung.f         As per madelung.F, but Node accessed from parallel module
memory.F           Node/Nodes accessed from parallel module
meshmatrix.F       Use of "double precision" replaced by real(dp)
                   Node/Nodes accessed from parallel module
meshsubs.F         Node/Nodes accessed from parallel module
minvec.f           Precision now set from module
mulliken.F         Node/Nodes accessed from parallel module
naefs.f            Call to chkdim removed
nlefsm.f           Redundant reference to external chkdim removed
                   maxna now passed in so that it's size is increased
                   prior to possible optical calculation
                   Node/Nodes accessed from parallel module
ofc.f              Redundant reference to external chkdim removed
on_subs.F          Node/Nodes accessed from parallel module
optical.F          Added from version 0.15 & updated
                   Node/Nodes accessed from parallel module
ordern.F           Node/Nodes accessed from parallel module
overfsm.f          Node/Nodes accessed from parallel module
parallel.f         Node/Nodes placed in module
parallelsubs.f     Split out of parallel.f to contain subroutines
                   Default BlockSize increased to 24
pdos.F             Node/Nodes accessed from parallel module
                   Arrays Haux, Saux & psi now accessed from module
pdosg.F            No. of eigenvectors argument added to rdiag call
                   Node/Nodes accessed from parallel module
pdosk.F            Node/Nodes accessed from parallel module
phirphi.f          Use of chkdim removed
                   Calls to matel now wrapped by check on whether dk is
                   significant to avoid redundant calculation.
                   Node/Nodes accessed from parallel module
phirphi_opt.f      Added from version 0.15 & updated
                   Calls to matel now wrapped by check on whether dk is
                   significant to avoid redundant calculation.
                   Node/Nodes accessed from parallel module
phonon.F           Reference to chkdim being external removed
                   Node/Nodes accessed from parallel module
plcharge.F         Node/Nodes accessed from parallel module
poison.F           Node/Nodes accessed from parallel module
propor.f           Precision now set from module
pulayx.F           Node/Nodes accessed from parallel module
radfft.f           Redundant reference to external chkdim removed
rdiag.F            Rewritten version added
                   Node/Nodes accessed from parallel module
readsp.F           Node/Nodes now accessed from parallel module
redata.F           Node/Nodes now accessed from parallel module
                   Default MemoryFactor reduced to 1.2
reinit.F           Node/Nodes now accessed from parallel module
reoptical.F        Added from version 0.15 & updated
                   Node/Nodes now accessed from parallel module
repol.F            Use of "double precision" replaced by real(dp)
                   Node/Nodes now accessed from parallel module
savepsi.F          Node/Nodes now accessed from parallel module
shaper.f           Redundant reference to external chkdim removed
siesta.F           Pointers Haux, Saux & psi nullified
                   Calls to optical added
                   Resizing of arrays after nlefsm added if required
                   based on maxna
                   Output for KSV now moved into KSV_pol
                   Node/Nodes accessed from parallel module
sys.F              Node/Nodes now accessed from parallel module
timer.F            Node now accessed from parallel module
                   Made implicit real(dp) rather than double precision
transition_rate.F  Added from version 0.15 & updated
                   Node/Nodes accessed from parallel module
vmb.F              Use of "double precision" replaced by real(dp)
                   Node/Nodes accessed from parallel module
xijorb.f           Node/Nodes accessed from parallel module
writewave.F        Arrays Haux, Saux & psi now accessed from module
                   Node/Nodes accessed from parallel module

In Src/Libs/

lapack.f           Extra-routines added for rdiag.F

In Util/

optical            Directory renamed to Optical for style consistency

In Util/Optical

README             Reinstated from version 0.15
input.f            Reinstated from version 0.15
optical.f          Reinstated from version 0.15
si.EPSIMG          Reinstated from version 0.15

In Docs/

siesta.tex         Optical option documented
CHANGES            This documentation added!
=======================================================================
Version: 1.4.14
Date: 2004/06/23 14:30
Title: Diag speed up
Author: Julian Gale <julian@power.curtin.edu.au>

Saving of CPU time in diag*.F by skipping build of density matrix
when the band occupancy is less than a small threshold.

Files:

Src/diag2g.F     HighestOccupiedBand pointer added to limit D build
Src/diag2k.F     HighestOccupiedBand pointer added to limit D build
Src/diagg.F      HighestOccupiedBand pointer added to limit D build
Src/diagk.F      HighestOccupiedBand pointer added to limit D build
Src/diagkp.F     HighestOccupiedBand pointer added to limit D build
                 Sizes of listhptr/listdptr/numh/numd changed to maxuo
Src/diagsprl.F   HighestOccupiedBand pointer added to limit D build
=======================================================================
Version: 1.4.13
Date: 2004/06/23  9:30
Title: Even more code cleanup
Author: Julian Gale <julian@power.curtin.edu.au>

Some minor fixes to compilation and other small changes

Files:

Src/atom.f          Check on value of nsemx being exceeded for qPAO added
Src/electrostatic.f npairs is now used from atm_types so that the value is
                    the same on all nodes
Src/dfscf.f         indxuo now accessed from module
Src/dhscf.F         First dimension of DVxcdn made equal to ntpl for
                    correct bounds checking in cellxc.F even though
                    never referenced 
                    indxuo no longer passed through
Src/grdsam.F        indxuo no longer passed through
Src/meshmatrix.F    indxuo now accessed from module
Src/parallel.f      Default blocksize increased to 16
Src/rhooda.f        indxuo now accessed from module
Src/rhoofd.f        indxuo now accessed from module
Src/rhoofdsp.f      indxuo now accessed from module
Src/siesta.F        ifdef NODAT wrapping of mpi_siesta use statement
                    added to select correct quantity for using
                    indxuo no longer passed to grdsam & dhscf
Src/vmat.f          indxuo now accessed from module
Src/vmatsp.f        indxuo now accessed from module
=======================================================================
Version: 1.4.12
Date: 2004/06/10 21:00
Title: More code cleanup
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

* Declaration of variables in some files.
 (implicit statements for real variables remain...)

File siesta/Src/dot.f 
File siesta/Src/electrostatic.f 
File siesta/Src/fermid.F 
File siesta/Src/idiag.f 
File siesta/Src/linpack.F
File siesta/Src/paste.f 
File siesta/Src/poison.F 
File siesta/Src/pseudopotential.f
File siesta/Src/ranger.f 
File siesta/Src/reclat.f 
File siesta/Src/timer.F 
File siesta/Src/xc.f 

* Some changes to the MPI compilation setup. File mpif2sane.f90 intended
  to replace the direct  inclusion of mpif.h in the future.

File siesta/Src/MPI/Makefile              (new symbol for NAG compiler)
File siesta/Src/MPI/mpi.F                 (remove some mpi_2XX symbols)
File siesta/Src/MPI/mpi__include.f90              ( " )
File siesta/Src/MPI/mpif2sane.f90 is new.
File siesta/Src/Sys/macosx-nag-mpi.make is new.

=======================================================================
Version: 1.4.11
Date: 2004/06/08 12:00
Title: Use of accessibility clauses to help compilers + cleanup
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

* Some compilers (notably Intel's) have trouble compiling certain
sections of the code, probably because of limitations in their
namespace-handling internal structures in some versions.  To help
them, and also as a matter of good programming practice, it is
advisable to follow these basic guidelines:

1. Make all modules "private" by default. Public entities should be
given the "public" attribute explicitly. This prevents the leaking of
symbols from other used modules.
2. Use the "only:" qualifier to import symbols from modules. This is
particularly necessary for program units which use a lot of modules, such
as siesta.F itself.

Files changed: 

        Src: pdos.F redata.F siesta.F cdiag.F rdiag.F 
             atmfuncs.f old_atmfuncs.f basis_types.f atm_types.f
	     atom.f transfer.f ionew.F initatom.f atomlist.f
             dfscf.f rhoofd.f rhoofdsp.f vmat.f vmatsp.f

	Src/MPI: mpi.F mpi__include.f90        (removed mpi.f90)

* On_subs has been turned into a module.

	Src: on_subs.F egandd.F

* The calculation of the electrostatic correction tables has been moved out
  of the basis-generation modules and placed in a new one (electrostatic.f).
  Gen-basis and the rest of the basis-generation code are now more decoupled
  from the rest of the program, and a number of duplicate routines have
  been removed. The module old_atmfuncs.f has been streamlined, with the
  removal of a number of obsolete routines and data structures.

Files:

	Src: old_atmfuncs.f atom.f transfer.f initatom.f gen-basis.F
             Makefile basis_io.F

* Fixed MPI/Makefile to make the NODAT option pass through for the 
  compilation of the MPI modules. 

	Src/MPI/Makefile

* New directory Src/wxml for XML-writing modules. The new code is being
  progressively integrated into Siesta. 

  Files:   
		Src: pdos.F   (some new calls, and extra file)
                     Makefile (support for wxml)

	        Src/wxml: New directory

   (Developers: use "-d" flag to cvs update to pick up the new directory)

* Removal of unused symbols, declaration of implicitly-typed variables,
  use of standard kinds for real variables (some files only)

	Src: chkgmx.F bessph.f pseudopotential.f atm_types.f basis_types.f
             atom.f transfer.f basis_io.F

* Tab removal and other cosmetic changes:

	Src: iopipes.F90 chempot.F fermid.F alloc.F90 matel.f meshsubs.F
             neighb.f ranger.f ran3.f overfsm.f

* Wrapping of MPI I/O (Julian Gale):

	Src: diagon.F  (spiral case was not wrapped)

* Change in deallocation order (Julian Gale):

        Src: rhoofd.f vmat.f

* In timer.F, the call to the CPUTIM routine has been eliminated in favor
  of the f95 standard cpu_time. A new file "cpu_time.f90" has been added
  for compilers which are not f95-compliant (PGI). Current SYS symbols
  in .make files are redundant but harmless.

	Files:  Src:  timer.F cpu_time.f90 (new file)
                Src/Sys:  pgf90*.make  (use cpu_time in SYS)

* New .make files for compilation on a new machine with itanium2 processors
  and myrinet networking (using Intel's 7.1 compiler)

	Files:  Src/Sys: itanium2.make itanium2-mpi.make

* Pseudo/atom/Tutorial: 
	scripts ae.sh, pg.sh, and pt.sh made more robust.
        New file subps.gps for shell interoperability.

  version.F90                : Customary changes
  Docs/CHANGES               : Customary changes

========================================================================
Description: New .make and SYS files to support IBM's pessl library
Version: 1.4.10
Date: 2004/02/04 16:00
Title: Support for pessl on IBM machines
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description: New .make and SYS files to support IBM's pessl library

Files:

  Src/Sys/ibm-regatta-p4.make: New file
  Src/ibm_pessl.f            : New file with extra code 
  version.F90                : Customary changes
  Docs/CHANGES               : Customary changes

=======================================================================
Version: 1.4.9
Date: 2004/02/01 18:00
Title: Miscellaneous fixes for portability
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description: Consolidation of various fixes for portability.

Files:

Src/basis_types.f  : use kind(dp) instead of real*8
Src/iodm.F         : use ionew
Src/pseudopotential.f : use ionew
Src/pdos.F         : Remove unused variables, arguments, and functions.
Src/siesta.F       : Remove unused arguments in call to pdos. 
                     Remove hollerith constructs.
Src/periodic_table.f : Make mass data real, instead of double precision.
Src/xlf.f          : New file for IBM-XL support (flush routine)
Src/f2kcli.F90     : New file for command-line argument parsing.
Src/iopipes.F90    : Add conditional block for NAG compilation.

Src/Makefile       : Remove f2kcli from gen-basis and siesta (mpich problems)
Src/gen-basis.F    : Remove f2kcli code.

Src/denchar.F
    m_denchar_geom.f
    m_denchar_init.F
    m_denchar_io.F	
    m_denchar_neighb.f
    m_denchar_work.f   : New files for denchar in top directory.  
Util/Denchar/Docs/denchar.tex: Manual for denchar updated.
Util/Denchar/Docs/CHANGES    : Updated to reflect change in code location.
Util/Denchar/Src/Makefile    : Disabled.

Util/Contour/grid2d.f : float to dble. Open statements changed.
Util/PyAtom: shape.sh : extracts cell shape data from output file.


Src/NetCDF/Makefile: add default line. Add FFLAGS_NETCDF symbol.
Src/Libs/makefile  : do not include machine.o in dc_lapack.a
Src/Sys/pgf90.make : Add dc_lapack.a to COMP_LIBS. Tab for atom.o. CDF optional
Src/Sys/pgf90-mpich.make : As above plus some documentation on MPI stuff
Src/Sys/macosx-xlf.make
Src/Sys/macosx-nag.make  : New files for MacOS X support.
Src/Sys/nag-darwin-nolibs.make : Removed. Obsolete

Util/PyAtom/local.biggles.py: change Vlocal to Reduced_vlocal.

=======================================================================
Version: 1.4.8
Date: 2004/01/26 16:00
Title: Fixes in inver, pulay, fermispin, plstm.
Author: Pablo Ordejon <ordejon@icmab.es>

Description: Fixes to correct bugs and/or improve the stability 
             of the inversion routines, the Pulay mixing and the fixed 
             spin calculations. These fixes correct the degradation
             of performance of selfconsistency convergence 
             of Siesta 1.3 compared to 1.2.  
             Small change on utility plstm.f to avoid problems 
             in some compilers.
             
Files:
  cgwf.F             : New interface with inver
  dynamics.F         : New interface with inver
  diagg.F            : Corrects call to fermispin
  diagk.F            : Corrects call to fermispin
  diagkp.F           : Corrects call to fermispin
  fermid.F           : Now contains fermispin subroutine; 
                       fermispin now calculates and returns entropy.
  fermispin.F        : Elliminated; content included now in fermid.F
  inver.f            : New interface, returns error message if 
                       unsuccessful execution
  pulayx.F           : New interface with inver; corrected stability
  version.F90        : Customary changes
  Makefile           : Elliminated reference to fermispin.F
  Docs/CHANGES       : Customary changes
  Util/plstm.f       : Changed input flags

=======================================================================
Version: 1.4.7
Date: 2004/01/22 17:00
Title: Bug in normalization of DOS
Author: Javier Junquera <jjunquer@physics.rutgers.edu>

Description: The Density Of States was divided twice by the number
             of k-points. This bug is present since version 1.2.41.
  
Files:
  pdosk.F            : The number of k-points, NK, has dropped 
                       from the normalization factor, NORM
  version.F90        : Customary changes
  Docs/CHANGES       : Customary changes

=======================================================================
Version: 1.4.6
Date: 2004/01/19 16:30
Title: Siesta as a subroutine
Author: Jose M. Soler <jose.soler@uam.es>

Description: A new utility routine module that can be used by external
  programs to communicate with siesta processes (running separatedly)
  to send coordinates and receive forces, as if siesta were a 
  conventional force-field subroutine.
  
Files:
  iopipes.F90 : New module with the routines to communicate with the
                user's driver program through Unix pipes
  redata.F    : Accepts new option MD.TypeOfRun=forces
  reinit.F    : Appends a number to file INPUT_TMP
  siesta.F    : Calls to the communication routines added
  Makefile    : Added file iopipes.o
  Util/SiestaSubroutine : New directory. Contains the module fsiesta, 
                          with the routines to be called by the user's
                          program, and the subdirectory FmixMD with an
                          example. See its file README for details.
  Docs/siesta.tex       : Explains the new option MD.TypeOfRun=forces

=======================================================================
Version: 1.4.5
Date: 2003/12/05 13:45
Title: Bug fix (initdm)
Author: Jose M. Soler <jose.soler@uam.es>

Description:
  A small denominator has been added to avoid a division by zero when
one tries to polarize a closed-shell atom. A warning has also been 
added for this case.

Files:
  initdm.F: small denominator and warning added

=======================================================================
Version: 1.4.4
Date: 2003/11/18 19:00
Title: Bug fix (initwave)
Author: Javier Junquera <jjunquer@physics.rutgers.edu>

Description: 
  Two allocatables variables were incorrectly deallocated

Files:
  writewave.F: inquiry for the status of values and integs before deallocate

=======================================================================
Version: 1.4.3
Date: 2003/11/07 17:00
Title: Bug fix (Plrho)
Author: Jose M. Soler <jose.soler@uam.es>

Description:
  An index was incorrectly initialized, causing problems in spin
polarized systems

Files:
  Util/Plrho/iorho.f  : Instruction ind=0 moved inside spin loops

=======================================================================
Version: 1.4.2 
Date: 2003/11/05 17:30
Title: Bux fix (initwave)
Author: Javier Junquera <jjunquer@physics.rutgers.edu>

Description: 

 A memory problem, that appeared when more than 4 values were 
 introduced in each line of the block WaveFuncKPoints, has been fixed.
 The variables values and integs in the subroutine initwave
 (module writewave) have been redefined as allocatable.

Files:
    writewave.F : variables values and integs defined as allocatable
    version.F90, CHANGES : Customary changes
    siesta.tex : Change of affiliation

=======================================================================
Version: 1.4.1 
Date: 2003/09/10 18:30
Title: version.F --> version.F90
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

Rewrite version.F as a free-format f90 file (and thus change the
extension to .F90). Modify Makefile accordingly.

Files:
    version.F  	: removed
    version.F90	: new file
    Makefile	: updated to reflect new .F90 extensions.

=======================================================================
Version: 1.4.0 
Date: 2003/07/30 20:45
Title: This is 1.4.0 in main trunk
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:
  This is 1.4.0 in main trunk. Any revision on 1.3 should be
done in the 1.3 branch as well as on this trunk

Files:
  build_serial and build_parallel (remove Tests)
  siesta.tex: removed reference to msiesta in constr.f 
  version.F CHANGES siesta.ind
=======================================================================
Version: 1.3 and 1.4.0 not yet
Date: 2003/07/19 19:15
Title: Pre Tagging and branching 1.3 and 1.4.0: Miscellanea
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:
  Some pre-branching changes: Mesh cutoff to 100Ry default;
  Makefile to show contents of FFLAGS etc in output;
  Manual: index entry for geometry constraints + warning about XV
          for supercell.

Files:
  Makefile, redata.F, siesta.tex, siesta.ind, version.F, CHANGES
=======================================================================
Version: 1.3 not yet
Date: 2003/07/23 14:15
Title: Minor bug corrections
Author: Pablo Ordejon <ordejon@icmab.es>

Description:
  A minor bug in the parallel execution in writewave.F has
been fixed. Two bugs in the output of Denchar have been
fixed.

Files:
  Src/writewave.f:  Parallel execution bug corrected
  Util/Denchar/Src/wrout.F:  Bug in writting of output corrected
  Util/Denchar/Src/itochar.F:  Bug in writting of output corrected
  Util/Denchar/Docs/denchar.tex, CHANGES:  Customary changes
  siesta.tex, CHANGES, version.F, release_notes_1.3:  Customary changes
=======================================================================
Version: 1.3 and 1.4.0 not yet
Date: 2003/07/19 19:15
Title: Pre Tagging and branching 1.3 and 1.4.0
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:
  The 1.3 package was to be defined at this stage. 
But not yet, since Examples have to be updated with 1.3 and a few
last minute things popped up. Later, it will be tagged
and a branch opened for bug corrections of 1.3 (new versions
with fixes will be produced and distributed when/if needed) while
the main branch trunk becomes 1.4.0 for further development.

Files:
  CHANGES, siesta.tex, version.F
=======================================================================
Version: 1.2.45
Date: 2003/07/17 22:00
Title: Slight change in Makefile 
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:
  The Makefile has been slightly changes to avoid problems with
the sed processing from version.F to temp.F and temp0.F

Files:
  Makefile + customary (Licence files added).
=======================================================================
Version: 1.2.44
Date: 2003/07/15 14:00
Title: Parallel eggbox
Author: Julian Gale <j.gale@imperial.ac.uk>

Description: 

The eggbox routine was tripping up parallel execution of the code
and so this has been handled.

Files:

diagon.F  : Order of memory deallocation reversed to be stack friendly
eggbox.F  : Calls to fdf are now handled in parallel and data is
          : broadcast where necessary
siesta.F  : First call to eggbox is now for all processors
version.F & CHANGES
=======================================================================
Version: 1.2.43
Date: 2003/07/14  1:30
Title: Fixed fermid
Author: Julian Gale <j.gale@imperial.ac.uk>

Description:

The routine fermid.F has been bug fixed. The variable NH was not
broadcast when read in parallel and not explicitly saved between
calls. Also the ocf string was set to two different defaults in
STEPF vs ENPY, which has been standardised.

Files:
fermid.F    : Changes as listed above.
version.F and CHANGES
=======================================================================
Version: 1.2.42
Date: 2003/07/11 11:00
Title: Berry phase continuity for polarization calculation
Author: Daniel Sanchez-Portal

Description:

The Berry phase is obtained as a surface integral (in reciprocal
space) of a so-called quantum phase.
When evaluating the integrand we have an arbitrariness of 2pin
in each point of the 2D mesh. This arbitrariness has
to be eliminated by enforcing the continuity of the integrand.
A few code lines have been added to subroutine ksv.F in order
to ensure this continuity. 

Files:
ksv.F  : few lines of code added and new array phaseold(2)
version.F and CHANGES
=======================================================================
Version: 1.2.41
Date: 2003/07/09 11:30
Title: Parallel PDOS, gamma point and K point weighting
Author: Julian Gale <j.gale@imperial.ac.uk>

Description:

The PDOS option has been extended to allow for the gamma point, 
K point weighting and parallel execution.

Files:

Makefile   : pdosg.F added
pdos.f     : renamed to pdos.F
pdos.F     : modified version of pdos.f to handle parallel execution
pdosg.F    : routine for PDOS calculation at gamma point added
pdosk.f    : renamed to pdosk.F
pdosk.F    : modified version of pdosk.f to handle parallel execution
siesta.F   : Parallel call to pdos now allowed and variables broadcasted
siesta.tex : Comment on order-N in parallel added
version.F and CHANGES
=======================================================================
Version: 1.2.40
Date: 2003/07/02 19:30
Title: renaming of module mpi to mpi_siesta
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:

Renaming of module mpi to mpi_siesta to avoid name clashes

Files:

alloc.F90, *.F
version.F and siesta.tex and CHANGES
=======================================================================
Version: 1.2.39
Date: 2003/06/30 19:00
Title: renaming of realloc and dealloc to re_alloc and de_alloc
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:

Renaming of realloc and dealloc to re_alloc and de_alloc
to avoid problems with some (not so standard but important)
compilers.

Files:

alloc.F90, siesta.F, atomlist.f, on_subs.F,
cdiag.F, rdiag.F, coor.f, dfscf.f, matel.f,
version.F and siesta.tex and CHANGES 
=======================================================================
Version: 1.2.38
Date: 2003/06/30 18:00
Title: Small bug in siesta.F
Author: Pablo Ordejon <ordejon@icmab,es>

Description:

A small bug in siesta.F that showed up in alpha machines has
been corrected, about the handling of undefined wfk.

Files:

siesta.F
Customary version.F siesta.tex CHANGES
=======================================================================
Version: 1.2.37
Date: 2003/06/30 15:35
Title: Update of Util: README and inclusion og grid1d + release.notes
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:

Grid1d utility added (very simple extracting of 1D information from
anthing in the 3D grid in the RHO format). It interpolates.
Update in Util/README and in release.notes_1.3

Files:

Util/ grid1d.f grid1d-raw.in grid1d-noraw.in README
Docs/ release.notes_1.3
Customary version.F siesta.tex CHANGES
=======================================================================
Version: 1.2.36
Date: 2003/06/30 13:15
Title: Corrected parallel Mulliken for iopt = 3
Author: Julian Gale <j.gale@imperial.ac.uk>

Description:

The use of Mulliken level 3 in parallel was causing the code to print
out incorrect results and hang. This was due to referencing of the
local number of basis functions where the global number should be used.
This is now fixed so that the serial and parallel results should be
congruent for this option.

Files:

mulliken.F  : nbasistot now passed in instead of nbasis (global vs
            : local). nbasis (local) is computed locally and the
            : iopt = 3 code has been corrected to ensure that the
            : orbitals are printed in the global order
siesta.F    : no_u passed to mulliken instead of no_l
version.F, CHANGES : customary changes
=======================================================================
Version: 1.2.35
Date: 2003/06/30 12:00
Title: Write Wavefunctions capability, bug corrections and new utils
Author: Pablo Ordejon <ordejon@icmab.es>

Description:

1) The capability to write wavefunctions coefficients of selected
   wavefunctions at selected k-points has been implemented.
   Dumps the coefficients to a binary file (a utility program
   to convert it to readable form is also provided in Util),
   and also to the main output if desired.
   Note that a new logical variable (getPSI) has been
   included in the interface of diagg and diagk, so that they
   calculated the wavefunctions that the user wishes to print.

2) Several bugs (mainly in parallel mode runs) are corrected

3) Three new utility programs are included

Files:
/Docs
  siesta.tex : customary changes; explanation of utility to write wfs
  siesta.ind : customary changes
  CHANGES    : customary changes
/Src
  bands.F    : comply to new interface of diagg and diagk; 
               bug (intr. in 1.2.31) corrected in call to diag routines
  diagg.F    : capability to write wfs; new logical flag in interface
  diagk.F    : capability to write wfs; new logical flag in interface
  diagon.F   : capability to write wfs to file
  fermid.F   : parallel mode bug fix
  inver.f    : augmented for robustness in case LAPACK fails
  Makefile   : miscellaneous changes
  pulayx.F   : augmented for robustness in case residual is exacly null
  siesta.F   : changes for capability to write wavefunctions
  version.F  : customary changes
  vmb.F      : parallel mode bug fix
  writewave.F: new: module that handles the wfs writting
/Util
  README     : update list of utility programs
  grid2cube.f: new: converts siesta grid files to Gaussian Cube format
  pltstm.f   : new: a simple program to simulate STM images
  readwf.f   : new: utility to read wfs file to user-friendly format
=======================================================================
Version: 1.2.34
Date: 2003/06/30  9:00
Title: Correction in order-N - C save
Author: Julian D. Gale <j.gale@ic.ac.uk>

Description:

The contents of the C array is now preserved when reallocating after
the call to cspa since this is not read again.

Files:

ordern.F   : Contents of C copied to rtmp2 and back again after realloc
version.F, CHANGES    : customary changes
=======================================================================
Version: 1.2.33
Date: 2003/06/26 16:20 UTC
Title: Portability bug fixes and enhancements
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

A number of fixes related to portability problems:

* Handling of array shapes in radfft. Related: explicit interface
for ordern and hsparse routines.

* Bug fix in new fermid.F routines.

* Initialization bug fix in on_subs.F.

* Support for systems without the LAPACK 'divide and conquer' routines
in their system libraries. 

* Warning for MPI data type codes.

* Improved compilation in subdirectories.

* Apparently cosmetic changes intended for the NAG compiler.


Files:

ordern.F, hsparse.f : Now wrapped in modules m_ordern and m_hsparse, 
		      respectively. No file name change.
interfaces.f        : Removed.
siesta.F            : Now 'use's m_ordern and m_hsparse.
                      Initialization of two logical variables.

radfft.f            : Now wrapped in module m_radfft. 
                      No file name change.
matel.f, atom.f,
basis_io.F          : Now 'use' m_radfft.

atom.f              : Cosmetic changes, and simplification of ghost 
                      signals.

Makefile            : Support for new module dependencies.
                      Better handling of compilation in subdirectories,
                      in particular ranlib handling.

fermid.F            : variable ocupfncft now saved.
on_subs.F           : ncmax initialized before its use.
poison.F            : (cosmetic?) modulo instead of mod
inver.f             : (cosmetic?) reversed declaration order.

(these changes committed at an earlier date:)
Libs/  :
lapack.f, dc_lapack.f : Split divide and conquer routines.
makefile              : Better logic for support of 'dc'-less systems.

MPI/   :
Makefile              : Warning about kind numbers.

Sys/   :
.make files           : Explicit RANLIB macro.
                        Alpha files might require dc_lapack split.
README                : Explain dc_lapack issue.
lahey-nolibs.make
pgf90-nolibs.make     : New files.
nag-darwin-nolibs-make: NAG MacOSX macros (some hfs issues)

version.F, CHANGES    : customary changes
=======================================================================
Version: 1.2.32
Date: 2003/06/23 16:00
Title: Correction in order-N + PDOS in manual
Author: Julian D. Gale <j.gale@ic.ac.uk>

Description:

Two small corrections have been made. The first fixes an out of bounds
error that can occur when restarting an order-N calculation and the
second is the removal of the limitations for PDOS from the text in the
manual to reflect recent modifications.

Files:
ordern.F     : maxnc is now the larger of ncmax and maxnc after
               reallocation to ensure that passed first dimension is
               correct for listc/listcold
siesta.tex   : Text concerning PDOS updated
version.F, CHANGES, siesta.tex, siesta.ind: customary changes
=======================================================================
Version: 1.2.31
Date: 2003/06/23 12:00
Title: Methfessel-Paxton smearing function
Author: Pablo Ordejon <ordejon@icmab.es>

Description:

   The smearing function scheme of Methfessel and Paxton has been
implemented. For metals, it allows for a much better convergence
to the ground state properties even with large smearing temperatures.
Improved convergence to self-consistency and k-points is also
achieved.
   A few changes have been made in the old Fermi-Dirac function, too.
In particular, the old function stepf included a factor 2 that
has been removed (to make the definition of the Fermi-Dirac
and Methfessel-Paxton functions correspond to the usual ones),
and added elsewhere. Therefore, the diagonalization
routines have been updated accordingly.
   Also, the calculation of the entropy has been removed from siesta.F,
because in the Methfessel-Paxton scheme this term depends
on the eigenvalues, which are not available in the main program.
The calculation of the entropy is done now in fermid.F, and
passed to siesta.F through the diagonalization routines.

Files:
siesta.F    : changes to remove entropy and calculation
diag2g.F, diag2k.F, diagg.F, diagk.F, diagkp.F, diagon.F, diagsprl.F:
              changed to pass Entropy to siesta.F, and redefined stepf
fermid.F    : Methfessel-Paxton included; redefined stepf
fermispin.F : redefined stepf
version.F, CHANGES, siesta.tex, siesta.ind: customary changes
=======================================================================
Version: 1.2.30
Date: 2003/06/23 11:45
Title: Miscellaneous corrections
Author: Pablo Ordejon <ordejon@icmab.es>

Description:

   Several corrections have been made (thanks to those who reported the 
problems):

1) Maxwell-Boltzmann initial velocities were not obbeying the constraints 
   imposed in fixed.F (problem reported by Masaya Ishida).  This has now 
   been fixed, so that dynamics runs do obbey the constraints.  
2) A correction in the dynamics routines has been made to account for the 
   number of imposed constraints in the definition of the temperature. 
   As a consequence, a new variable has been included in the argument list 
   of constr.f to output the number of constraints imposed by the user. 
3) The example of the constr.f provided to make the relative height of two 
   atoms constant, only worked for the case of two atoms with the same mass. 
   I have rewriten it for the general case of two different masses, and 
   changed the example in the manual and the fixed.F routine accordingly.
4) Some changes in the initiallization of the MD variables, to make the start 
   of the run more in accord with the imposed initial velocities.
5) The inver.f90 routine provided by William Mattson has been removed, 
   because it caused some problems in handling nonorthogonal cells, in the 
   variable cell dynamics (problem reported by Benoit Braida). I have written 
   a new inver.f code that used LAPACK routines to invert a matrix. All the 
   calls to the old inver2 and the old inver.f90 routines are now re-directed 
   to the new inver. The appropriate LAPACK routines that were not included in 
   Libs/lapack.f have been included.
6) The fdf reading of the Divide-and-Conquer option is now only done in the 
   first call to the diagonalization routines, to avoid huge out.fdf files
   when a large number of k-points is used.
7) A recent change in matel.f made by A. Garcia to avoid problems with the 
   NAG compiled have been reverted, since it causes problems in other 
   compilers. This still needs to be worked out!!
8) A bug in mulliken.F that caused the overlap population matrix between atoms
   not to be symmetric when k-points were used (pointed out by P. Alemany) has 
   been corrected.
9) A small bug (found by S. Reich) in vibrator.F has been corrected. Besides, 
   fdbuild.F has been slightly changed to include more significant digits in 
   the output. Finally, some input files and updated output files have been 
   provided so that the user can reproduce the examples of Vibra.
   

Files:
/Docs
  siesta.tex : customary changes; explanation of new interface of constr.f 
               and correction to example case
  CHANGES    : changes as customary
/Src
  cdiag.F    : read fdf option D&C only fisrt time  	
  cgwf.F     : call to new inver routine
  constr.F   : interface with new output variable ntcon
  dynamics.F : miscellaneous: temp. definition with constraints; 
               new init. of some dynamics
  fixed.F    : new interface with constr.f; define tot. nr. of constraints;
               correct example case
  inver.f    : new file - new inversion routine
  inver.f90  : removed
  matel.f    : recent change by A. Garcia reverted
  mulliken.F : bug corrected: lines 219 and 226
  pulayx.F   : call to new inversion routine; comment invert2 (not used now)
  rdiag.F    : read fdf option D&C only fisrt time
  siesta.F   : misc. changes in calls to dynamics and constraint routines
  version.F  : customary changes
  vmb.F      : changes to account for constraints in definig initial velocities
/Src/Include
  constr.f   : interface with new output variable ntcon
/Src/Libs
  lapack.f   : routines necessary to invert matrices included
/Util/Vibra
  README     : update email address
/Util/Vibra/Docs
  CHANGES    : new file; records changes in Vibra package
  vibra.tex  : some changes in user guide
/Util/Vibra/Examples
  README     : new file; explanation to run examples
  si2.bands  : updated output file
  si2.FC     : updated output file
  si2.fdf    : updated input file
  si2-siesta : new file; input for Siesta, necessary to reproduce example
  si2.vectors: updated output file
  si54.bands : updated output file
  si54.FC    : updated output file
  si54-siesta: new file; input for Siesta, necessary to reproduce example
  Si.inp     : new file; input for Siesta, necessary to reproduce example
/Util/Vibra/Vibra
  fcbuild.f  : increase number of digits in the output of atomic coords
  vibrator.f : bug fix
=======================================================================
Version: 1.2.29
Date: 2003/06/06 18:15
Title: Two small bugs
Author: Jose M. Soler <jose.soler@uam.es>

Description:
  Some arrays were not allocated in the rare case that there was a
single basis orbital in the whole system. Also, the dimension of the 
input array in routine four1 was incorrect.

Files:
  siesta.F  : corrected use of dimension maxnh
  recipes.f : dimension of array DATA increased from NN to 2*NN
=======================================================================
Version: 1.2.28
Date: 2003/06/05 23:30
Title: Eggbox correction (by Tom Archer) plus cosmetics
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:
  A possibility for eggbox correction is included assuming atom additivity
and species dependent components, by which various fourier components 
for the eggbox of isolated atoms of each species are given to Siesta
and Siesta substracts it from energy and forces.
  A little output cosmetics has been introduced as well

Files:
  eggbox.F : new
  siesta.F, Makefile: to call eggbox
  coor.f, atom.f, reinit.F, basis_types.f, memory.f, 
  atomlist.f, initatom.f, redata.f and siesta.F : changes only in writes
  version.F, siesta.tex, siesta.ind and CHANGES as customary
=======================================================================
Version: 1.2.27
Date: 2003/06/04 14:00
Title: Print of the ionic and total charge densities. 
Author: Javier Junquera <javier.junquera@ulg.ac.be>

Description:
The soft diffuse ionic charge, whose electrostatic potential is the
local part of the pseudopotential, can be printed now at the points
of the grid (file SystemLabel.IOCH), together with the total 
(ionic+electronic) charge density (file SystemLabel.TOCH). 
The new input variables that control the writting are, respectively,
SaveIonicCharge, and SaveTotalCharge.

When using the Harris functional, the Harris energy is printed at
the end of each molecular dynamic step, instead of the Kohn-Sham energy.
The SystemLabel.MDE file is also written using the harris' energy instead
of the Kohn-Sham energy. 

Files:
   siesta.F  : New variables to define the files SystemLabel.IOCH, and
               SystemLabel.TOCH. 
             : Calls to dhscf have changed. The name of two extra files
             : have been added to the argument list.
             : Printing of the Harris energy. 
             : Change in the definitions of getot, and in the call to 
             : iomd when harris functional is used. 
   grdsam.F  : Calls to dhscf have changed. The name of two extra files
             : have been added to the argument list.
   dhscf.F   : Two new variables with the names of the two files.
             : Call the new subroutine LocalChargeOnMesh, and write 
             : the ionic and total charge densities. 
   meshsubs.F: New subroutine LocalChargeOnMesh.
   siesta.tex, siesta.ind, CHANGES, version.F: Customary changes
=======================================================================
Version: 1.2.26
Date: 2003/06/03 14:30
Title: Fixed bug in parallel polarisation
Author: Julian Gale <j.gale@imperial.ac.uk>

Description:
The calculation of polarisation was giving incorrect answers in 
parallel due to corruption of the saved wavefunction in psiprev.
Was due to trying to combine the calculation and saving aspects
to minimise communication. Saving of wavefunction now performed
as a separate operation.

Files:
   ksv.F     : savepsi is now called after detover where needed and
             : the logical flag that was passed to this routine has
             : been removed.
   detover.F : The savepsi option has been removed along with the
             : incoming logical argument.
   version.F / CHANGES
=======================================================================
Version: 1.2.25
Date: 2003/05/22 19:30
Title: Fixed bug in BLYP forces (Marivi Fernandez-Serra) 
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:
  The implementation of the derivatives for the forces in the BLYP
functional had a bug, found and fixed by Marivi Fernandez-Serra.
  (a few hours before, Alberto Garcia committed basis_type.f to 
solve some compilation problems with some compilers).

Files:
  xc.f      in Src
  blypxc.f  in Pseudo/atom
  basis_type.f
  siesta.tex, siesta.ind, CHANGES, version.F
=======================================================================
Version: 1.2.24
Date: 2003/05/21 22:00
Title: Various (single excitation, flush, print pressure, etc)
Author: Emilio Artacho <emilio@esc.cam.ac.uk>

Description:

1. Single excitation: possibility of lowest excited state by 
   swapping the populations of HOMO and LUMO (if no spin polarisation,
   it is half swapping). Introduce SingleExcitation logical flag.
   It is done for ispin=1 and ik=1.
2. The SIG file (who used it?) is now only appearing is asked with the
   SignatureRecords flag.
3. Option of Mulliken at every SCF (for dealing with SCF problems)
   by turning true the MullikenInSCF flag
4. Flushes the ANI, MD, and MDE files at every time step by closing
   the files. It reopens (append) at every instance. It solves the
   problem originated by some compilers that keep data in buffers. 
   These data are lost if the program dies. It is still to be solved for
   the standard output. The same (not elegant but robust) solution 
   can be used if instead of writing to standard output, siesta would
   write to a file.
5. In MD runs the stress tensor and (solid) pressure are printed at
   every step. Both the static (ellectronic contribution) and total
   (adding kinetic term of nuclei). At the end of the run it is printed
   as always, only the static. The MDE file now writes total solid pressure
   and volume together with E_tot, E_KS, T, and step.

Files:
   fermid.F   : Single excitation
   siesta.F   : Signature records, Mulliken in SCF
   mulliken.F : Consmetics
   iomd.f     : flush MD and MDE
   pixmol.f   : flush ANI
   siesta.tex, siesta.ind, CHANGES, version.F
=======================================================================
Version: 1.2.23
Date: 2003/05/01 11:00
Title: Corrected FFT and ordern
Author: Julian D. Gale <j.gale@imperial.ac.uk>

Description:

Two bugs have been fixed:
(1) In the FFT routine, the dimensions were exceed then the contents of
    trigs were not always recalculated after increasing the dimensions.
(2) In order N the contents of several arrays were not preserved during
    resizing leading to loss of data for the subsequent geometry steps.

Files:

diagon.F  : The order of deallocation of the arrays is reversed to be more
            stack friendly.
fft3d.F   : OldMesh reinitialised to 0 if the size of the array trigs is
            altered to ensure that array is refilled correctly.
hpcx.make : the -bmaxdata flag has been added in order to access the 
            full memory
ordern.F  : Contents of several arrays are preserved on resizing.
=======================================================================
Version: 1.2.22
Date: 2003/04/14 15:10
Title: Corrected k-grid cutoff
Author: Jose M. Soler <jose.soler@uam.es>

Description:

For some nonorthorrombic k-sampling grids, the cutoff was overestimated
A call to minvec was introduced to find the true minimum supercell vector

Files:

kgridinit.F : Introduced call to minvec

=======================================================================
Version: 1.2.21
Date: 2003/04/14 15:00
Title: Cleaning of foreign code
Author: Jose M. Soler <jose.soler@uam.es>

Description:

To avoid any legal problems, the few routines not written by the siesta 
team have been cleaned or modified to make them different enough from 
the original ones. However, apropriate statements of the original
procedence/authorship have been kept in all the files affected.
Three routines in recipes.f were eliminated: ratint because it always
called polint internally, and splin/splinu because they were equivalent 
to spline/splint.

Files:

arw.f            : Code cleaned and language updated.
                   Many comments added or corrected.
arw.F            : Eliminated (changed to arw.f)
atom.f           : Calls to ratint changed by polint
basis_io.F       : Calls to ratint changed by polint
cellxc.F         : Header comments slightly changed
matel.f          : Calls to splin/splinu changed to spline/splint
periodic_table.f : Code updated. Some comments added
recipes.f        : Routines ratint, splin, and splinu eliminated.
                   Code updated and comments added
siesta.F         : Copyright statements in header changed
xc.f             : Header comments slightly changed
Makefile         : arw.o made dependent of ionew.o

=======================================================================
Version: 1.2.20
Date: 2003/1/20 16:00 
Title: HPCx changes
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

A small number of changes have been made for easy compilation on an
IBM Regatta machine to enable use with the HPCx service in the UK
(and elsewhere).

Files:

alloc.F90         : if NODAT option added for -DNODAT to avoid MPI problems
bands.F           : if NODAT option added for -DNODAT to avoid MPI problems
broadcast_basis.F : if NODAT option added for -DNODAT to avoid MPI problems
cellxc.F          : if NODAT option added for -DNODAT to avoid MPI problems
cgvc.F            : if NODAT option added for -DNODAT to avoid MPI problems
cgwf.F            : if NODAT option added for -DNODAT to avoid MPI problems
chempot.F         : if NODAT option added for -DNODAT to avoid MPI problems
denmat.F          : if NODAT option added for -DNODAT to avoid MPI problems
detover.F         : if NODAT option added for -DNODAT to avoid MPI problems
dhscf.F           : if NODAT option added for -DNODAT to avoid MPI problems
diag2g.F          : if NODAT option added for -DNODAT to avoid MPI problems
diag2k.F          : if NODAT option added for -DNODAT to avoid MPI problems
diagg.F           : if NODAT option added for -DNODAT to avoid MPI problems
diagk.F           : if NODAT option added for -DNODAT to avoid MPI problems
diagkp.F          : if NODAT option added for -DNODAT to avoid MPI problems
diagon.F          : if NODAT option added for -DNODAT to avoid MPI problems
diagsprl.F        : if NODAT option added for -DNODAT to avoid MPI problems
dipole.F          : if NODAT option added for -DNODAT to avoid MPI problems
efield.F          : if NODAT option added for -DNODAT to avoid MPI problems
ener3.F           : if NODAT option added for -DNODAT to avoid MPI problems
fft3d.F           : if NODAT option added for -DNODAT to avoid MPI problems
gradient.F        : if NODAT option added for -DNODAT to avoid MPI problems
iodm.F            : if NODAT option added for -DNODAT to avoid MPI problems
iohs.F            : if NODAT option added for -DNODAT to avoid MPI problems
iolwf.F           : if NODAT option added for -DNODAT to avoid MPI problems
iorho.F           : if NODAT option added for -DNODAT to avoid MPI problems
ioxv.F            : if NODAT option added for -DNODAT to avoid MPI problems
kgridinit.F       : if NODAT option added for -DNODAT to avoid MPI problems
meshmatrix.F      : if NODAT option added for -DNODAT to avoid MPI problems
mulliken.F        : if NODAT option added for -DNODAT to avoid MPI problems
ordern.F          : if NODAT option added for -DNODAT to avoid MPI problems
phonon.F          : if NODAT option added for -DNODAT to avoid MPI problems
pulayx.F          : if NODAT option added for -DNODAT to avoid MPI problems
readsp.F          : if NODAT option added for -DNODAT to avoid MPI problems
redata.F          : if NODAT option added for -DNODAT to avoid MPI problems
repol.F           : if NODAT option added for -DNODAT to avoid MPI problems
savepsi.F         : if NODAT option added for -DNODAT to avoid MPI problems
siesta.F          : if NODAT option added for -DNODAT to avoid MPI problems
timer.F           : if NODAT option added for -DNODAT to avoid MPI problems
vmb.F             : if NODAT option added for -DNODAT to avoid MPI problems
Sys/hpcx.make     : arch.make for HPCx service
=======================================================================
Version: 1.2.19
Date: 2003/1/10 17:00 
Title: FFT fixed for large meshes 
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

For very large mesh dimensions the array trigs in the FFT was not
able to cope. Hence this array has been made dynamic. Also a few
minor changes have been made, firstly to cellxc.F, to solve some
MPI issues at APAC, and secondly to siesta.F, to optionally avoid
problems with convergence where the auxiliary mesh changes during
a variable cell optimisation.

Files:

cellxc.F     : The parallelisation has been altered to involve fewer
             : transfers, but of larger packets. Should improve 
             : performance were latency is high and avoids problems
             : with MPI counters becoming too large.
fft3d.F      : The array trigs is now dynamically allocated to allow
             : for larger meshes.
siesta.F     : An option has been added to fix the auxiliary cell size
             : to avoid poor convergence behaviour.
siesta.tex   : New option FixAuxiliaryCell documented
=======================================================================
Version: 1.2.18
Date: 2002/10/09 10:30 
Title: Fix to spiral spin in parallel
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

Parallel runs were crashing due to an fdf call that was not wrapped to
only be from Node 0 in readsp.f. This routine is now MPI'd to handle
the fdf call safely.

Files:

readsp.f    : Removed from distribution
readsp.F    : Added - readsp.f with wrapping of fdf calls for parallel
            : execution.
=======================================================================
Version: 1.2.17
Date: 2002/09/13 17:00 
Title: Changes in xc.f, other cosmetic changes.
Author: Alberto Garcia

Description:

* There was a subtle numerical instability in the pzxc routine
when dealing with very small densities (as for large r in the
atomic program). Jose Soler has rewritten the offending section.

* Added blypxc routine to xc.f

* Cosmetic change in basis_specs.f. The printing of basis
  specification now skips over shells with nzeta=0...

Files:

xc.f , basis_specs.f

=======================================================================
Version: 1.2.16
Date: 2002/09/02 17:00 
Title: Divide and Conquer + fixes
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

The option to use divide and conquer Lapack algorithms has been added
to rdiag and cdiag, as well as tidying up the source code a bit here.
Also a bug in the order N part for eta .ne. 0 has been corrected, as 
well as a few fixes for parallel execution related to recently introduced
functionality. There are also a few bits of cleaning highlighted as a
result of running the code through the NAG compiler.

Files:

siesta.tex    : DivideAndConquer option documented
alloc.F90     : optional attribute added for name/routine + checking for
              : these terms being present before being addressed added
              : in alloc_err
basis_types.f : Missing comma in format descriptor added
cdiag.F       : Divide and Conquer option added for serial execution +
              : code tidied
cgwf.F        : Indentation tidied (tabs removed)
chempot.F     : Indentation tidied (tabs removed)
dhscf.F       : Spin-spiral I/O handled for parallel version
diagg.F       : Aux array no longer passed to rdiag
gradient.F    : Bug fixed for eta .ne. 0 case
kgrid.F       : Spin-spiral I/O handled for parallel version
kgridinit.F   : Spin-spiral I/O handled for parallel version
mulliken.F    : Indentation tidied (tabs removed)
on_subs.F     : Duplicate definition of numbtmp removed
pdosk.f       : Explicit declaration of type for dfloat added
pulayx.F      : Indentation tidied (tabs removed)
rdiag.F       : Divide and Conquer option added for serial execution +
              : code tidied. Argument "fv" removed, and allocation now
              : done using alloc module.
redata.F      : State of divide and conquer flag output
siesta.F      : Ekinion zeroed at the start to avoid case where it is
              : uninitialised. Plus sequence of testing of state of S
              : is altered to avoid a "size" operation on an unallocated
              : pointer.
transfer.f    : Indentation tided (tabs removed)
version.f     : version number incremented
vmb.F         : Indentation tided (tabs removed)
Lib/blas.f    : Updated to include the divide and conquer required routines.
Lib/lapack.f  : Updated to include the divide and conquer required routines.
Sys/sgi64-mpi_fermat.make : -lscs flag added for DaC routines
=======================================================================
Version: 1.2.15
Date: 2002/07/14 17:00 
Title: Cosmetic changes for School
Author: Alberto Garcia

Description:

The atomic generation routines have been enhanced to provide
more information for plotting. Gen-basis now accepts only one
species. 
Tutorials directory added.
The manual has been updated to mention the existence of the ATOM
manual.

=======================================================================
Version: 1.2.14
Date: 2002/06/28 17:00
Title: Non-collinear GGA
Author: Jose M. Soler <jose.soler@uam.es>

Description:

Support for non-collinar GGA. The local xc energy is made dependent
of the gradient of the density and of the MAGNITUDE of magnetization, 
but not of the gradient of the magnetization direction.
Implemented by Victor M. Garcia <victor@condmat.uniovi.es>

Files:

xc.f: Modified the subrutine GGAXC to allow for non-collinear spin. 

=======================================================================
Version: 1.2.13
Date: 2002/06/24 12:45 
Title: Spin spiral
Author: Jose M. Soler <jose.soler@uam.es>

Description:

Support for spin-spiral states, implemented by Victor M. Garcia
<victor@condmat.uniovi.es>

Files:

dhscf.F:      Call to rhoofdsp and vmatsp.
diagon.F:     Call to diagsprl.
kgridinit.F:  If spiral, skip time reversal symmetry (include all k's)
kgrid.F       If spiral, skip time reversal symmetry (include all k's)
diagsprl.F    New. Diagonalizes the Hamiltonian for spin spiral.
ipack.f       New. Packs/unpacks several integer indexes into/out of one
readsp.f      New. Reads spiral wave vector
rhoofdsp.f    New. Substitutes rhoofd for spiral configurations.
vmatsp.f      New. Substitutes vmat for spiral configurations.
Makefile      Add diagsprl.F, ipack.f, readsp.f, rhoofdsp.f, and vmatsp.f

=======================================================================
Version: 1.2.12
Date: 2002/06/20 17:00 
Title: Simplification of fdf module
Author: Alberto Garcia

Description:

The fdf module provides f90 interfaces for the f77 routines in
fdf.f, as well as new, pure-f90 routines. Until now there was
also an overloaded routine "fdf_get" which could stand for any
of the specific scalar routines. Unfortunately, either the Intel
or the PGI compiler chokes with its implementation.  It is almost
certain that these are compiler errors. However, in the interest
of portability, the "fdf_get" interface has been removed.

For the same reason, the routine fdf_parsed_string (currently not
used in Siesta) has been removed.

Changed Files:

fdf/fdf_mod.f
in Src:
basis_specs.f coor.f initatom.f chemical.f fdf_mod.f spin_init.f

=======================================================================
Version: 1.2.11
Date: 2002/06/11 17:00 
Title: Changes for (partial) support of Intel Fortran Compiler
Author: Alberto Garcia

Description:

The Intel Fortran Compiler is apparently strong at optimization but
very weak at following standard practice. It is not trivial to
integrate full support for it, but the current version of Siesta (at
least the serial incarnation) can still be made to compile portably
with a few kludges. At this point there is no support for MPI or
NetCDF.

1. Changes in fdf/fdf_mod.f: addition of redundant internal interfaces.
2. fdf/makefile: kludge to make the fdf directory visible in the
   "subprogram catalog", and to deal with new extension for module files.
3. Makefile: clean procedure updated.
3. New intel*.make files in Sys.

Thanks to Eduardo Anglada for helping with the catalog issue.

Changed Files:

fdf/fdf_mod.f
fdf/makefile
Makefile
Src/Sys/intel-mkl.make:    New file. Uses optimized mkl libraries
Src/Sys/intel-nolibs.make: IFC needs a special library...

=======================================================================
Version: 1.2.10
Date: 2002/06/07 15:00 
Title: Bugs in non-collinear spin
Author: Jose M. Soler <jose.soler@uam.es>

Description:

1. Avoid out-of-bounds in array qos

2. Definition of hermiticity relations for the Hamiltonian and
   density matrix in diag2g.F and diag2k.F

4. Modified the density matrix in diag2k.F to take ino account the 
   time reversal symmetry.

5. Modified siesta.F to skip the eigenvectors calculation if there is
   only one SCF step.

All these bugs were found and corrected by Victor M. Garcia
<victor@condmat.uniovi.es>

Files:

diag2g.F    Correct hamiltonian hermicity
diag2k.F    Correct hamiltonian hermicity and time-reversal in DM
mulliken.F  Avoid out-of-bounds in array qos
siesta.F    Avoid writting noncalculated eigenvalues
siesta.tex  Date and version updated

=======================================================================
Version: 1.2.9
Date: 2002/04/30  15:00 GMT
Title: Vmat fix
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

An error in the diagonal elements of Vlocal has been corrected, as well
as a few more minor items.

Files:

meshmatrix.F	Case where no mesh points are allocated to a node during
                parallel execution is handled properly with respect to
                zero length arrays.
on_subs.F       Duplicate definition of numbtmp removed
vmat.f      	Error in diagonal elements of Vlocal corrected
xc.f		Variable name corrected in pzxc from DECPDN -> DECFDN
=======================================================================
Version: 1.2.8
Date: 2002/04/11
Title: Bug fixed in vmat.f, rhoofd.f, and dfscf.f
Author: Javier Junquera <Javier.Junquera@ulg.ac.be>

Description:

1. A bug has been fixed in the subroutines that calculate
   the integrals in the real space mesh.
   If the longest orbital of a given specie is unoccupied in 
   the free atom, then some points were wrongly skipped
   while calculating the integrals.
   The definition of the cutoff radiae has been modified in
   vmat, rhoofd and dfscf
   Files: vmat.f, rhoofd.f, dfscf.f
 
2. The maximum number of iterations to converge the Fermi
   energy has been increased to 100. For some systems 50 is not
   a large enough number.
   File: fermid.F

3. Customary changes in file Src/version.F and Docs/CHANGES
   File: version.F, Docs/CHANGES

=======================================================================
Version: 1.2.7
Date: 2002/02/06
Title: PDOS calculation back into siesta.F...
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

The PDOS calculation had been deactivated in siesta.F due to an error. 
It has been put back in.  File: siesta.F

=======================================================================
Version: 1.2.6
Date: 2002/02/04
Title: Interface with F90 Denchar Utility
Author: Javier Junquera <Javier.Junquera@ulg.ac.be>

Description:

1. The interface between Siesta and Denchar has been implemented
   using Fortran 90. 
   File: plcharge.F

2. The interface routine is called again from Siesta.
   (This call was commented in the fortran 90 Siesta branch.
   File: siesta.F

3. Subroutine plcharge is included in the object list.
   File: Makefile

4. Almost all the routines in the utility package Denchar have been 
   rewritten in Fortran 90 in order
   to make it compatible with the 1.X version of Siesta.
   Files: Util/Denchar

5. Customary changes in file Src/version.F and Docs/siesta.tex
   File: version.F
=======================================================================
Version: 1.2.5
Date: 2002/01/17
Title: Bug fix in pdos.f, reorg of ghost routine, lmxkb info for users
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

1. Fixed a writing bug in pdos.f (for spin-polarized calculations).
   File: pdos.f

2. Make f-channel the highest-l projector used.
   Inform the user about the possibility of
   using a lower lmxkb.
   File: basis_specs.f

3. Reorganize routine ghost (avoid computing excited state if
   not necessary). Remove references to "atom.h".
   File: atom.f
=======================================================================
Version: 1.2.4
Date: 2001/12/14  18:15 GMT
Title: Order N improvements/tidy
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

The key changes relate to improvements in the order N part. The form of
cspa and eandg has been changed, in particular. Now the parameters maxnf,
maxnft and maxnhij are found in eandg, not in cspa. This allows an
accurate determination of the sizes in parallel and leads to much 
improved parallel scaling of cspa, removing this bottleneck for very
large calculations. There are also improvements to ener3.F and gradient.F
to reduce memory requirements and improve performance. There are also a
large number of minor changes where unused variables have been cleared
out.

Files:

atmfuncs.f      Unused variables removed to be tidy and reduce warnings
atom.f          Unused variables removed to be tidy and reduce warnings
atomlwf.F       Considerably changed to achieve reasonable parallel
                scaling and efficiency. The parameters nfmax, nftmax
                and nhijmax are no longer determined here since the
                values were always overestimates when operating in 
                parallel and this allows the code to be more readily
                distributed over processors. The determination of the
                sparse indexing and the initialisation of the LWFs has
                been separated so that parallelism can be achieved without
                altering the effect on the random initialisation. The
                building of the sparse indices is now distributed by
                search atom over Nodes.
bands.F         Unused variables removed to be tidy and reduce warnings
basis_io.F      Unused variables removed to be tidy and reduce warnings
cgwf.F          Variables maxnf, maxnft and maxnhij removed as arguments
                and no longer passed to eandg.
detover.F       Dimensions of psitmp for passing corrected and full
                matrix used in savepsi option. Also referencing of
                variable "je" return to the global frame as "jeg"
                where necessary. Unused variables removed.
dfscf.f         Unused variables removed to be tidy and reduce warnings
diag2g.F        Unused variables removed to be tidy and reduce warnings
diag2k.F        Unused variables removed to be tidy and reduce warnings
diagpol.f       Unused variable "io" removed
egandd.F        Structure changed due to the fact that maxnhij, maxnft
                and maxnf are now determined here, rather than in cspa.
ener3.F         Re-structured for greater parallel efficiency / lower
                memory use.
forhar.f        Unused variables removed to be tidy and reduce warnings
gradient.F      Variables nfmax/nhijmax globalised
initatom.f      Unused variable "js" removed
ionew.F         Declaration of "used" removed since variable is unused
                in io_status
kgridinit.F     Unused variable "d" removed
ksv.F           Unused variable "mxhov2" removed
matel.f         Unused variable "js" removed
meshsubs.F      Unused variables removed to be tidy and reduce warnings
old_atmfuncs.f  Declaration of "maxo" removed since variable is unused
on_subs.F       New routines added that are variants on the old ones
                for determining just the array dimension parameters
                nfmax, nftmax, nhijmax.
ordern.F        Modified to reflect the removal of nfmax, nftmax and
                nhijmax
parallel.f      Unused variables removed to be tidy and reduce warnings
phonon.F        Unused variables removed to be tidy and reduce warnings
pulayx.F        Unused variable "iii" removed
rhooda.f        Unused variable "in" removed
rhoofd.f        Unused variables removed to be tidy and reduce warnings
siesta.F        Unused variables removed to be tidy and reduce warnings
vmat.f          Unused variables removed to be tidy and reduce warnings
=======================================================================
Version: 1.2.3
Date: 2001/11/20  12:30 GMT
Title: iorho parallel fix / order N improvements
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

The handling of blocksizes has been corrected in iorho.F, since
the data distribution model coded was not quite the same as in
dhscf.F. The routine has been changed to make things consistent.
Further improvements have been to the order N part to reduce the
memory and increase the speed. In particular, the set up of the
indexing arrays has been examined. In axb_build1, the array ind
has been switched from a 2-D to 1-D array which is set up as necessary
using the sparsed stored indices. Also the broadcast of data has
been altered to group data so that each Node only broadcasts once.
The size of the local scratch arrays in denmat have also been reduced
by finding the optimum value of nfmax.

Files:

   atomlwf.F    Rounding error allowed for in checking of number
                of electrons.
   denmat.F     Memory reduced further / performance increased.
                Main change is to value of nfmax used to size
                local temporary arrays.
   egandd.F     Array indgf is distributed across nodes.
   gradient.F   Memory reduced further / performance increased.
   iorho.F      Calculation of blocksizes for I/O in parallel
                was in error. Now fixed.
   on_subs.F    The array ind has been removed and replaced by a
                1-D array which is filled as necessary from nindv
                which is sparse. Also data is broadcast by Node
                rather than by orbital. Array indgf is distributed
                across nodes.
   outcoor.f    I/O modified to handle up to 999,999 atoms
   siesta.F     I/O modified to handle up to 999,999 atoms
=======================================================================
Version: 1.2.2
Date: 2001/11/05  16:00 GMT
Title: Memory re-linearised in order N
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

In the process of originally parallelising the order N part,
the linear scaling of the memory usage with system size was
lost. This has now been restored which should lead to memory
savings for large jobs in parallel.

Files:
   denmat.F      Modified to change size of all 2-D or higher
                 arrays so that two dense indices are never
                 used.
   egandd.F      Call to ind_gf reinstated and fttof passed to
                 gradient. Left-hand dimension of fttof/listft
                 corrected to maxnft.
   ener3.F       Modified to change size of all 2-D or higher
                 arrays so that two dense indices are never
                 used.
   gradient.F    Modified to change size of all 2-D or higher
                 arrays so that two dense indices are never
                 used.
   on_subs.F     Subroutine ind_gf reinstated as fttof is now
                 used again.
   MPI/Makefile  Two blank lines removed that break the make
                 on SGI machines.
=======================================================================
Version: 1.2.1
Date: 2001/10/11  17:30 GMT
Title: Accelerated direct spin polarised calculations
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

The use of the DirectPhi option has been accelerated for spin
polarised calculations by only calculating the values of Phi
on the mesh once. This is achieved by moving the loop over
spin inside rhoofd and vmat. Also a bug in the print out of the
spin polarisation when running in parallel has been fixed.

Files:
   dfscf.f       Call to matrixOtoM modified.
   dhscf.F       Calling of rhoofd and vmat modified.
   meshmatrix.F  Spin loops moved within matrixOtoM and matrixMtoO.
   rhoofd.f      Looping over spin components now included internally.
                 Dlocal array stored in triangular fashion.
   siesta.F      Qspin now globalised before print out of spin 
                 polarisation.
   vmat.f        Looping over spin components now included internally.
                 Vlocal array stored in triangular fashion.
=======================================================================
Version: 1.2.0 [No change]
Date: 2001/10/04
Title: Bug fixes in basis_io.F
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

Fixed bugs having to do with:

1. The use of the .ion files generated by an independent siesta or
gen-basis run.
2. The default mass for floating orbitals

(Discovered just after the release of siesta-1.1)

Files:
   basis_io.F:   Second derivative of elec_corr structures was not
                 updated after generation in elec_corr_setup.
		 Changed filename from XX.ion_nc to XX.ion.nc
   basis_specs.f: Do not make default mass too big for floating orbitals.
=======================================================================
Version: 1.2.0
Date: 2001/09/26
Title: Merge from rel-1-1-branch at 1.1 release point (siesta-1-1)
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

 Starting point for new cycle of development.

 Changes and fixes in preparation of the 1.1 release
 merged back to main trunk:

* Fixed mismatched MPI block in siesta.F (related to PDOS change).
  file: siesta.F

* Total DOS file is now just *.DOS.

* Better output for PDOS file. Used "xml" format to ease (?) 
  processing (evolving ideas).
  files: pdos.f pdosk.f 

* Added new "h2o_dos" test in Src/Tests.

* Added "xml" output for .ion data.
  files: xml.f basis_io.F radial.f initatom.f

* Committed Bug fix for O(N) calculations (Julian Gale)
  file: gradient.F Src/Tests/Makefile (enabled h2o_orderN)

* Added new sgi64-mpi_fermat.make file (Julian Gale)

* Array shape fixes in xc.f (cosmetic) (Julian Gale)

* Added top README file.

* Removed obsolete source files from Src directory.
  files: iorder.f order.f ordvec.f ylmylm.f lofilm.f
         resize.F ylmexp.f symbol.f rlylm.f die.F

* Added user.list (Please update), build_parallel.sh, and other 
  release-related files, and updated some others. These files are
  not part of any distribution.

* Updated CONDITIONS (list of developers)

* Many User Guide updates (J. Junquera, E. Artacho, A. Garcia)

* Removed .vps, out.fdf, and siesta.size files from Examples directory.

* Updated .out files in Src/Tests and Examples/*/Out

* Added Util/PyAtom/pdos.py script (experimental -- not in release)

* Set Version to 1.2.0

=======================================================================
Version: 1.0.62
Date: 2001/09/24  12:00 GMT
Title: Projected Density of States.
Author: Javier Junquera <javier.junquera@uam.es>

Description:

The Total Density Of States (Total DOS), and its projection
on the basis orbitals (Projected Density Of States, PDOS),
are computed and dumped to files ('.TOT.DOS' and '.PDOS' respectively).

This only works in a serial run. An error message will be issued 
when we try to use it in a parallel execution.

It is only implemented when the hamiltonian
is solved by diagonalization with k-points.

Files:
   siesta.F    Call to pdos subroutine is added
   pdos.f      New subroutine, interface between siesta and the one that
               computes the PDOS
   pdosk.f     New subroutine. Computes the PDOS
   Makefile    pdos.o and pdosk.o added to object list 
   Docs/siesta.tex, Docs/siesta.ind
	       Documentation of new block usage.
========================================================================
Version: 1.0.61
Date: 2001/09/16  18:00 GMT
Title: New input/output facilities for ps and basis information
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

Pseudopotential information can now be read by SIESTA in formatted
form from '.psf' files (which are now also generated by ATOM). This
will make it easier to transport ps files among computers. The
old *.psatom.data files are no longer valid.

Also, the PAO, KB projector, and Vlocal and charges data are dumped to
'.ion' (and '.ion_nc' if NetCDF is available) files, which can later
be used to re-generate the atomic information if the 'user-basis'
(or 'user-basis-netcdf')  option is specified in SIESTA.  A header section
containing information about the specifications for basis construction
and about the pseudopotential used is also included.

Files:
   chemical.f  New module to centralize the chemical species info.
   pseudopotential.f
	       New routine to read formatted '.psf' files.
	       New routine to print a header containing basic ps info.
	       
   basis_io.F  Modifications to the routines which read and write the
	       '.ion' files.
   atm_types.f basis_specs.f basis_types.f atm_types.f  initatom.f
   transfer.f
	       Minor changes to support the above changes.

   Pseudo/atom/wrapup.f
	       New file VPSFMT output
   Pseudo/atom/Samples/pg.sh
               File VPSFMT copied to <name>.psf
   Pseudo/atom/Docs/User.Guide
	       Updated

   Docs/siesta.tex, Docs/siesta.ind
	       Documentation of new file usage.
========================================================================
Version: 1.0.60
Date: 2001/09/11  17:00 GMT
Title: Corrections and modification to limit runaway memory
Author: Julian D. Gale <j.gale@ic.ac.uk>

Description:

This is a collection of corrections for a few bugs, typos,
and problems noticed on certain platforms. It appears that
on Linux boxes, under Absoft f90, and on DEC platforms the
f90 implementation fails to properly free memory when 
deallocated. Because of the size of phi/listp2/lstpht, this
can rapidly lead to the memory being exhausted on some machines.
Hence a workaround has been added to PhiOnMesh so that these
arrays are only redimensioned when absolutely necessary -
i.e. they are too small. A tolerance has also been added to
the initial dimension (of 1%) to hopefully minimise
reallocations.

Files:
   atom.f      Spelling of "analysis" corrected
   matel.f     Dimensions of arrays adjusted to prevent crash when
               running in parallel (contraction prevented). Debug
               statements commented out.
   meshsubs.F  Reallocation of phi/lstpht/listp2 avoided one possible
               to avoid memory increasing on platforms that fail to
               properly deallocate arrays from memory.
   mulliken.F  Spelling of "analysis" corrected
               Loops over 1,Nodes corrected to 0,Nodes-1
   redata.F    Spelling of "analysis" corrected / alignment of write
               tidied
   siesta.F    Call to ioeig corrected to pass no_u instead of no_l
========================================================================
Version: 1.0.59
Date: 2001/07/10  10:00 GMT
Title: Changes to support pgf90 and non-MPI version
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

A. The pgf90 compiler had trouble compiling certain sections of the
code. These had been rewritten slightly to help it.

  Files:
    Src/fdf/parse.f:  Use token_arr instead of tokens to avoid compiler	
                      bug.
    Src/fdf/fdf_mod.f, fdf.f : Use fdf_block_old wrapper routine to
                               avoid compiler bug that led to an 
                               infinite loop.
    Src/alloc.F90:    Fix declaration of character variable.
    Sys/pgf90*.make:  Name NetCDF library explicitly, instead of using -L.
    
B. The process to generate a de-MPI'ized version suitable for general
   users has been streamlined somewhat.

 Files:

   build_serial.sh:  Use the same Makefile. Copy also .f90 files
   Src/Makefile:     Test for existence of MPI directory before cleaning.
=======================================================================
Version: 1.0.58
Date: 2001/06/29  12:00 GMT
Title: removed local variables NSM and NMESHG in cellxc
Author: Jose M. Soler <jose.soler@uam.es>

Description:

Variables NSM and NMESHG are now imported from module mesh and
should not be redeclared locally.

Files:
   cellxc.F: removed local variables NSM and NMESHG
=======================================================================
Version: 1.0.57
Date: 2001/05/18  20:15 GMT
Title: serial version of cellxc.F and xc.f returned to f77
Author: Jose M. Soler <jose.soler@uam.es>

Description:

The serial part of cellxc and atomxc was returned to f77, to make
it more transportable as a separated package. Required node and
mesh arguments for parallel esecution are now obtained directly
within cellxc, rather than passed as arguments.

Files:
   cellxc.F:   serial part returned to f77
               Node and Nodes obtained by calling MPI
               NMESHG and NSM obtained from module mesh
   dhscf.F:    call to cellxc
   forhar.f:   call to cellxc
   meshsubs.F: added static valiables NMESHG and NSM
   siesta.F:   removed save declarations
   xc.f:       returned to f77
=======================================================================
Version: 1.0.56
Date: 2001/05/18  20:00 GMT
Title: Corrected bug in MATEL which produced numerical errors
Author: Jose M. Soler <jose.soler@uam.es>

Description:

A change in the call to RADFFT was missing in basis_io.F and 
read_user_basis.F. Instead, RADFFT has been returned to its previous
state, to avoid reproducing this error. This corrects the small
numeric differences in the output introduced in version 1.0.50.
Additionally, calls to realloc were simplified in MATEL.

Files:
   matel.f:  simplified realloc procedures
   radfft.f: commented out return of spillage in last element
=======================================================================
Version: 1.0.55
Date: 2001/05/11
Title: Grid cell sampling bug fix
Author: Emilio Artacho <Emilio.Artacho@uam.es>

Description:

The energy was not being averaged by the grid-cell-sampling option,
since the calculation of Etot (and Eharris and FreeEner) was done
only in the before-last iteration, before grid-cell sampling. Fixed.

Files:
   siesta.F
   (customary version.F, CHANGES and siesta.tex)
=======================================================================
Version: 1.0.54
Date: 2001/05/01
Title: Mesh memory correction
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

Out of bounds memory writes were occuring for a small number of arrays
in routines relating to the mesh for some cases. This was related to
the local variable "maxloc" being used in two different contexts with
a common value. A new separate value has now been introduced for the
case where a value which was too small was being assigned.

Files:
   dfscf.f         : Sizing of ibc, C, gC and xgC corrected.
   rhoofd.f        : Sizing of ilc and Clocal corrected.
   vmat.f          : Sizing of ilc and Clocal corrected.
=======================================================================
Version: 1.0.53
Date: 2001/04/26
Title: New inver
Author: William Mattson <wmattson@uiuc.edu> (committed by JDG)

Description:

It turns out that the subroutine inver fails for certain matrices
and returns "NaN"s. This was observed by William Mattson from
Richard Martin's group and he has kindly provided a routine
that fixes the problem.

Files:
   inver.f         : Removed in favour of inver.f90
   inver.f90       : Replaces inver.f
=======================================================================
Version: 1.0.52
Date: 2001/03/27  08:45 GMT
Title: Matel fixes
Author: Julian D. Gale <j.gale@ic.ac.uk>

Description:

A number of corrections have been made, primarily to matel. The
main change to matel is to explicitly zero INDF and INDFF when
reallocated in case this is not the default action and also to
trap when IOPER increases so as to increase the size of the
appropriate arrays. A few other bugs have been cleared up for
parallel execution.

Files:
   ksv.F           : Dimension of ek changed to nuotot.
   matel.f         : INDF / INDFF zeroed after realloc calls.
                   : Test for INDF being associated added to avoid
                   : call to SIZE when INDF is a null pointer.
                   : Change in third dimension (IOPER) now trapped.
   parallel.f      : New subroutine to set the default blocksize
                   : added - checks that if the number of orbitals
                   : is small then the blocksize is lowered to ensure
                   : some work on each processor.
   siesta.F        : Setting of level for alloc routines corrected
                   : for parallel execution.
                   : Call to new routine for setting default blocksize
                   : added and calls for parallel setup moved until
                   : later in the routine so that no_u is defined.
=======================================================================
Version: 1.0.51
Date: 2001/02/28  05:00 GMT
Title: Improved memory for parallel order N
Author: Julian D. Gale <j.gale@ic.ac.uk>

Description:

The key routines for order N calculation have been modified
to lower the peak memory usage by reordering certain operations
to reduce the amount of local workspace at the expense of a
communication overhead in some cases for multiprocessor systems.
A few other changes have been made as a result of compilation
and testing of the latest version on the Cray and under the
pgf90 compiler.

Files:
   ener3.F         : Memory usage reduced for parallel execution
   denmat.F        : Memory usage reduced for parallel execution
   gradient.F      : Memory usage reduced for parallel execution
   dhscf.f         : Typo in message corrected
   fdf/fdf_mod.f   : Local variable default2 added to fdf_sp to
                   : handle type conversion on calling fdf_single
   periodic_table.f: lmax lowered to 3 in cnfig to avoid write beyond
                   : bounds error when called by routines where lmax is
                   : already 3
   Makefile        : atmparams.o added to object list for make of base
=======================================================================
Version: 1.0.50
Date: 2001/01/31  17:30 GMT
Title: Miscellaneous corrections
Author: Jose M. Soler <jose.soler@uam.es>

Description:

More modular reading of .RHO files in plrho.
Calls memory from realloc to keep the correct total allocated memory.
Authorship correction of some periodic_table routines.

Files:
   alloc.F90       : Call memory. Corrected CRAY sizes.
   arw.F           : Document moving of some routines
   iorho.F         : Returns correct sizes instead of stopping
   matel.f         : Last function value made zero after radfft call
   parallel.f      : Default initialization of Blocksize and ProcessorY
   periodic_table.f: Authorship correction of some routines
   Plrho/iorho.f         : Serial version of iorho
   Plrho/plrho.f         : Use iorho to read .RHO files
   Plrho/plrho.f77       : Fortran77 version
   Plrho/plrho_guide.txt : Document previous changes
=======================================================================
Version: 1.0.49
Date: 2001/01/29  19:00 GMT
Title: Merge of 'newatom' branch
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

The basis-generation subsystem has been improved by rationalizing some 
data structures and making some code simpler. A major simplification 
involves doing the work in serial mode and broadcasting only the final
data structures. A more powerful 'parse' mechanism has been implemented 
to help with the complex processing of data blocks which define the
basis. A complete list of changes follows.

Files:
   atom.f: Back to serial mode. Streamlined somewhat, but still basically
           unchanged. Lots of more work needed.
   atom.F: Removed.
   atm_types.f: Data structures to hold PAO, KB proj, and vlocal info.
   atminit.F: Removed. Its functionality is now in...
   initatom.f: Includes logic to deal with user-defined bases (new format).
   atomlist.f: Now computes total number of orbitals and KB projectors. 
               Includes superx.
   base.F: A new, standalone, program for basis generation.
   basis_io.F: Reads and writes basis information in two formats: pure
               ASCII and NetCDF (if compiled in). Note that the .F suffix
               does not have anything to do with MPI... it is needed to
               preprocess NetCDF blocks.
   basis_specs.f: New routines for basis definition. See documentation
                  in the file itself.
   basis_types.f : Data structures for basis specification, and routines
                 to interface with the old-style arrays needed by 'atom'.
   broadcast_basis.F: New file.
   cdiag.F: Make H and S real arrays with an extra dimension, so that
            the (formal) interface errors do not stop the program in
            debugging runs. Now the interface mismatch is passed on
            to the library side.
   cellxc.F: Arrays xmesh and aux are now assumed size to avoid 
             interface mismatches.
   chkdim.F chkdim.f: Calls routine 'die' to avoid explicit MPI code.
   coceri.f: Uses 'periodic_table' module (q.v.) and automatic arrays.
   coor.f coxmol.f pixmol.f: Use 'periodic_table'
   dfscf.F: fal array dimensioned to na instead of nua.
   diagon.F: Aux array size was too small for 'diagk' case.
   diag*.{f,F} propor.f: Use new module 'sys' (q.v.)
   die.F: Removed. Functionality in module sys.F (q.v.)
   dump2cdf.F dump_ascii.f: Removed. Functionality now in basis_io.F
   gauleg.f lofilm.F
   rlylm.f ylmexp.f 
   ylmylm.f: Removed and integrated into new module 'spher_harm.f', to
             make the interfaces explicit.
   ionew.F: New prototype module to deal with logical unit numbers and
            the variable IOnode (to simplify MPI I/O).
   matel.f: Array syntax explicit in some calls to match the interfaces
            in spher_harm.
   meshsubs.F: Dummy argument fal was wrongly dimensioned (to na instead
               of nua) in routine neutralatomonmesh. Inocuous but wrong.
   old_atmfuncs.f: It now does the allocation and clearing of the
                   old-style atomic tables which use to be done in 'atom'.
   periodic_table.f: New module with purely 'atomic' routines, taken from...
   arw.F: 'atomic' routines moved to module 'periodic_table'.
   plcharge.F: Removed. Functionality provided by .RHO files and the 
               helper programs in Util/Contour and Util/Plrho
   pseudopotential.f: New module to read and hold the data from ps files.
                      (Currently, the data is recopied in 'atom')
   radial.f: Dynamic table size.
   recipes.f: Use automatic arrays when needed.
   redata.F: Issues note about .RHO file substituting denchar info.
   redbasis.f: Removed.
   siesta.F: New initatom interface. PDOS stub (not implemented yet).
             Remove call to plcharge. Use 'parse' module. Initialize
             array listhold after allocation. Explicit calls to
             routine superx after every kind of atomic move.
   sorting.f: New module, which includes:
   ordix.f ordvec.f order.f iorder.f: removed
   superx.f: put in module atomlist (and also as internal sub in coor.f)
   hsparse.f minvec.f: Changed to .f extension. Use 'sorting'.
   spher_harm.f: New module holding the Spherical Harmonics routines, 
                 with explicit interfaces.
   symbol.f: Removed. Included in module 'periodic_table'.
   sys.F: New module. Implements routines 'die' and 'bye'. These can
          be called to terminate an MPI job from anywhere in the program.
   transfer.f: Streamlined.
   types.f: Removed. Now called atm_types.f
   Makefile: Changed to reflect the additions and deletions.
   NetCDF/README: New file explaining some compatibility issues.
   fdf/fdf.f: Change name of block data.
   fdf/fdf_mod.f: New features. See documentation in file.
   fdf/fdf2.f fdf3.f: removed.
   fdf/parse.f: New file. A more powerful parser. See docs in file.
   fdf/makefile: updated.
   Docs/siesta.tex: Use makeidx package. Updated to reflect new changes.
=======================================================================
Version: 1.0.48
Date: 2001/01/23  17:30 GMT
Title: Bug Fix (nlcc + spin)
Author: Pablo Ordejon <ordejon@icmab.es>

Description:

Fixed bug reported by J. Junquera (on Jan 20 2001) and 
G. Canto (Jan 22 2001). The bug produced wrong values
of the stress and forces for calculations with spin
polarization and non-linear core corrections (simultaneously).

Files:
   meshsubs.F : Routine PartialCoreOnMesh corrected.
   Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.47
Date: 2001/01/12  19:30 GMT
Title: Dynamic (re)allocation in MATEL
Author: Jose M. Soler <jose.soler@uam.es>

Description:

As a leftover of f77 static allocation requirement, the array
dimensions in MATEL are found using obscure formulas. F90 and the 
alloc module allow a simpler and cheaper reallocation on the fly.

Files:
   matel.f   : Arrays reallocated on the fly, using alloc module
               Suppressed matel_init and matel_module
               Removed pure-spherical-harmonic requirement for orbitals
   atmfuncs.f: Allowed IO=0 in LOFIO and MOFIO (with result L=0)
   kinefsm.f : Removed 'use matel_module' statement
   naefs.f   :  "
   nlefsm.f  :  "
   overfsm.f :  "
   phirphi.f :  "
   radfft.f  : G(NK) returns spilling of G(k) beyond Kmax
   siesta.F  : Supressed call to matel init
               Added alloc_report initialization and printout
   Makefile  : matel moved from module to normal routine
               Added dependence of matel.o on alloc.o
               Supressed dependences on matel_module
   siesta.tex: Added documentation of new option AllocReportLevel
========================================================================
Version: 1.0.46
Date: 2001/01/09  11:00 GMT
Title: Bug fis in iomd.f
Author: Pablo Ordejon <ordejon@icmab.es>

Description:

A problem with the reading/writing in the MD files is solved.
The problem consisted in the inability of some compilers
to write once the EOF character was reached.


Files:
   iomd.f:    Backspace command added
   Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.45
Date: 2000/12/13  12:00 GMT
Title: Interface to K. Parlinski's PHONON program
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

K. Parlinski's program PHONON can analyze the crystal structure and
provide a set of symmetry-irreducible atomic displacements with which
to compute the dynamical matrix and obtain the phonon dispersion
relations and other lattice-dynamical magnitudes.  Siesta can now read
PHONON-provided information (basically in the MD.ATforPhonon and
PhononLabels blocks), carry out the required calculations (in a form
similar to that used for brute-force FC approach) and write a
SystemLabel.PHONON file that can be post-processed by PHONON.

Files:
   phonon.F:  Module implementing the interface routines.
   redata.F:  Logic to decide when a PHONON calculation (idyn=7) is
              to be undertaken.
   siesta.F:  Calls to phonon.F routines.
   Makefile:  Addition of phonon.F.
   siesta.tex: Brief documentation of the interface.
   Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.44
Date: 2000/12/12  19:46 GMT
Title: BUG FIXED. Ref. br-20001209-002
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

Corrected bug reported by P. Ordejon:
Siesta was not parsing correctly the valence configuration
information if the pseudopotential file was generated in
a spin-polarized calculation.

Files:
   atom.F: New code to process configuration string.
   Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.43
Date: 2000/12/12  19:00 GMT
Title: Eigenvalue-only diagonalization for k-sampling
Author: Jose M. Soler <jose.soler@uam.es>

Description:

In the case of k-sampling, an initial diagonalization is now performed to 
find the eigenvalues, the Fermi level and the occupation weights. 
Since the eigenvectors cannot be stored because of memory limitations,
the diagonalization is later repeated to find them and the density matrix.
By calling the LAPACK diagonalization routine with an eigenvalue-only flag,
a major part of the CPU time of the first diagonalization can be saved.

Files:
   cdiag.F:  Add argument NEVEC with the number of desired eigenvectors
             If NEVEC==0, call ZHEGV with job='N' (eigenvalues only).
             Otherwise, find all eigenvectors, like previously.
             Supress FV argument in CDIAG and allocate it internally.
             Use realloc to allocate arrays.
   diag2g.F:  "
   diagpol.f: "
   diagk.F:  First call to CDIAG with NEVEC=0. Second with NEVEC=NUO
   diag2k.F:   "
   diagkp.F:   "
   Customary Docs/CHANGES, Docs/siesta.tex, and Src/version.F changes.
========================================================================
Version: 1.0.42
Date: 2000/12/12  15:30 GMT
Title: BUG FIXED. Siesta 1.X. Ref. br-20001209-001
Author: Pablo Ordejon <ordejon@icmab.es>

Description:

Bug fixed: Siesta 1.X. Ref. br-20001209-001 

Corrected bug reported by A. Garcia:
Extrapolation of the density matrix for FC calculations,
when no DM file was present. Besides, an error was detected
in extrapol.F for the case of k-point sampling (where maxo
is different from maxuo)

Files:
   siesta.F: Treat differently the extrapolation for FC calcs. with 
             no DM files.
   extrapol.F: Fix bug (dimensions of aux matrix were wrong for
               k-point sampling calculations).
   Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.41
Date: 2000/11/29  18:00 CET
Title: BUG FIXED. Routines 'initbands' in bands.F and 'fixed' in fixed.F
Author: Daniel Sanchez-Portal <sanchezp@uiuc.edu>

Description:

Two bugs corrected in 'initbands':
* Variable scale, defined as character*30, was broadcast and character*1
* switch added so kpoints are only broadcast to the other nodes if
  there is enough space to calculate and store them (nk.le.maxk)
One bug in subroutine 'fixed':
* The node reading the input was not specified

Files:
   fixed.F: Fix bug
   bands.F: Fix bug
   Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.40
Date: 2000/11/25  11:30 GMT
Title: BUG FIXED. Routine 'parabola' in atom.F
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:
 
Updated routine 'parabola' which deals with multiple zeta orbital
matching and was updated on branch siesta-0 after the fork (for some
reason the change was not detected earlier). This fix will cause
noticeable numerical differences in the 'split' routine output
concerning the kinetic, potential, and total energy of zeta>1 orbitals
in some limited cases (Fe in the Examples directory being one of
them). The orbital itself seems not to be noticeably affected.

Files: 
  atom.F : Updated routine parabola.
  Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.39
Date: 2000/11/24  13:15 CET
Title: BUGS FIXED. endif missing in MPI part of cellxc.F
Author: Pablo Ordejon <ordejonicmab.es>

Description:
 
Bug fixed: endif missing in MPI part of cellxc.F

Files: 
  cellxc.F : Fix bug
  Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.39
Date: 2000/11/23  16:15 CET
Title: BUGS FIXED: supercell call in dynamics loop + update of k-points
Author: Pablo Ordejon <ordejonicmab.es>

Description:
 
Several bugs have been corrected, that produced wrong results for 
dynamics runs with k-points. The first affected the case of fixed
cells, and the second the case of variable cells:
  - The supercel setup for k-points was wrongly done only out of the 
    dynamics loop for fixed dell. Corrected to setup within te loop.
  - The k-points were not updated for the variable cell case.
    Corrected to update them.

Files: 
  siesta.F : Fix bugs for supercell and k-points updates.
  Customary  Docs/CHANGES and Src/version.F changes.
========================================================================
Version: 1.0.38
Date: 2000/11/1	 21:30 CET
Title: adding Harris forces for the first SCF step.
Author: Javier Junquera <javier.junquera@uam.es>

Description:

 When Harris functional is being used in a molecular
 dynamics simulation, the initial charge density of each step
 is always the sum of atomic charges.

Files:
  siesta.F : Skip the extrapolation of the density matrix
             Initialize the density matrix in each SCF step
  redata.F:  New variable harrisfun. Switch that fixes if
             Harris functional is going to be used.
  Customary  Docs/CHANGES
========================================================================
Version: 1.0.38
Date: 2000/11/1  13:00 CET
Title: adding Harris forces for the first SCF step.
Author: Javier Junquera <javier.junquera@uam.es>

Description:
 
 The computation of the forces for the Harris functional
 in the first SCF step has been implemented. This functional 
 is a not self-consistent version of DFT. It is extremly
 cheap but not very accurate for system which involves
 great charge transfer. Suitable for long runs of 
 molecular dynamics simulations.

Files: 
  siesta.F : Skip the diagonalization in the last step. 
  meshsubs.F : Bug corrected in PartialCoreonMesh subroutine.
               Problem related with the distance of a given point
               of the grid to a given atom. If that distant is zero
               the point is not considered, and that's wrong.
  cellxc.F, xc.f : Derivatives of exchange-correlation potential 
                   respect the charge density. Only implemented
                   for Perdew-Zunger parametrization (LDA)
  dfscf.f : Improved efficiency.
  dhscf.F : Reads the functional in which the computation of the forces
            will be based. Call to cellxc updated. Call to dfscf updated.
            New call to forhar.
  forhar.f: New subroutine where the potentials needed by dfscf for
            the Harris functional forces are built.
  redata.F: Automatic set up of DM.UseSaveDM, MaxSCFIterations and
            DM.MixSCF1 when Harris' forces are selected.
  Makefile: Added forhar.f
  Customary version.F, Docs/CHANGES and Docs/siesta.tex
========================================================================
Version: 1.0.37
Date: 2000/10/09  20:15 CET
Title: correcting ibmp3.make and version.F
Author: Emilio Artacho <Emilio.Artacho@uam.es>

Files: Sys/ibmp3.make
       version.F, CHANGES, siesta.tex
========================================================================
Version: 1.0.37
Date: 2000/10/05  19:15 CET
Title: Improved efficiency vmat & rhoofd (buffer) / various for compiling
Author: Emilio Artacho <Emilio.Artacho@uam.es>

Description:

(1) vmat and rhoofd were less efficient than 0.12 corresponding ones
at least for some systems. The 'buffer' that keeps a piece of a matrix
in a non-sparse form has been increased (by 100) so that fewer unpdates
of this buffer have to be done in the whole procedure (J.M.Soler).
The efficiency is comparable now (even better).

(2) Siesta has been compiled in the IBM SP2 machine in Lyon, both
parallel and scalar. Parallel compilation has also been done for
a large parallel Compaq machine in Grenoble. Makefiles and related.

NOTE: The IBM didn't know about complex.2double, I removed it from mpi.F
      (not used)

Files:
  rhoofd.f, vmat.f : improved efficiency
  ibmp3.make, ibmp3-mpi.make, compaq-mpi.make : (in Sys/)
  MPI/mpi.F, MPI/Makefile 
  Customary version.F, Docs/CHANGES and Docs/siesta.tex 
========================================================================
Version: 1.0.36
Date: 2000/09/13  11:00 GMT
Title: Fix for plotting files / vmat speed up
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

The format of files for use in Plrho was changed due to necessity for
the parallelisation because the density matrix was not stored on any
one node in a complete form. Hence Plrho has had to be modified to
reflect this. Also a bug in iorho relating to this change has been 
fixed.
Also the implicit loops have been removed from several places in vmat
to improve performance with current compilers. In addition, a few
other performance enhancements have been introduced through the use
of local variables to reduce the number of multiplications in important
parts of the code.

Files:

   iorho.F    : The wrong dimension was being used in the inner loop
              : and has therefore been corrected.
   plrho.f    : Format of files from iorho changed to new form.
   vmat.f     : Implicit loops / sum function removed + VClocal added
              : to reduce number of multiplications.
========================================================================
Version: 1.0.35
Date: 2000/08/10  13:00 GMT
Title: Change in .DM format
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

The main change is to the way in which the .DM file is written. The
form of the statements has been changed to something much closer to
how it used to be written before the parallelisation forced some
changes. This was done because of poor performance during disk writes
on a cluster of machines with a remote mounted disk and will generally
benefit the speed of writes, though not always quite as dramatically
as in this case. Also a couple of minor changes were made to avoid
compiler hiccups and warning messages.

Files:
   alloc.F90  : argument "type" declared as (len=*) in type_mem for
              : the benefit of the PG compiler
   cellxc.F   : 0.0d0 -> 0.0 in a couple of places to avoid type
              : conversion warnings
   iodm.F     : form of write statements adjusted to maximum number
              : of writes per statement within parallel constraints
========================================================================
Version: 1.0.34
Date: 2000/07/29  17:30 GMT
Title: Change to PCC to remove spurious forces
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

Certain runs on a high symmetry system were found to give large
symmetry breaking forces for some atoms on a special position
but not all when using partial core corrections in the pseudo
potential. The problem was trace back to very small values of
the distance between the mesh points and atoms.

Files:
   meshsubs.F : r > tiny check has been added to trap small distances
              : that lead to spurious forces
   siesta.F   : comments stating that KSV_pol is not sorted for parallel
              : use have been removed as this is no longer true
========================================================================
Version: 1.0.33
Date: 2000/07/05  16:00 GMT
Title: Re-organization of atomic information. Other structural changes.
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

-- Completely new replacement for atmfuncs module.

Created a set of derived types to hold the information relative
to the atomic basis and pseudopotentials. The new structures are
somewhat more flexible and lean than the old ones. The functions in
atmfuncs have been re-implemented accordingly.

A new module 'types.f' holds the derived types (which might still be
streamlined somewhat). In 'transfer.f', the information is transferred
from the old atomic structures to the new ones.  The old atmfuncs
module has been renamed to 'old_atmfuncs'. The new structures are also
used in dump2cdf.F, which creates self-describing files with the
atomic information (see below).

Atom.F and redbasis.F are left mostly untouched for now.

The old dimensioning parameters (still useful for old_atmfuncs, atom, and 
redbasis) are kept in 'atmparams'.

Created a "radial function" derived type (not general enough, but
useful for atmfuncs) which encapsulates the linear grid and the
'splint' operation needed to interpolate on it. Presumably other types
appropriate for logarithmic meshes, more general functions, etc, could
be defined as well. The code is in 'radial.f', although the type
definition is still in types.f.

-- Matel.f 

Allocatable arrays local to matel turned into automatic arrays, which
are allocated and deallocated automatically by the compiler. (The SGI
had problems deallocating one of the arrays).  This solution (also
used in parsing.f) is the cleanest one for relatively small
arrays. For larger sizes, the process could run into stack limits
(which could in principle be circumvented by the use of the "limit(s)"
or "ulimit(s)" shell command).

-- Siesta.F atomlist.f atminit.F

Some streamlining of the code. Created a new module "atomlist" which
holds isa, xa, lasto, etc, and contains initatomlists and superc
(which does nothing but reallocate arrays if needed and expanding xa,
etc to the virtual supercell). Eventually, "atomlist" could be use(d)
by the routines which need those arrays.  Regarding the treatment of
the "real" and the "virtual" supercell, "ncells", "na", "no", etc,
meant different things in different places, and one had to be very
careful about it.  In the new version, the program knows nothing about
the supercell specified in the input file (as the manual says it
should). It only deals with "na_u" and "no_u", respectively the number
of atoms and the number of orbitals in the unit cell. If the use of
k-points forces the use of a "virtual" supercell, one needs also
"na_s" and "no_s". Those variables also live in module
'atomlist'. Also, "nuo" (the number of orbitals local to the node) has
been renamed to "no_l".

atminit.F could really be part of the atomic suite in the future.

-- OrderN issue: If the user requests k-points for an ordern calculation,
the program fails as some arrays are accessed beyond their dimensions.
Inserted a trap for (.not. gamma) before the call to ordern to check it.
Eventually the supercell variables should be made private to the small group
of routines which really need them... 

-- Use of new 'alloc' module by Jose.

It has been integrated as Src/alloc.F90, with some minor changes and
fixes (and a change of the module name to just 'alloc' instead of
'alloc_module').  It is used by siesta.F, coor.f, and atomlist.f to
deal with the atomlist arrays. 

 -- Redata.F coor.f init_spin.f

Eliminated the call to 'recoor' inside redata and replaced it by a
call from siesta to a new routine 'coor'. This almost eliminates the
need to call 'resize', except to initialize nspin. For now,
'init_spin' does only that bit, but it could be extended to do the
rest of the spin-related readings.

-- NetCDF hooks

Included support for the use of data files which are self-describing
and thus readable in a wide variety of ways. I have chosen the netCDF
format, which I think is powerful enough for our purposes. If the user
compiles Siesta with the NetCDF option (enabled in arch.make with a
couple of lines), the program will generate files with extensions
".dump.nc" for each of the species, containing the orbitals, KB projs,
etc. The 'ncdump' utility which comes with netCDF can be used to
produce a human readable form of the files, and other tools (such as
Python, or other compiled Fortran programs) can be used to provide any
desired information.  The basis information can also be read from the
.dump.nc NetCDF files by renaming them to .basis.nc and specifying
'new-user-basis' in the fdf file. (This capability is restricted for now to 
NetCDF-capable implementations).

-- NetCDF interface

A new directory NetCDF contains the F90 interface to the NetCDF
library Version 3.5 (whose source is kept in a separate cvs
repository, in case it is needed).  Note that the interface is
relatively new, and only works with that version of
