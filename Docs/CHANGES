========================================================================
                  SIESTA CHANGES: TOP IS MOST RECENT
========================================================================
Version: 1.0.27
Date: 2000/04/12   4:00:00 GMT
Title: Spin polarisation corrections
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

Three bugs relating to spin polarised calculations have been fixed
as well as an issue relating to the use of a variable in atom.F
detected by a compiler.

Files:
   atom.F       : q renamed to qtmp in choverlp
   dhscf.F      : Dscf -> Dscf(1,ispin) in call to rhoofd
                : Hmat -> Hmat(1,ispin) in call to vmat
   siesta.F     : S(jo) -> S(ind) in calculation of qspin()
   version.f    : Version number incremented to 1.0.27
========================================================================
Version: 1.0.26
Date: 2000/03/30   9:30:00 GMT
Title: Slight fixes to timing and vibrations
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

As a result of running on the Cray with uninitialised variables set to 
NaN a few small possible problems were indentified for machines which
do not default to static memory. Also a few similar issues were found
in the course of testing parallel frequency calculations and have
been cleaned up.

Files:
In Src/
   ofc.f        : Reading of .FC file altered to avoid crash on Cray.
   siesta.F     : Tempion initialised to zero and printing for FC option
                : modified.
   timer.F      : Variables "count_rate" and "wt" saved between calls
                : in elap1.
   version.f    : Version number incremented to 1.0.26
In Util/Vibra/Vibra
   fcbuild.f    : Logical "overflow" initialised to false
   Makefile     : ARCH environment variable changed to SIESTA_SYS for
                : consistency with main program
   vibrator.f   : Logical "overflow" initialised to false
                : Variable "nk" initialised to zero
                : Call to outbands suppressed if nk = 0
                : Typo corrected - "Writting" -> "Writing"
   Sys/t3e.make : Make options for Cray T3E added
========================================================================
Version: 1.0.25
Date: 2000/03/29   8:30:00 GMT
Title: 
Author: Julian Gale <j.gale@ic.ac.uk>

Description:

There have been several major changes for this release :

(1) The array listh has now been distributed across the processors
(2) The storage format of the main sparse arrays, H, S, Dscf, listh etc
    has been changed to be more compact. Hence for any given spin these
    arrays are now 1-D instead of 2-D, thus eliminating the storage of
    any zeros (except the tolerance at the end of listh to avoid recalling
    hsparse). The start of any row, n, of the sparse matrix can now be found
    at "listhptr(n)+1".
(3) dhscf.F has been heavily modified to make it more modular. Hence it
    has largely been reduced to a series of subroutine calls which use
    routines from meshsubs.F and meshmatrix.F. All references to the
    density matrix in mesh-local stored form have been abstracted to a
    module so that it and its pointers are not directly seen at the dhscf
    level. Likewise the transformations from orbital to mesh-local storage
    via MPI have been localised in 2 subroutines so that the majority of
    high level mesh routines no longer call MPI.
(4) The dimension of the array within has been corrected to maxphi in all_phi
    as this can lead to floating point errors otherwise.
(5) The storage of phi has been re-ordered according to Jose's suggestion
    so that it is ordered by mesh points rather than orbitals. This has 
    led to the removal of the call to transp and some related arrays as
    the data is already in the transposed form. Similarly the
    calculation of Phi has been simplified (at the expensive of some
    potential CPU savings) leading to removal of options, such as SaveMemory.
(6) An extra check has been added to the mesh initialisation. For non-right
    angled unit cells there used to be the possibility that the mesh cut-off
    might not be greater than the requested value. A new check has been 
    added that guarantees that it will be satisfied by increasing NTM.
(7) The value of ncmax is now initialised to zero in iolwf if no file is
    found otherwise the value could be NaN and is then used to allocate
    memory in ordern leading to a memory error.
(8) Parallelisation of KSV added
(9) Bug in grdsam fixed - pt was not preserved between calls

Files:
   atmfuncs.F   : The dimension of "within" has been corrected to maxphi in all_phi
                : The default value of nzetmx has been increased to 3
   atom.F       : Calls to prmem removed as the memory is dynamically created.
   atomlwf.F    : Modified to allow for local nature of numh,listhptr,listh including
                : globalisation of numft which is now needed as a result
   bands.F      : Modified to allow for local nature of numh,listhptr,listh 
   cgwf.F       : Modified due to new sparse form of arrays
   chempot.F    : Modified due to new sparse form of arrays + loop conversion to f90
   denmat.F     : Modified due to new sparse form of arrays + local nature of storage
                : numh/listh/listhptr
   detover.f    : Re-named to detover.F as CPP options are present
   detover.F    : Modified due to new sparse form of arrays
                : Aux re-sized to nocc x nocc and parallelisation added
   dfscf.F      : Renamed to dfscf.f as all MPI calls have been removed
   dfscf.f      : Argument maxorb removed and Dscf/DscfL changed to new format
                : Internal logical Parallel introduced to handle choice of Dscf or DscfL
                : The gradients are now calculated using a call to all_phi for speed
   dhscf.F      : Globalisation of dipol(3) moved into dipole.F
                : Argument maxorb removed and Hmat/Dscf changed to new format
                : dipol(1:3) initialise to zero to avoid floating point crash in grdsam.F
                : for "bulk" case
   diag2g.F     : Modified due to new sparse form of arrays + loop conversion to f90
   diag2k.F     : Modified due to new sparse form of arrays + loop conversion to f90
   diagg.F      : Modified due to new sparse form of arrays + loop conversion to f90
   diagk.F      : Modified due to new sparse form of arrays + loop conversion to f90
   diagkp.F     : Modified to allow for local nature of numh,listhptr,listh
                : Globalisation of pointers to H and S added
   diagon.F     : Modified due to new sparse form of arrays 
   diagpol.f    : Modified due to new sparse form of arrays + loop conversion to f90
                : Modified to allow for parallel execution by changing the order of
                : referencing Haux/Saux and looping on the left by nuotot and on the
                : right by nuo.
   dipole.F     : Globalisation of dipole now in subroutine
   dynamics.F   : Contents of array "sold" now preserved between calls
   egandd.F     : Modified due to new sparse form of arrays + frstme variable removed
   ener3.F      : Modified due to new sparse form of arrays + local nature of storage
                : numh/listh/listhptr
   extrapol.F   : mm2/mnew changed to 2-D array of size (maxnh,nspin) + maxno->maxnh +
                : modifications to allow for the fact that the sparse indexing arrays
                : are now local only
   extrapolon.F : version of extrapol created for order(N) using the old sparse matrix form
                : as the format has yet to be changed in this section of the code
   gradient.F   : Modified due to new sparse form of listh + local nature of storage
                : numh/listh/listhptr
   grdsam.F     : Argument maxorb removed and Hmat/Dscf changed to new format + loops
                : changed to f90 form for compactness
                : Array pt preserved between calls as the contents are only read once
                : and dimensions corrected to 3 x (maxpt+1).
   hsparse.F    : Modified due to new sparse form of listh + local nature of storage
                : numh/listh/listhptr.
                : Trap for nuo = 0 added  for setting nlhmax
   idiag.f      : shared do loop termination removed
   initdm.F     : Dscf/Dold changed to 2-D array of size (maxnh,nspin) + maxno->maxnh +
                : listh now in 1-D form and a pointer to the start of the rows is added
                : and passed through to iodm.F
   iodm.F       : dm changed to 2-D array of size (maxnh,nspin) + maxno->maxnh
   iohs.F       : Format of saved H/S/xij changed to match new linear form
   iolwf.F      : ncmax initialised to 0 if found = .false.
   kinefsm.F    : Renamed to kinefsm.f as all MPI calls have been removed
   kinefsm.f    : Renamed kinefsm.F with Node and Nodes added to argument list
                : Dscf made into 2-D array and maxnd is equal to maxnh
   ksv.F        : Modified due to new sparse form of arrays and parallelisation.
                : Copy of psi into psiprev moved to detover/savepsi
   listsc.f     : Trivial typo - corrected in a comment
   Makefile     : new routines added to list and dependances on meshmatrix.F and meshsubs.F
   matel.f      : Calls to prmem removed as the memory is dynamically created.
   meshmatrix.F : A collection of a module that contains data for the matrix Dscf
                : stored locally with respect to the mesh rather than the orbitals
                : and two subroutines that transform forward and backwards between
                : the two local arrangements
   meshsubs.F   : A collection of subroutines that perform tasks on the mesh. The is a
                : composed of code that used to all be in dhscf.F but with changes to
                : the code that calculates the wavefunctions at the mesh points. This
                : part has been changed so that the data is ordered by mesh point and
                : simplified according to Jose's algorithm
   minvec.F     : shared do loop termination removed
   mulliken.F   : Modified due to new sparse form of arrays + local nature of storage
                : numh/listh/listhptr
   nlefsm.F     : Renamed to nlefsm.f as all MPI calls have been removed
   nlefsm.f     : Renamed nlefsm.F with Node and Nodes added to argument list
   on_subs.F    : Two versions of the subroutine axb_build have now been added
                : suffixed by 1 or 2. axb_build2 is the same as the old routine
                : whereas axb_build1 is a modified form to allow for the more
                : dense sparse storage algorithm used in the main part of the
                : code, but not yet in the ordern section.
   ordern.F     : Modified due to new sparse form of arrays and call to extrapol
                : replaced by call to extrapolon
   overfsm.F    : Renamed to overfsm.f as all MPI calls have been removed
   overfsm.f    : Renamed overfsm.F with Node and Nodes added to argument list
                : Escf made into 2-D array and maxnd is equal to maxnh
   phirphi.f    : Modified due to new sparse form of arrays and for parallel form.
                : nuotot, Node and Nodes added to argument list
   plcharge.f   : Renamed to plcharge.F as it now requires MPI use
   plcharge.F   : Created from plcharge.f but modified to reflect the new sparse
                : array indexing form and the fact that this information is local.
   pulayx.F     : Modified due to new sparse form of arrays + local nature of storage
                : numh/listh/listhptr
   redata.F     : Default value of MemoryScale has been changed to 1.0
   rhooda.f     : The accessing of data has been modified to reflect the fact that
                : quantities are now order by mesh points, leading to the removal
                : of some of the indexing arrays. Also the argument list has been 
                : shortened because a number of parameters are now in the "mesh" 
                : /"meshphi" modules.
   rhoofd.F     : Renamed to rhoofd.f as all MPI calls have been removed
   rhoofd.f     : Created from rhoofd.F and modified so that the much of the grid
                : related data is stored in modules rather than being passed as
                : arguments. The choice between Parallel and serial forms of use
                : Dscf is made internally now and the new sparse format is included.
   savepsi.F    : New routine to copy psi to psiprev in ksv.F while handling the
                : parallel distribution of data.
   siesta.F     : Sparse storage of H,H0,S,xijo,Dscf,Dscfsave changed to save memory
                : H,H0 and S now only allocated after first call to hsparse
                : Some loops converted to f90 form to condense code
                : Node and Nodes added to argument list of kinefsm/nlefsm/overfsm/
                :   xijorb
                : Commented out calls to prmem removed for tidyness
                : Variable nnomax has been removed.
                : The extra safety margin added to the length of listh has been
                : reduced to 5% from 10% - because the array is 1-D there should
                : less need for changes as variation betweens will now cancel
                : each other out partially.
   transp.f     : Deleted as it is no longer needed
   version.f    : version number incremented to 1.0.25
   vlist.F      : Removed to simplify dhscf.F as it was never called.
   vmat.F       : Renamed to vmat.f as all MPI calls have been removed
   vmat.f       : Created from vmat.F and modified so that the much of the grid
                : related data is stored in modules rather than being passed as
                : arguments. The choice between Parallel and serial forms of use
                : Vs is made internally now and the new sparse format is included.
   xijorb.F     : Renamed to xijorb.f as all MPI calls have been removed
   xijorb.f     : Renamed xijorb.F with Node and Nodes added to argument list
   xijorb.f     : xijo changed to 2-D array of size (3,maxnh) and nomax->maxnh
========================================================================
Version: 1.0.24b (version array not changed in program)
Date: 2000/03/28  11:00:00 GMT
Title: Minor cosmetic changes. Wall-time output
Authors: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

The timing routine now generates an extra file "WALLTIME" with
*elapsed* time. Added routines 'elap1' and 'timer1'.

Some minor changes to the FDF package, to remove output to unit 0 and
to improve the makefile. An extra routine fdf_inhibit, has been added
for future use.

Minor changes to MPI/Makefile to simplify the 'clean' procedure.

Files:

timer.F 
fdf/fdf.f
    fdf_mod.f
    makefile 
MPI/Makefile
========================================================================
Version: 1.0.24
Date: 2000/01/27  11:30:00 GMT
Title: Errors in siesta.F corrected
Author: Julian Gale <j.gale@ic.ac.uk>

Description:
   The first dimension of the array ebk has been corrected to nuotot
   instead of nuo in siesta.F, the dimension being passed to bands
   being adjusted accordingly, so that the parallel operation is
   correct. Also "bands" is now only called if nbk > 0 as there is
   no setup to be done within "bands".
Files:
   siesta.F
========================================================================
Version: 1.0.23
Date: 2000/01/27   9:30:00 GMT
Title: Error in allocation of ebk corrected in siesta.F
Author: Julian Gale <j.gale@ic.ac.uk>

Description:
   The array ebk in siesta.F was allocated within the check to see
if nbk was greater than maxbk. However, this only happened if nbk
> 1 leading to an error for a single K point. Allocation has now
been moved until after maxbk is known.

Files:
   siesta.F
========================================================================
Version: 1.0.22
Date: 2000/01/24  16:00:00 GMT
Title: Fixes to bands.F / dhscf.F / atom.F
Author: Julian Gale <j.gale@ic.ac.uk>

Description:
   A number of bugs have been uncovered and fixed as described below.
Files:
   atom.F    : in SPLIT a value of rphi was accessed where uninitialised
   bands.F   : the use of fdf for reading the BandLines was incorrect
             : and has been amended. Also, for simplicity and safety
             : a "band" module has been created containing a routine
             : "initbands" which initialises the data for bands and a
             : true call to "bands" which actually performs the band
             : structure calculation. This avoids the passing of
             : uninitialised data arrays during the initialisation
             : phase.
   dhscf.F   : the arrays used to store the previous calls atomic
             : coordinates failed to reflect the fact that the
             : supercell might increase in size for a variable cell
             : run with multiple K points. Hence now the sizes are
             : checked first and SAMEXA is set to false if the sizes
             : differ and the arrays are re-dimensioned. Also the
             : size of NeedDscfL has been corrected to NUO instead
             : of NORB, as has the referencing during DHSCF4 which
             : included redundant work for supercells.
   initdm.F  : the names of variables have been altered to reflect
             : the fact that the routine operates on just the unit
             : cell and not the supercell when addressing certain
             : indices. This is a purely cosmetic change for 
             : consistency with other parts of the program.
   siesta.F  : the calls to bands have been modified to reflect the
             : new form of initbands/bands. This has led to a cleaner
             : allocation of dynamic memory.
========================================================================
Version: 1.0.21
Date: 2000/01/11  10:30:00 GMT
Title: Fixes and cosmetic improvements to avoid compiler warnings
Author: Julian Gale <j.gale@ic.ac.uk>

Description:
   Two bugs have been fixed, namely the loss of constraint information
   in fixed.F due to deallocation of the arrays between calls and an
   uninitialised array access in "split" due to the wrong looping upper
   bound. Also cosmetic changes have been made to remove compiler
   warnings about features which do not strictly comply with the f90
   standard (deprecated features) for cleaner compilation on some
   machines.
Files:
   arw.F     : numbered do loops on executable line removed
   atom.F    : loop over 1->nrmax changed to 1->nrval to avoid floating
             : point error due to accessing an uninitialised array 
             : element
   detover.f : dcmplx -> cmplx / dimag -> aimag / dreal -> real
   dhscf.F   : shared do loop termination removed
   diagon.F  : ParallelOverK only set on first call now and saved
   dismin.f  : shared do loop termination removed
   egandd.F  : parameter "nc" no longer passed to ctrans1
   ener3.F   : commented dimensions of numhij corrected
   fixed.F   : arrays ctype / iac / xc allocated on first call and never
             : deallocated
   inver.f   : shared do loop termination removed
   linpack.F : dcmplx -> cmplx / dimag -> aimag / dreal -> real
   minvec.F  : shared do loop termination removed
   on_subs.F : parameter "nc" no longer used - array dimension set using
             : ncmin and ncmax
   pulayx.F  : shared do loop termination removed
========================================================================
Version: 1.0.20
Date: 2000/01/08  00:01:00 GMT
Title: Improved performance with DirectPhi option
Author: Jose M. Soler <jose.soler@uam.es>

Description:
   The performance with option DirectPhi, in which the orbitals are
   calculated 'on the fly' at grid points, has been improved by
   obtaining all the orbitals of one atom in a single call.
   Also, routines rhoofd and vmat have been slightly rewritten to
   avoid references to large global arrays within the inermost loop.
Files:
   atmfuncs.f : New routine all_phi
   rhoofd.F   : Calls all_phi instead of phiatm
   vmat.f     : Calls all_phi instead of phiatm
========================================================================
Version: 1.0.19
Date: 2000/01/04  13:00:00 GMT
Title: Correction to memory allocation in egandd.F
Authors: Julian Gale <j.gale@ic.ac.uk>

Description:
   Memory allocation in egandd.F didn't reflect the fact that the
   bands are distributed across the nodes for some arrays leading
   to unnecessarily large memory usage in parallel.
File:
   egandd.F
========================================================================
Version: 1.0.18 
Date: 2000/01/04   12:50:00 CET
Title: Bug fix in grid-cell sampling (improved mesh-cutoff convergence)
Author: Emilio.Artacho@uam.es

Description:
   Bug discovered by Daniel SP, forces where not adequately updated
File:
   grdsam.F (plus customary siesta.tex, CHANGES, version.f)
========================================================================
Version: 1.0.17
Date: 1999/12/19  12:30:00 GMT
Title: Fixes to ordern and vlist
Authors: Julian Gale <j.gale@ic.ac.uk>

Description:

A couple of bug fixes have been introduced :

(1) The array nindv was being passed from eandg to axb_build with
    the wrong size declaration on the second call. This led to an
    out of bounds error which showed up as a crash in iolwf for
    some runs. The arrays ind and nindv are now locally created
    in axb_build with the sizes needed for a given call to avoid
    any possible errors during calling.
(2) The list of arguments for vlist was inconsistent with the call
    from dhscf.F. The auxillary array parameters are now handled
    using local dynamic memory. This error was not really detected
    as vlist never seems to get called.

Files:

egandd.F  : ind and nindv have been removed
on_subs.F : ind and nindv are now locally allocated in axb_build
vlist.F   : MaxInd and ind removed from argument list and ind is now
          : dynamically allocated
========================================================================
Version: 1.0.16
Date: 1999/12/17   9:15:00 GMT
Title: Fixes to ordern/iolwf + supercell creation
Authors: Julian Gale <j.gale@ic.ac.uk>

Description:

A number of small changes have been made;

(1) There were errors in the handling of restarts for ordern
    calculations due to dynamic memory allocation which have
    been fixed.
(2) The use of listcold between ordern and extrapol was 
    inconsistent for parallel runs. listcold now only stores
    the lists for the local orbitals on the current node to
    save memory and make everything consistent with extrapol.
(3) The allocation of memory in SIESTA has been corrected for
    an error that occured when a supercell was built.
(4) The save attribute has been added to bcell in dhscf.F

Files:

dhscf.F  : bcell variable given save attribute
iolwf.F  : modifications made to reflect changes to new size
         : of listcold and dimension error for maxc trapped
         : so that new value can be returned as ncmax
ordern.F : listcold now dimensioned as (maxnc,maxoloc) to save
         : memory and for consistency in extrapol. Handling of
         : dynamic memory overflow in iolwf added.
siesta.F : allocation of arrays that depend on nua moved to handle
         : the fact that redata can change the value of nua for a
         : supercell calculation
========================================================================
Version: 1.0.15
Date: 1999/12/13  16:20:00 GMT
Title: Improvements to building behavior
Authors: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

A number of changes to improve compilation portability.

Files:

precision.f90:  Removed
precision.f  :  Added. It now uses fixed format, as the rest of the program.
Makefile     :  Better cleaning, and precision changes.
fdf/makefile :  fdf_mod.o is now added to the library.
Libs/lapack.f:  machine-constants routines segregated to machine.f.
Libs/machine.f: file to be compiled without optimization.
Libs/makefile:  added support for machine.o build.
MPI/Makefile :  moved '.generated' to 'generate'.
Sys/ibmp3.make and Sys/ibm.f: partial support for IBM machines (Emilio)

========================================================================
Version: 1.0.14
Date: 1999/12/01   9:15:00 GMT
Title: Memory leak checks + diagonalisation modification
Authors: Julian Gale <j.gale@ic.ac.uk>

Description:

This version contains 3 principal changes :

(1) To guard against memory leaks, the save attribute has been added
    to near all allocatable arrays so that the machine can detect
    when an array is attempted to be allocated having not been
    previous deallocated. As a result, a memory leak was found in
    outcoor.f on the array xap and has been fixed.
(2) It appears that most of the time a parallel diagonalisation can
    continue quite satisfactorily when SCALAPACK returns the warning
    about non-converged eigenvalues due to clustering without any
    effect on the results. Hence a new parameter MemoryScale has been
    introduced which is the scale factor by which the memory available
    to SCALAPACK is increased when TryMemoryIncrease is true. If this
    value is set equal to 1.0, instead of the default 1.5, then the
    SCF procedure continues without actually increasing the memory.
(3) The print out of memory information has now been modified to
    reflect the fact that the word lengths are different on a Cray
    and this is handled by a cpp directive at compile time. Hence the
    file memoryinfo.f has become memoryinfo.F

Files:

coceri.f     : save attribute added to allocatable arrays
detover.f    : save attribute added to allocatable arrays
diagpol.f    : save attribute added to allocatable arrays
matel.f      : save attribute added to allocatable arrays
numbvect.f   : save attribute added to allocatable arrays
ordvec.f     : save attribute added to allocatable arrays
outcoor.f    : save attribute added to allocatable arrays
               + memory leak fixed on xap
parse.f      : save attribute added to allocatable arrays
phirphi.f    : save attribute added to allocatable arrays
radfft.f     : save attribute added to allocatable arrays
ranger.f     : save attribute added to allocatable arrays
recipes.f    : save attribute added to allocatable arrays
reord.f      : save attribute added to allocatable arrays
shaper.f     : save attribute added to allocatable arrays
xc.f         : save attribute added to allocatable arrays
ylmylm.f     : save attribute added to allocatable arrays
atminit.F    : save attribute added to allocatable arrays
atomlwf.F    : save attribute added to allocatable arrays
bands.F      : save attribute added to allocatable arrays
cdiag.F      : ierror = -2 if TryMemoryIncrease = .true.
               and MemoryScale = 1.0
cgvc.F       : save attribute added to allocatable arrays
chempot.F    : save attribute added to allocatable arrays
diagk.F      : handling of ierror modified
diag2k.F     : handling of ierror modified
diagkp.F     : save attribute added to allocatable arrays
diagg.F      : handling of ierror modified
diag2g.F     : handling of ierror modified
diagon.F     : save attribute added to allocatable arrays
dynamics.F   : save attribute added to allocatable arrays
egandd.F     : save attribute added to allocatable arrays
extrapol.F   : save attribute added to allocatable arrays
fixed.F      : save attribute added to allocatable arrays
grdsam.F     : save attribute added to allocatable arrays
hsparse.F    : save attribute added to allocatable arrays
initdm.F     : save attribute added to allocatable arrays
iodm.F       : save attribute added to allocatable arrays
iolwf.F      : save attribute added to allocatable arrays
kinefsm.F    : save attribute added to allocatable arrays
ksv.F        : save attribute added to allocatable arrays
memoryinfo.F : handling of Cray word lengths added
mulliken.F   : save attribute added to allocatable arrays
nlefsm.F     : save attribute added to allocatable arrays
on_subs.F    : save attribute added to allocatable arrays
overfsm.F    : save attribute added to allocatable arrays
pulayx.F     : save attribute added to allocatable arrays
redata.F     : MemoryScale read in
rdiag.F      : ierror = -2 if TryMemoryIncrease = .true.
               and MemoryScale = 1.0
siesta.F     : save attribute added to allocatable arrays
xijorb.F     : save attribute added to allocatable arrays
========================================================================
Version: 1.0.13
Date: 1999/11/26  18:15:00 GMT
Title: Return to Main Trunk
Authors: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

The changes made to the code along the "merged" branch have been
merged back to the main trunk. A few cosmetic changes have also
been made. Note that it is not practical to include all the commit
messages pertaining to the merged branch again. For all practical purposes,
there is a "wall" between 0.12.19 (tagged 'fork') and 1.0.13. 

Files:

CHANGES:	It contains the description of the latest changes along
		the merged branch. For full details, see the log history
		in each file.
redbasis.f:	Removal of references to atom.h
atom.h:		Removal. (Note that some "hardwired" parameters remain
		in the atmfuncs module -- they will be dealt with in
		the future.)
========================================================================
Version: 1.0.12
Date: 1999/11/24  18:00:00 GMT
Title: Direct evaluation of phi added
Authors: Julian Gale <j.gale@ic.ac.uk>

Description:

An option has been added to calculate the value of the orbitals at
the mesh points on the fly to avoid the use of the PHI array in
DHSCF on lower routines. This allows a large saving in memory to
be made in some cases, with a penalty in CPU time. For very large
jobs it makes the difference between running and not running though
if memory is tight. Also an MPI barrier has been added in siesta.F
before the memory is printed to tidy up the output.

Files:

dfscf.F    : value of phi is now used from called to phiatm rather than C
dhscf.F    : DirectPhi option added
rhooda.f   : DirectPhi option added
rhoofd.F   : DirectPhi option added
siesta.F   : MPI barrier added before call to printmemory
vmat.F     : DirectPhi option added
siesta.ind : SaveMemory and DirectPhi options described
siesta.tex : SaveMemory and DirectPhi options described
========================================================================
Version: 1.0.11
Date: 1999/11/18  16:30:00 GMT
Title: Sys reorganization. Bugfix in atom.F. Misc cosmetic changes.
Authors: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

	* The Sys directory has been reorganized. Obsolete files have
 	been removed. A new file "nolibs.make" has been added to support
	systems without any libraries (this would be the equivalent of
	'unknown.make').
	* Bug fix in atom.F: The global variable Q was being inadvertently
	re-used in a subroutine. 
	* Fix to avoid interface errors (when checking enabled) in ranger.f
	* diagkp.F: Addition of a dummy routine so that some compilers do
	not complain of an empty file.

Files:

Makefile: Clarified the status of Sys.f files.
atom.F:   Bug fix.
diagkp.F: Addition of dummy routine.
diagon.F: fdf is now 'used'.
ranger.f: interface errors "corrected" (more needs to be done in the future)
Sys/*.make: Elimination of obsolete files and addition of new ones.

========================================================================
Version: 1.0.10
Date: 1999/11/17  17:00:00
Title: listsc and matel converted into modules
Authors: Jose M. Soler <jose.soler@uam.es> / Julian Gale (j.gale@ic.ac.uk)

Description:
  The clumsy ENTRY construction in listsc and matel was translated
  into fortran90 modules (JMS). Plus a number of small fixes for
  errors during compilation + runtime errors, primarily connected
  with the diagonalisation modifications. Also documentation
  modifications.

Files:
  Makefile  : declare listsc and matel as modules. 
  atom.F    : data statement converted into array declaration + 
            : nrcfile initialised
  dfscf.F   : use statement
  diagkp.F  : routine wrapped in preprocessor directive - for MPI only
  diagon.F  : diagkp declared as external
  diagpol.f : error flag for cdiag call added + handling
  hsparse.F : use statement
  kinefsm.F : use statement
  linpack.F : renamed from linpack.f
            : compiler directives added to handle precision of BLAS routines
            : dcabs1 renamed to sdcabs1 to avoid conflict with libraries
            : routines ending in "1" were removed as they were redundant
  listsc.f  : converted into module
  matel.f   : converted into module
  naefs.f   : use statement
  nlefsm.F  : use statement
  overfsm.F : use statement
  phirphi.f : use statement
  rhoofd.F  : use statement
  siesta.F  : use statement + lower limit of maxkb + initialisating Escf
  version.f : increased number
  vmat.F    : use statement
  fdf/makefile    : copying of module files now uses wildcard
  Docs/siesta.tex : version no. changed + parallel related options added
  Docs/siesta.ind : new options added with provisional page numbers
========================================================================
Version: 1.0.9
Date: 1999/11/16  19:00:00
Title: Ongoing cleanup of atomic routines. FDF module. LAPACK and BLAS
Author: Alberto Garcia

Description:

A number of unrelated changes.

* Systems without lapack and blas can now use source provided
  (use "cvs update -d" to pick up new directory Libs)
* Removed some blas routines from linpack (now duplicated in Libs/blas.f)
* Initialization of some variables (notably ends of arrays) in atom.F.
  Typically, the first element of arrays indexed over the radial
  coordinate was not initialized properly. They showed up as "initialized"
  in runs with checks enabled. This fix might improve the accord between
  runs with different number of processors.
* Use of "assigned" unit numbers for reading in atom.F and redbasis.f
  (Formerly an arbitrary "unit=1"  was used)
* Changed redbasis.F back to redbasis.f, as no MPI-specific code is left.
* Wrap of I/O in subroutine 'user' in atom.F. Rationalization of some of
  the reading. More work needs to be done.
* Be more careful about underflow in atom.F. A check has been added to
  avoid computation of exp(-big), where 'big' could be so large as to
  cause underflows (and some systems to stop). A configurable maximum
  value for 'big' (currently 60.d0) has been introduced.
* Fdf declarations are now in a module. Note that this is the simplest
  step one can take to bring fdf into a f90 "flavor". The only change
  to the code has been to introduce a private unit allocator. 
* The Makefile has been changed to support the new features. Also, the
  MPILIB mechanism has been slightly modified. It should now work
  on machines (such as the SGI) whose makes complained if MPILIB was
  empty (in serial mode).

Files:
 Makefile         
 bands.F          
 cgvc.F           
 dhscf.F          
 efield.F         
 fixed.F          
 grdsam.F         
 initdm.F         
 iocg.f           
 iodm.F           
 ioeig.f          
 iofa.f           
 iohs.F           
 iokp.f           
 iolwf.F          
 iomd.f           
 iorho.F          
 ioxv.F           
 kgridinit.F      
 ksv.F            
 linpack.f        
 ofc.f            
 outcoor.f        
 plcharge.f        
 pulayx.F          
 recoor.F          
 redata.F          
 redcel.F          
 reinit.F          
 repol.F           
 resize.F          
 siesta.F          
 version.f         
 fdf/ makefile     
 Libs/makefile
 Libs/lapack.f
 Libs/blas.f

========================================================================
Version: 1.0.8
Date: 1999/11/16  17:00:00
Title: Diagonalisation improvements and parallelisation over K points
Author: Julian Gale (j.gale@ic.ac.uk)

Description:

   The diagonalisation procedure has been slightly modified. So far
    many parallel diagonalisations have failed because of the memory
    being insufficient to separate clustered eigenvalues. The
    solution is obviously to provide more memory, which can be done
    using the "DiagMemory" option. However, it is not easy to know
    a priori how much extra memory is needed which leads to lots of
    job restarts from scratch. Hence, an option "TryMemoryIncrease"
    has been added to try to solve this problem internally to
    minimise the number of failing runs. The specific changes that
    have resulted are :

    (1) cdiag/rdiag now return an argument ierror which indicates the
        success or failure of diagonalisation. Ierror = 0 implies
        success, 1 implies fatal failure and -1 implies that failure
        was due to insufficient memory being available to separate
        clustered eigenvalues and that a repeat should be tried 
        with more memory.
    (2) the fdf option "TryMemoryIncrease" has been added with the
        default value ".true.". This implies that a parallel job
        will attempt to increase the memory available to diagonalisation
        by increasing "MemoryFactor" internally with the aim of
        achieving a successful diagonalisation without restarting
        the job externally
    (3) in routines that call cdiag/rdiag the ierror flag is now
        handled by calling "die" if there is a fatal error. If there
        was insufficient memory then the arrays are re-initialised
        and the diagonalisation repeated to see if it is successful
        - this only happens if TryMemoryIncrease is true.
    (4) For the case of multiple K points, nspin .le. 2, an
        option to parallelise over K points has been added in the
        new routine "diagkp" based on "diagk". This option gives
        good parallel performance for small unit cell metallic
        systems where the number of K points is much larger than
        the number of orbitals.
Files:
   Makefile
   cdiag.F
   diagg.F
   diag2g.F
   diagk.F
   diag2k.F
   diagkp.F
   diagon.F
   memoryinfo.f
   rdiag.F
   redata.F
   siesta.F
   version.f
========================================================================
Version: 1.0.7
Date: 1999/11/15  13:30:00
Title: KSV routines re-introduced for serial mode only + save attribute
Author: Julian Gale (j.gale@ic.ac.uk)

Description:
   Daniel's polarisation modifcations have now been introduced back
    into the merged version for SERIAL only execution at the 
    moment. There have been a few changes in the routines as well :

    (1) Dynamic memory has been introduced
    (2) KSV_pol has been split into an initialisation routine KSV_init
        that calculates just the dimensions needed and KSV_pol which
        does the actual calculation.
    (3) The code that performs the determinant calculation has been
        placed in a separate subroutine called linpack.f
    (4) The function dcabs1 in the Linpack routines has been modified
        to avoid a bug due to the optimising compiler on the Cray

    The "save" attribute has been added to allocatable arrays - this
    should help track down any memory leaks as an attempt to allocate
    an already allocated array from a previous call should result in
    an error. So far this has been done for the main routines where
    larger amounts of memory are allocated - should be extended to
    all arrays eventually.
    Also, in dhscf.F the maximum loop index in the calculation of X0
    prior to calling DIPOLE has been changed to NUA instead of NA
    otherwise the incorrect dipole moment is obtained.
Files:
   Makefile
   cdiag.F
   cellxc.F
   denmat.F
   detover.f
   dhscf.F
   diagpol.f
   ener3.F
   fft3d.F
   gradient.F
   iorho.F
   ksv.F
   ksvinit.f
   linpack.f
   ordern.F
   phirphi.f
   poison.F
   rdiag.F
   repol.F
   rhoofd.F
   siesta.F
   transp.f
   version.f
   vmat.F
========================================================================
Version: 1.0.6
Date: 1999/11/11  10:00:00
Title: Improved choice of default processorY value added
Author: Julian Gale (j.gale@ic.ac.uk)

Description:
   New features introduced for this version are :

    (1) Nearly all parameters that might be exceeded during a run have
        been replaced with dynamic memory. The remaining parameter
        statements are large to set run behaviour, rather than array
        sizes. Some array dimensioning parameters remain, but these
        related to numbers which are unlikely to change (such as the
        maximum angular moment possible for an orbital etc)
    (2) Variable declarations have been tidied up to produce fewer
        compiler warning concerning unused variables. This particularly
        applies to the scalar version
    (3) A small number of bug fixes, including initialisation of ql to
        zero to avoid a crash when semi-core states are present.
Files:
   coceri.f
   dot.f
   dnaefs.f
   naefs.f
   neighb.f
   ordvec.f
   outcoor.f
   parallel.f
   parse.f
   phirphi.f
   prmem.f
   radfft.f
   ranger.f
   recipes.f
   reord.f
   shaper.f
   version.f
   xc.f
   ylmylm.f
   atminit.F
   arw.F
   atomlwf.F
   bands.F
   cdiag.F
   cellxc.F
   cgvc.F
   chempot.F
   chkdim.F
   denmat.F
   dfscf.F
   dhscf.F
   diag2g.F
   diag2k.F
   diagk.F
   diagon.F
   dynamics.F
   efield.F
   egandd.F
   ener3.F
   fermid.F
   fft3d.F
   fixed.F
   gradient.F
   hsparse.F
   initdm.F
   iorho.F
   kgrid.F
   kgridinit.F
   kinefsm.F
   ksv.F
   mulliken.F
   nlefsm.F
   on_subs.F
   ordern.F
   overfsm.F
   pulayx.F
   redata.F
   rdiag.F
   redbasis.F
   rhoofd.F
   siesta.F
   timer.F
   vmat.F
   xijorb.F
========================================================================
Version: 1.0.5
Date: 1999/11/01  16:00:00
Title: Improved choice of default processorY value added
Author: Julian Gale (j.gale@ic.ac.uk)

Description:
   The program now chooses a default value of ProcessorY based on
    the total number of Nodes so that the processors are divided
    as evenly as possible in the two directions with the Y direction
    being the smaller factor. Currently only 2, 3 and 5 are used
    as possible factors. More could be easily added, but probably
    would be of limited use.
Files:
   siesta.F
   parallel.f
========================================================================
Version: 1.0.4
Date: 1999/10/28  13:00:00
Title: Input parameter to control workspace for diagonalisation added
Author: Julian Gale (j.gale@ic.ac.uk)

Description:
   A new input option "DiagMemory" has been introduced which allows
    the user to control how much workspace memory is made available
    to Scalapack. The memory that is given, the more likely it is
    that all eigenvalues will be converged as the separation of
    clustered values in this package is dependent on this. The
    default value is 2. A value of less than 1 will lead to failure!
Files:
   Makefile
   cdiag.F
   memoryinfo.f
   rdiag.F
   redata.F
========================================================================
Version: 1.0.3
Date: 1999/10/27   9:00:00
Title: Memory tracking added + minor bug fixes
Author: Julian Gale (j.gale@ic.ac.uk)

Description:
   In order to monitor the dynamic memory usage of SIESTA, a routine
    memory has been added which must be called everytime an array is
    allocated or deallocated. There is also a routine "printmemory"
    which can be called at anytime to output the peak memory use so
    far. Hopefully this should enable the detection of memory leaks
    and assist in determining whether a job fails to run due to lack
    of memory.
   Also a few minor bugs have been fixed where uninitialised variables
    were being accessed on restarting from an existing density matrix
    or from a conjugate gradients history file.
Files:
   Makefile
   siesta.F
   memory.F
   memoryinfo.f
   atminit.F
   atom.F
   atomlwf.F
   bands.F
   cdiag.F
   cellxc.F
   cgvc.F
   chempot.F
   denmat.F
   dhscf.F
   diagon.F
   dynamics.F
   egandd.F
   ener3.F
   extrapol.F
   fft3d.F
   gradient.F
   grdsam.F
   hsparse.F
   initdm.F
   iodm.F
   iolwf.F
   iorho.F
   kinefsm.F
   listsc.f
   matel.f
   mulliken.F
   nlefsm.F
   ofc.f
   on_subs.F
   ordern.F
   overfsm.F
   pulayx.F
   poison.F
   ranger.F 
   rdiag.F
   reord.f
   rhoofd.F
   transp.f
   vmat.F
========================================================================
************************************************************************
*********      OLD  (SERIAL ONLY) VERSION CHANGELOG    *****************
/////////      This version is kept in the cvs branch  /////////////////
/////////                    'siesta-0'                /////////////////   
************************************************************************
========================================================================
Version: 0.12.19
Date: 1999/09/4   05:00:00
Title: Minor change in subroutine redbasis and reKBblock
Author: Daniel Sanchez (daniel@roma.physics.uiuc.edu)

Description:
     Variable polorb included in the call of the subroutine 
     reKBblock 
File:
     redbasis.f
     redbasis_subs.f
=====================================================================
Version: 0.12.18
Date: 1999/08/12  23:00:00
Title: Minor changes to avoid compilation warnings
Author: Daniel Sanchez (daniel@roma.physics.uiuc.edu)

Description:
   Some minor changes in subroutines atom_subs.f, atom_functionss.f
    and KSV.f to try to eliminate some compilation warnings (reported
    by Pablo Ordejon) using Linux compiler 
Files:
   atom_subs.f
   atom_functions.f
   KSV.f
   Include/diagon.h : Value of the parameter maxhs set equal to 2.
========================================================================
Version: 0.12.17
Date: 1999/08/04  14:00:00
Title: Corrected bug in coceri.f
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  Coordinate output for cerius (coceri.f) was wrong because of
  a transposition of the inverse matrix of lattice vectors (to get
  to fractional coordinates.

Files:
  coceri.f
  usual (CHANGES, version.h, siesta.tex)
========================================================================
Version: 0.12.16
Date: 1999/08/03  01:30:00
Title: Corrected bug in redbasis.f
Author: Daniel Sanchez (daniel@roma.physics.uiuc.edu)

Description:
  Variables semic and lsemic were not correctly initialized,
  this causes an error in hp machines.

Files:
  redbasis.f : Variables semic and lsemic are now initialized
========================================================================  
Version: 0.12.15
Date: 1999/08/02  19:30:00  
Title: Restored variable savevh (bug introduced in recent change)
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Somehow I introduced an 'amass' within the name savevh

Files:
  siesta.f : Restored declaration of variable savevh
========================================================================  
Version: 0.12.14
Date: 1999/07/30  02:45:00
Title: Double-z orbitals orthogonalized to inner states
Author: Daniel Sanchez-Portal (daniel@roma.physics.uiuc.edu)

Description:
    With the option "split", the double-z orbitals are 
    explicitely orthogonalized to the inner (semicore) 
    states. 
    Minor bug corrected in subroutine draw_basis
Files: 
       atom_subs.f
       version.h
       Docs/CHANGES
========================================================================
Version: 0.12.13
Date: 1999/07/29  08:30:00
Title: More general type of "semicore" states allowed.
Author: Daniel Sanchez-Portal (daniel@roma.physics.uiuc.edu)

Description:
    Several modifications in the atomic routines allow now
    for a more general type of "semicore"-like states in the
    calculations.
    For example, if the pseudopotential of Ti is generated
    from a ionic configuration 3s2 3p6 3d2, the program will
    understand that the readed pseudopotentials belong to the
    states 3s and 3p rather than to the states 4s and 4p.
    The program can handle a different (independent) basis set
    for the 3s and 4s shell (for example), generated using the
    standard techniques, but now the PAO corresponding to
    the 4s state will have one node.

    Another  difference is that now the basis set is generated
    using the same configuration (self-consistent density) used
    to generate the pseudopotentials ( previously the atom
    was neutralize by rescaling the charge density).


Files:
   initatom.f
   atom.f
   atom_subs.f
   atom_functions.f
   redbasis.f
   redbasis_subs.f
   mulliken.f
   plcharge.f
   version.h
   Util/Denchar/Src/redata.f
   Util/Denchar/Src/phiatm.f
   Src/Include/atom.h
   Docs/CHANGES
   Docs/siesta.tex
========================================================================
Version: 0.12.12
Date: 1999/07/26  20:30:00  
Title: listh array restricted to unit cell
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  The listh array, which frequently took most of the memory when using
  k-sampling, is now restricted to the unit cell, and recalculated on
  the fly outside it, using a faster algorithm.

Files:
  dfscf.f   : Call to listh for orbitals out of the unit cell
  hsparse.f : Call to listh0 to initialize listh function
  listh.f   : New algorithm. Now a function for a given orbital.
  rhoofd.f  : Call to listh for orbitals out of the unit cell
  siesta.f  : Dimension of listh reduced from supercell to unit cell
  vmat.f    : Call to listh for orbitals out of the unit cell
  Makefile  : listsc.o depends on siesta.h
========================================================================
Version: 0.12.11
Date: 1999/07/20  7:30:00
Title: Several KB projectors for each angular momentum
Author: Daniel Sanchez-Portal (daniel@roma.physics.uiuc.edu)

Description:
  Several new routines have been added to the files atom_subs.f
  and redbasis_subs.f to allow the use of several KB projectors
  for each angular momentum. The implementation follows the
  work by Blochl, PRB 41, 5414 (1990). 

Files:
  atom_subs.f: Several new routines
  redbasis_subs.f: New routine to read the block PS.KBprojectors
  redbasis.f:  Added a call to routine reKBblock, two new arguments
  atom.f: to new arguments in the call of this routine, 
          and some other changes
  initatom.f: Modified the calls to routines atom and redbasis.
  matel.f: New parameter mxzkb (max. number of KB projectors per l)
  nlefsm.f: Value of the parameter maxkba from 16 to 25.
  version.h
  Include/atom.h:New parameter nkbmx(max. number of KB projectors per l)
  Include/matel.h:New parameter mxzkb(max. number of KB projectors per l)
  Docs/siesta.tex
  Docs/CHANGES
========================================================================  
Version: 0.12.10
Date: 1999/07/13  14:15:00
Title: Plrho support for bonding wireframe
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  A new routine (platom) was added to read the XV file and draw a
wireframe of bonds connecting atoms. Since it is still rather primitive
and unstable, its call is commented out in plrho.

Files:
  platom.f : Bond-wireframe routine (new)
  plin3d.f : Plots a line in 3 dimensions (new)
  plrho.f  : Added call to platom (still commented out)
  plrho.h  : zbuff array added to common block
  pltr3d.f : zbuff array moved to common block
  ray.f    : Added eps to denominator to avoid division by zero
  plrho_guide.txt : Added brief explanation on platom
========================================================================
Version: 0.12.9
Date: 1999/07/13  14:00:00
Title: First call to overfsm moved out of SCF loop
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  In order to be able to make some post-processing calculations which
may require the overlap matrix, with MaxSCFiterations=0 (reading the 
converged density matrix), the first call to overfsm was moved before
the start of the SCF loop.

Files:
  siesta.f : First call to overfsm moved out of SCF loop
========================================================================
Version: 0.12.8
Date: 1999/07/2  5:00:00
Title: Small modifications on the routine KSV_pol
Author: Daniel Sanchez-Portal (daniel@roma.physics.uiuc.edu)

Description:
  Just adding an exit point if no calculation has been requested

Files:
  Src/KSV.f
  Docs/CHANGES
========================================================================
Version: 0.12.8
Date: 1999/07/1  7:00:00
Title: Some modifications on the routine KSV_pol
Author: Daniel Sanchez-Portal (daniel@roma.physics.uiuc.edu)

Description:
  Some small changes in the routine KSV_pol, which calculates 
  the electronic polarization. 

Files:
  Src/KSV.f New argument shape, and some minor modifications
  Src/siesta.f Calls to the routine KSV_pol modify for the new parameter
  Docs/CHANGES 
========================================================================
Version: 0.12.7
Date: 1999/06/30  1:00:00
Title: Electronic polarization calculation using the Berry phase method
       (and other minor changes) 
Author: Daniel Sanchez-Portal (daniel@roma.physics.uiuc.edu)

Description: 
  The calculation of the electronic polarization for bulk systems
  using the Berry phase approach of R.D.King-Smith and D.Vanderbilt 
  (PRB 47, 1651 (1993)). The calculation is slightly different than 
  the usual approach used within plane-waves calculatios, and 
  calculations using gaussian basis sets, due to the numerical 
  (arbitrary radial shape) character of the basis used in SIESTA. 
  The matrix elements of the position operator in the basis set is 
  used, instead of the plane-wave that appears in the initial 
  formulation of the method. This method can only be applied 
  to insulators.

  The calculation of this matrix elements is performed by matel 
  only when the calculation of the polarization is requested, to 
  avoid the allocation of the extra-memory (relatively big compare
  with which was usually used by matel) when it is not necessary.

  Other small modifications in the atomic routines:
   *When the basis set is generated from a charged atomic 
    configuration (this must be explicetely requested in the input,
    it is not related with the configuration used to generate the 
    pseudopotentials) a message is print by the subroutine atom.
   *Radius of the orbitals for cations are now different (shorter)  
    than those of the neutral atom. For anions they are calculated
    from the neutral atom.
   *Some changes in subroutine USER to avoid problems with 
    the interpolation of the orbitals (readed from the numerical 
    tables) near zero.

   Corrected a small bug in SIESTA: 
    Usually the coordinates are moved after the last self-consistent
    calculation of the density-matrix. These changed coordinates 
    are then inconsistent with the density-matrix and forces used
    to calculate the forces, virial, LDOS, files to plot density, 
    etc... I have corrected this by saving the last coordinates 
    for what the electronic structure is actually calculated, and 
    using these coordinates to perform all these final calculations.
   
Files 
  Src/detover.f, KSV.f, phirphi.f, diagpol.f, repol.f (new files)
  Src/atom_functions.f (added three new functions) 
  Src/matel.f (strongly modified)
  Src/siesta.f, matel.h, siesta.h (modified)
  Src/atom.f, atom_subs.f, siesta.f (slight modifications)
  Src/Makefile 
  customary siesta.tex, siesta.ind, version.h, CHANGES
======================================================================== 
Version: 0.12.6 [to 0.11.5 in rel-0-11-fixes branch]
Date: 1999/06/18 12:30:00
Title: BUG Fixed in iorho.f concerning formatted/unformatted reading
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  A formatted read was done for unformatted files and vice-versa.
  It DID NOT affect the normal working of siesta since it was always
  using an unformatted file, and compilers were wise enough to
  disregard the * format. (In that case, how did we find it? I
  don't know, ask Jorge Kohanoff).

Files:
  iorho.f and customary
========================================================================
Version: 0.12.6 [to 0.11.5 in rel-0-11-fixes branch]
Date: 1999/06/10 17:45:00
Title: BUG Fixed: save alat in outcoor.f (bug only for certain compilers)
Author: Emilio Artacho (emilio.artacho@uam.es)

Files:
  outcoor.f and customary
========================================================================
Version: 0.12.5 
Date: 1999/06/09 12:30:00
Title: Denchar utility: it provides now atomic coordinates in 2D-plot coors
Author: Javier Junquera (javier@polar.fmc.uam.es)

Description:
  The package provides the possibility of giving the coordinates
  of any atoms of the calculated system in the reference frame of
  the 2D plot (the third coordinate would correspond to the one
  perpendicular to the plane and is zero for atoms within the plane).
    The atoms wanted are specified by giving their indices as in the
  siesta run, in the fdf block 2D.AtomsInPlane .

Files (all in Util/Denchar):
  Src/atompla.f  (new)
  Src/denchar.f, planed.f, rhoofr.f, readpla.f, wrout.f, Makefile (modif)
  Docs/denchar.tex
  Examples/ (all modified)
  customary siesta.tex, version.h, CHANGES
========================================================================
0.12.4 = 0.11.4  released as 0.11.f1
========================================================================
Version: 0.12.4 [0.11.4 in rel-0-11-fixes branch]
Date: 1999/06/09 10:45:00
Title: Rounding off release: Examples update and matel.h
Author: Emilio Artacho (emilio.artacho@uam.es)

Files:
  Examples/*/Out/*  updated for latest version
  Include/matel.h   changed MAXR to 128 and MAXQ to 1024 for consistency
                    (1 before, and the compiler complained)
========================================================================
Version: 0.12.4 [0.11.4 in rel-0-11-fixes branch]
Date: 1999/06/08 16:00:00
Title: Fixed bug in vmat.f  
Author: Jose M. Soler (jose.soler@uam.es)

Description:
   It was introduced in 0.10.20, and affected only Gamma-point
   calculations with substantial overlap between equivalent orbitals
   from different cells. Fixed.

Files:
   vmat.f
   customary siesta.tex, version.h, CHANGES
========================================================================
Version: 0.12.3 [0.11.3 in rel-0-11-fixes branch]
Date: 1999/06/08 12:30:00
Title: Fixed bug in atomlwf.f
Author: Pablo Ordejon (ordejon@icmab.es)

Description:
   The number of electron is now passed from ordern.f to atomlwf.f
   This fixes problems when charged cells and Order-N are combined.
   Also, checks are done to avoid the use of Ordejon-Mauri functional
   with charged cells.

Files:
   ordern.f, atomlwf.f
   customary siesta.tex, version.h, CHANGES
========================================================================
Version: 0.12.2  (No PL change)
Date: 1999/06/04 16:30:00
Title: Minor cosmetic changes. New .make files
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:
 * Minor cosmetic change in siesta.f to avoid
   check bounds warnings or errors at compile
   time.
 * Re-structuring of matel.f to help some 
   compilers.
 * Changes to some of the Sys/*.make files. Addition
   of some more.

   (No user-visible changes.)

Files:
   siesta.f:
   matel.f: 
   Sys/
   g77.make: ranlib used by default (BSD compatibility)
   g77-libs.make: New file. Uses system BLAS and LAPACK.
   nag-f90.make, nag-f95.make, pgf77.make, pgf90.make: New files.
========================================================================
Version: 0.12.2 
Date: 1999/06/03 12:30:00
Title: Changes to fdf behavior. Use of io_assign
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:
 * When calling fdf_init with 'stdin' as input file,
   some systems complain about the impossibility of
   rewinding unit 5. The fix consists of creating 
   a scratch file FDF_STDIN and passing it to
   fdf_init.
 * fdf has been updated to avoid using standard
   input directly (same mechanism).
 * Call to io_assign in atom.f (instead of 
   opening and closing unit 12)

   (No user-visible changes.)

Files:
   redata.f: Modified to use FDF_STDIN.
   fdf/fdf.f: Now deals more robustly with stdin.
   atom.f:   Call to io_assign 
   Makefile: Explicit dependencies for fdf files.
   customary version.h, CHANGES
========================================================================
Version: 0.11.1 0.12.1
Date: 1999/06/02 19:20:00
Title: Fixed bug in rhoofd.f
Author: Jose M. Soler (jose.soler@uam.es)

Description:
   It was introduced in 0.10.20, and affected only Gamma-point
   calculations with substantial overlap between equivalent orbitals
   from different cells. Fixed.

Files:
   rhoofd.f
   customary siesta.tex, version.h, CHANGES
========================================================================
Version: 0.11.0 0.12.0
Date: 1999/05/26 12:00:00
Title: Fixed bug in siesta.f, iomd was called with idyn instead of varcel
Author: Emilio Artacho (emilio.artacho@uam.es)

Files:
   Src/siesta.f
   (plus customary)
========================================================================
Version: 0.11.0 0.12.0
Date: 1999/05/25 16:00:00
Title:  Bug fixes
Author: Pablo Ordejon (ordejon@icmab.es)

Files:
   Src/bands.f           Call to diagk corrected
   Src/redata.f          fs_dafault defined as logical
   Src/version.h, Docs/CHANGES    Usual changes
========================================================================
Version: 0.11.0 0.12.0
Date: 1999/05/17 21:00:00
Title: Option to calculate a fixed spin state
Author: Pablo Ordejon (ordejon@icmab.es)

Files:
   Src/fermispin.f       New. Calculates occupations with fixed spin
   Src/diagg.f           Calls fermispin if spin is fixed
   Src/diagk.f           Calls fermispin if spin is fixed
   Src/diagon.f          Pass fixed spin info to diag routines
   Src/redata.f          Read new variables FixSpin and TotalSpin
   Src/siesta.f          Changes for fixed spin calcs.
   Docs/CHANGES          Changes for fixed spin calcs.
   Docs/siesta.tex       Changes for fixed spin calcs.
   Docs/siesta.ind       Changes for fixed spin calcs.
   Docs/release.notes_0.11       Changes for fixed spin calcs.
========================================================================
Version: 0.11.0 0.12.0
Date: 1999/05/17 20:00:00
Title: Fixed bug in cgvc.f 
Author: Emilio Artacho (emilio.artacho@uam.es)

Files:
  cgvc.f : It was using inver.f for matrix inversion, not good
           changed for reclat
  version.h, CHANGES, siesta.tex as usual
========================================================================
Version: 0.11.0 0.12.0
Date: 1999/05/05 17:15:00
Title: Fixed bug in madelung (mulecule) + fixed dim enlargement
Author: Emilio Artacho (emilio.artacho@uam.es)

Files:
  madelung         : bug: it checked whether it was a mUlecule (fixed)
  rhoofd, vmat     : maxloc: 200 -> 300
  matel            : NQ: 512 -> 1024
  kinefsm, overfsm : nomax: 10000 -> 20000
  nlefsm           : maxna:   500 ->  1000
                     maxno:  1000 ->  2000
                     maxo:  10000 -> 20000
  hsparse, xijorb  : maxna:   500 ->  1000
                     maxnkb: 1000 ->  2000
                     maxo:  10000 -> 20000
  shaper           : maxna:   500 ->  1000
  initdm           : maxat:   500 ->  1000
========================================================================
Version: 0.12.0 <=> 0.11.0 <=> 0.10.32
========================================================================
Version: 0.10.32
Date: 1999/04/26 18:30:00
Title: Corrected a bug which produced too large values of NFFR in MATEL
Author: Jose M. Soler (jose.soler@uam.es)
 
Description:
  A bug in searching previously stored functions produced too large 
  tables of FFR, with the same function repeated  two times.
  Value IR=0 was also excluded from the comparison.
  After these changes, the dimension of FFR could even be reduced.

Files:
  matel.f : Bug corrected
  Docs/siesta.tex  : Removed the description of the now-solved problem
  Docs/siesta.ind    (correpondingly) 1999/04/27 10:45
  Include/constr.f : Updated as in Src (unrelated to matel)
========================================================================
Version: 0.10.31
Date: 1999/04/26 16:00:00
Title: Reorganization of Sys. New environment variable SIESTA_SYS
Author: Alberto Garcia <wdpgaara@lg.ehu.es>
 
Description:
  * New, deleted, and modified files in Sys.
  * The environmental variable determining system/compiler/library
    settings is now SIESTA_SYS, instead of ARCH.
  * Some additions to the manual section dealing with compilation.
  (Changed version number since SIESTA_SYS is a 'major' change)

Files:

  Src/Sys/
  sgi.make    : Now uses sgi.f.
  sgi.f       : Includes timing routine.
  sgimath.make: Now uses sgimath.f.
  sgimath.f   : New file.
  g77-libs.make : (New file) For g77 systems with -llapack and -lblas.
  freebsd.make: (Deleted) Use g77 or g77-libs instead.
  diag_lapack.f: (New file) Included by relevant .f files.
 
  Util/
  msiesta     : Added comments. Changed ARCH to SIESTA_SYS
  rrsiesta    : Added comments.

  Src/
  Makefile    : Changed ARCH to SIESTA_SYS
  
  Docs/
  siesta.tex  : Re-wrote section on compilation. Updated to 0.10.31
========================================================================
Version: 0.10.30
Date: 1999/04/23 12:30:00
Title: SGI system-dependent makefile options
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  Some problems with the mathematical library of SGI were found by
  Julian Gale for the diagonalization. Also, some compiler options
  had to be changed for some SGI's OS flavors.

Files:
  sgi.make    : No libraries, uses general.f, and some flags changed
  sgimath.make: The previous version, with old flags and the math library
========================================================================
Version: 0.10.30
Date: 1999/04/20 17:00:00
Title: Revision and actualization of examples
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  Siesta examples are now:
   * H2O molecules as simplest, first contact. Plus ordern possibility.
     (unchanged, only updated)
   * Interstitial H in bulk Si, with a supercell of 64+1 atoms. SZ.
     Relaxation (40 Mb and 20 cefeo minutes).
   * bcc ferromagnetic bulk Fe, with GGA and partial core correction.
     Band structure and magnetic moment.
  Previous Si64 supercell example has been removed.
 
Files:
  Examples/H2O : h2o.fdf Out/h2o.out, out.fdf, siesta.size
           Fe  : analogous
           SiH : analogous plus sih.ANI (Xmol movie)
           Vps : Fe.inp and Fe.vps added
  Customary siesta.tex, version.h and CHANGES
========================================================================
Version: 0.10.29
Date: 1999/04/16 19:30:00
Title: sies2arc utility
Author: Julian Gale (j.gale@ic.ac.uk)

Description:
  Utility for extracting the coordinates from a SIESTA output file and 
  converting them into an arc file Movie for Cerius2/InsightII.

Files:
  Util/sies2arc/sies2arc.f  main program
                linepro.f   parses input lines
                wtof.f      converts word to a floating point number
                cell.f      converts cell parameters to cell vectors
                constants   contains fundamental constants
========================================================================
Version: 0.10.29
Date: 1999/04/14 21:45:00
Title: Cosmetics in redata + printing Max constrained forces
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Files:
  siesta.f, redata.f, siesta.tex, version.h, CHANGES
========================================================================
Version: 0.10.29
Date: 1999/04/13 19:00:00
Title: Changes in scripts + manual
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  Hopefully last changes for 0.11:
  - Scripts (msiesta etc) to avoid compilation of atom.f and related
    everytime
  - Manual: revision of explanations of scripts, and other details
  - Options Ang and Bohr as synonims of NotScaledCartesianAng etc.
  - Slight changes in siesta.f, outcoor.f, pulayx.f to avoid multiple
    fdf reading.

Files:
  msiesta, rsiesta, rrsiesta, qsiesta, qrrsiesta
  siesta.f, outcoor.f, recoor.f, pulayx.f
  siesta.tex, siesta.ind, CHANGES, version.h
========================================================================
Version: 0.10.28
Date: 1999/04/13 13:15:00
Title: Output: append in MD files + various in manual and siesta.f
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  - MD history files are now accumulative for different runs (so that 
    a restart of rrsiesta does not leaves us with a stupid face).
  - If coordinates are not written to standard output, they are by
    default accumulated in XMol format in file.ANI
  - Output of max constrained force in standard output
  - Manual describes it, plus inclusion of cond-mat ref ICSSS.

Files:
  pixmol.f iomd.f : accumulative (incorporates winding to end with
                    routines windu and windf in iomd.f)
  siesta.f : ANI default and writing constrained max force
  siesta.tex siesta.ind : manual
  CHANGES, version.h
========================================================================
Version: 0.10.28
Date: 1999/04/09 19:45:00
Title: Variable cell CG optimization
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  Variable cell CG optimization activated and described in the manual.
  See MD.VariableCell. It allows external pressure and non-hydrostatic
  stresses.

Files:
  cgvc.f : activated variable cell (before was shortcut)
  redata.f : changed some names and defaults.
  siesta.tex, siesta.ind
  Customary version.h, CHANGES
========================================================================
Version: 0.10.27
Date: 1999/04/08 15:40:00
Title: Minimal description of partial-core included in atom's User.Guide
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Files:
  Pseudo/atom/Docs/User.guide
========================================================================
Version: 0.10.27
Date: 1999/04/08 13:00:00
Title: EIG2DOS utility for DOS & acknowl in manual & coceri to Ang
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Files:
  Util/eig2dos.f
  Docs/siesta.tex, siesta.ind
  coceri.f : output for cerius has now lattice parameters in Ang.
  Customary version.h, CHANGES
========================================================================
Version: 0.10.27
Date: 1999/03/11 20:30:00
Title: Capability for charged systems, and minor corrections
Author: P. Ordejon (ordejon@condmat01.geol.uniovi.es)
 
Description:
  The capability to deal with charged systems is implemented.
  For atoms and molecules, the energy is corrected with
  a standard Madeliung term, for faster convergence vs cell size.

  Also, some minor changes in some routines have been made, 
  to avoid compilation warning due to non-initialized or
  not used variables.

Files:
  Src/Makefile       
  Src/atomlwf.f     Corrections to avoid compilation warnings 
  Src/bands.f       Corrections to avoid compilation warnings 
  Src/chempot.f     Corrections to avoid compilation warnings 
  Src/madelung.f    New file. Calculates Madelung correction
  Src/mulliken.f    Corrections to avoid compilation warnings 
  Src/ordern.f      Corrections to avoid compilation warnings 
  Src/propor.f      Corrections to avoid compilation warnings 
  Src/siesta.f      Changes to allow for charged systems
  Src/redata.f      Introduce new variable (NetCharge) for charged systems
  Src/typecell.f    New file. Identifies SC, FCC and BCC cells
  Src/version.h       
  Src/Sys/cdiag_general.f
                    Corrections to avoid compilation warnings
  Src/Sys/rdiag_general.f
                    Corrections to avoid compilation warnings
  Docs/CHANGES      This file
  Docs/siesta.ind   Index for 0.10.27 version
  Docs/siesta.tex   Manual for 0.10.27 version
========================================================================
Version: 0.10.26
Date: 1999/03/05 14:30:00
Title: Description of output files of atomic program in User.Guide
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  The contents of the different files generated by Alberto's atomic
  program are described in his User.Guide file.

Flies:
  Pseudo/atom/Docs/User.Guide
========================================================================
Version: 0.10.26
Date: 1999/03/04 17:20:00
Title: Re-introduced arguments listC and endC in rhoofd and vmat
Author: Jose M. Soler (jose.soler@uam.es)
 
Description:
  Although unused in the present version, arguments listC and endC
  are used in a special version of J.Junquera to save memory with
  k-sampling. Also changed the dimensions of some arrays to avoid
  compilation warnings.
 
Files:
  dhscf.f  : Calls to rhoofd and vmat
  minvec.f : New array iaux
  neighb.f : Dimension of iamove
  ranger.f : Dimension of iamove
  rhoofd.f : Restored arguments listC, endC
  vmat.f   : Restored arguments listC, endC
  xc.f     : Dimensions of ds and vxunif in pbxc
========================================================================
Version: 0.10.26
Date: 1999/03/02 01:31:00 (local time at Oviedo)
Title: Change definition of variables in ordern.f
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  Variables g and hg, which were defined as real*8 in ordern.f,
  are changed to real*4, to concord with their definition
  in cgwf.f (which is called by ordern.f).
  This change does not affect the results, but saves a
  little bit of memory.

Files:
  Src/ordern.f:   change definition of variables g and hg to real*4
  Src/version.h:  version 0.10.26
  Docs/CHANGES:   describe changes.
========================================================================
Version: 0.10.26
Date: 1999/02/28 20:15:00 (local time at Oviedo)
Title: Package VIBRA to compute phonons.
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description: 
  Package VIBRA to compute phonon frequencies and
  normal modes has been incorporated into the SIESTA
  distribution.  Changes in Siesta to compute the
  force constant matrix (used by VIBRA) have also
  been introduced, as a new MD option (to displace
  atoms one by one and compute the force constants)

Files:
  Util/Vibra:      New directory, with VIBRA sources, docs and examples
  Util/README:     List new packages
  Src/siesta.f:    Modified to compute the force constant matrix
  Src/ofc.f:       New file. Writes the force constant matrix to a file
  Src/redata.f:    Modified to read new dynamics variables
  Src/Makefile:    Modified to include ofc.f
  Src/version.h:   Tag version 0.10.26
  Docs/siesta.tex: Description of new variables
  Docs/siesta.ind: Update of index
  Docs/CHANGES:    Describe changes
========================================================================
Version: 0.10.25
Date: 1999/02/27 14:30:00 (local time at Oviedo)
Title: Incorporate O(N) automatic calculation of Chemical Potential 
       and correct bug in former siesta.f commit.
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  The automatic estimate of the Chemical Potential, in Order-N
  operation, is now incorporated in the Order-N routines.
  The estimate is done by the projection method of Goedecker,
  (PRB 51, 9455 (1995)), modified for non-orthogonal basis like 
  proposed by Stephan et al. (PRB 57, 6391 (1998), PRB 58, 13472
  (1998)).  
  Also, a small bug in the last siesta.f version was
  fixed (ns elliminated from call to ordern.f).

Files:
  chempot.f:         New file
  ordern.f:          Modified to call chempot.f
  redata.f:          Modified to read Chemical Potential related information
  siesta.f:          Modified to include calculation of Chemical Potential,
                     and small bug fixed (ellimination of ns from call to 
                     ordern)
  version.h:         Tag version 0.10.25
  Include/ordern.h:  Modified to include maxnh in the parameters list.
  Docs/siesta.tex    Description of new variables
  Docs/siesta.ind    Update of index
  Docs/CHANGES       Describe changes
========================================================================
Version: 0.10.24
Date: 1999/02/26 15:45:00 MET
Title: Various structural and cosmetic changes
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

Structural changes:

* .h files now reside in Src/Include, and need to be copied to the Src
directory before the first compilation. (Manual updated)

* System-dependent code now resides completely in Sys. Some files
(e.g., cdiag_general.f, rdiag_general.f, poison_general.f) have been
created from their counterparts in Src, and the latter removed. File
inclusion in architecture-dependent files is now kept to just one
level.

* Removed Sys/osf.f. Its functionality was identical to bsd.f
* Added g77.make and modified freebsd.make in Sys.	

* Makefile updated to include support for plusFORT-style checks and
to remove an spurious mention to cdiag.

Code changes:

* Array config in atm_pot dimensioned to (0:4) instead of (0:3)
* Some variables should be arrays in ggaxc and pbexc (fixed)

* (Daniel Sanchez-Portal) Various fixes in atomic routines.

* Gave explicit lenghts to "x" output descriptors and 
Hollerith variables.

* Removal of unused variables (too many files to list).

* Removal of unused arguments:

	Pulayx : listd
	Rhoofd : listc, endc
	Vmat   : listc, endc
	Polarization: b
	Initguess, cspa: ns

* Expansion of TABs in some files (tabs could cause problems with
some compilers).
========================================================================
Version: 0.10.23
Date: 1999/02/25 23:45:00
Title: Bug corrected in plcharge.f and DENCHAR 
Author: Daniel Sanchez-Portal (daniel@roma.physics.uiuc.edu)

Description:
    Program DENCHAR used an obsolote version of the atomic 
    subroutines. In fact, the version used was obsolete even 
    the first time that the program was added to the SIESTA 
    program. I doubt that the program had ever properly run, 
    due to this mismatch in versions.
    By passing I added a couple of format statements in some
    write sentences in the routines grid2d.f and rhoofr.f 

Files:
   plcharge.f (in SIESTA)
   redata.f, phiatm.f, rhoofr.f (in DENCHAR).
   grid2d.f (in Contour)
========================================================================
Version: 0.10.23
Date: 1999/02/24 24:00:00
Title: Bug corrected in atom_subs.f
Author: Daniel Sanchez-Portal (daniel@roma.physics.uiuc.edu)

Description:
   Bug corrected in atom_subs.f. In the previous versions
   the variable norb in the routine atm_pop was not initialized.
   Dimesions for the arrays in subroutines polarization and rc_vs_e
   are now provided by the file atom.h
   Minor semi-cosmetic changes in atom_subs.f atom.f and atom_functions.f

Files:
  atom_subs.f, atom.f, atom_functions.f
========================================================================
Version: 0.10.23
Date: 1999/02/21 22:05:00
Title: Conjugate gradient continuation file and flag
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  The conjugate gradient relaxation is no longer controlled by siesta
  but by cgvc. It stores auxiliary CG arrays in file belovedsystem.CG .
  Restarting with MD.UseSaveCG and MD.UseSaveXV and the .CG and .XV
  files from a previously interrupted CG relaxation, allows a smooth
  continuation of it. An irrelevant bug has been corrected.
    It is prepared for variable cell relaxation. In fact the code is
  there, ready, just called by MD.VariableCell true, but I am not still
  sure whether there is a bug in it, and I have disabled it 
  provisionally.

Files:
  cgvc.f, iocg.f : new
  siesta.f, redata.f, Makefile
  siesta.tex, siesta.ind, version.h, CHANGES
========================================================================
Version: 0.10.23
Date: 1999/02/21 18:15:00
Title: Introduction of k-sampling artillery into MD for variable cell
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  the calls within siesta prior to the MD cycle, related to k-sampling
  (kgrid, superc, etc) havev been introduced within for variabel cell
  MD, in which such things have to be recalculated.

Files:
  siesta.f, iomd.f
  CHANGES, siesta.tex version.h
=======================================================================
Version: 0.10.22
Date: 1999/02/21 17:15:00
Title: Description in the manual of previous changes; ibmesslp3.make; 
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  Actualization of siesta.tex with the new output features.
  New Sys file; ibmesslp3, adapted to the Power3 processor at Lyon

Files;
  siesta.tex, siesta.ind
  CHANGES, version.h
  Sys/ibmesslp3.make
========================================================================
Version: 0.10.22
Date: 1999/02/21 1:15:00
Title: Substantial output change; Gnubands utility; 
Author: Emilio Artacho (emilio.artacho@uam.es)
 
Description:
  Output has been made flexibler by the addition of several flags
  for optional printing of some (typically long) pieces: forces,
  k-points, bands, eigenvalues, coordinates etc, can now be switched
  on and off independently. 
    The default is now NOT to print most of those. A general FDF flag 
  "LongOutput" has been devised for turning on the printing of most of 
  them at once. Some cosmetics has been added to the output.
    The initial atomic coordinates are now written after ioxv. Before
  the fdf coordinates were always written, independent of whether the
  XV file was read or not.
    Several new files are now generated, in some cases only if the
  information does not go to standard output. Others keep the history
  of MD simulations (one of them for Xmol animation).

    Utility program GNUBANDS reads from standard input the .bands
  file grnerated by SIESTA and writes in standard output in a format
  directly readablo by Gnuplot.

Files:
  Makefile, siesta.f, redata.f, outcoor.f, recoor.f : modified
  atom.f, atom_subs.f, bands.f, superx.f            : cosmetics
  iokp.f, iomd.f, iofa.f, ioeig.f, pixmol.f         : new
  Util/gnubands.f                                   : new
  version.h, CHANGES
  siesta.tex, siesta.ind
========================================================================
Version: 0.10.22
Date: 1999/02/21 1:15:00
Title: BUG FIXED in atomlwf.f
Author:  Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  Program would crash on IBMs when dimensioning ordern subroutines.
  Alphas would behave strangely (ask for more dimensions after having
  been dimensioned) but not crash.

Files:
  atomlwf.f
========================================================================
Version: 0.10.21
Date: 1999/02/20 15:20:00
Title: Modifications mixing algorithms
Author:  Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  Fixed errors of version 0.10.21.  
  Changed output of si64 example.

Files:
  Src/Makefile
  Src/pulayx.f
  Examples/Si64/Out/si64.out
  Examples/Si64/Out/out.fdf
  Examples/Si64/Out/siesta.size
========================================================================
Version: 0.10.21
Date: 1999/02/20 14:45:00
Title: Modifications mixing algorithms
Author:  Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  The Pulay mixing algorithms have been modified and improved,
  and some new imput variables related to the mixing have been introduced.
  The Pulay mixing is now done mixing parts of both the input and
  output matrices of former steps (whereas in the previous versions
  only input matrices were used). This allows to perform the
  Pulay mixing on EVERY SCF cycle.  The algorithm and use is described 
  in the user guide siesta.tex.
  New input variables are defined, to:
  1) Skip the Pulay mixing once in a while, and use linear mixing with
     a different alpha (suggested by G. Fabricius). New variables: 
     DM.NumberKick, DM.KickMixingWeight
  2) Define whether mixing is done in first SCF iteration (usually it
     should not be done, but can be useful for SCF restarts). 
     New variable: DM.MixSCF1
  Also, the mixing.f routine for linear mixing has been elliminated.
  Now, linear mixing is also done by pulayx.f
  
Files:
  Src/siesta.f:     Modifications for new variables, ellimination of
                    mixing.f and new behavior of pulayx.f
  Src/redata.f:     New mixing variables
  Src/pulay.f:      New algorithm for mixing
  Src/mixing.f:     SUPPRESSED
  Src/version.h:    new version
  Docs/siesta.tex:  new variables explained
  Docs/siesta.ind:  new version
========================================================================
Version: 0.10.20
Date: 1999/02/19 20:15:00
Title: New version of DENCHAR (0.1.1)
Author:  Javier Junquera (junquera@condmat01.geol.uniovi.es)

Description:
Changes to the input of charge, suggested by E. Artacho.
The names of the variables have been changed: all variable
names are added a '2D.' in the beginning of the variable name
(in order to distinguish variables proper of DENCHAR in fdf
input files) and some names have been reduced.
Also, the fdf input file is now dumped at the beginning
of the output.
Also, version number has been added, and will be maintained
and upgraded in future versions.

Files:
  Util/Denchar/Src:       Makefile:  New file (dropped somehow in past version)
                          denchar.f: Small input changes
                          iodm.f:    Small output changes
                          readpla.f: Small input changes
                          rhoofr.f:  Small input and output changes
                          wrout.f:   New file
  Util/Denchar/Examples:  AtomicIndex.fdf:   Removed
                          AtomicIndices.fdf: New (old AtomicIndex.fdf, modified
                                                  for now input variables)
                          ThreePoints.fdf:   modified for now input variables
                          TwoLines.fdf:      modified for now input variables
                          NormalVector.fdf:  modified for now input variables
  Util/Denchar/Docs:      denchar.tex:  New version manual.
========================================================================
Version: 0.10.20
Date: 1999/02/18 14:15:00
Title: Scalar rhoofd, vmat, triangular but not inverted
Author: Jose M. Soler (jose.soler@uam.es)
 
Description:
  After some checks on ibms, decs, and sgi, there was an important
  variability on architecture for the inverted loops in rhoofd and vmat.
  This version recovers old structure (suited for scalar) but 
  incorporates triangularizations that increase spped in a factor of 2
  compared with the old version.
 
Files:
  rhoofd.f, vmat.f
  version.h, siesta.tex, CHANGES
========================================================================
Version: 0.10.19 
Date: 1999/02/16 14:30:00
Title: Structure for vmat more efficient on some platforms
Author: Julian D. Gale (j.gale@ic.ac.uk)

Description:
  Analogous (to some extent) to rhoofd 

Files:
  vmat.f
  version.h, siesta.tex, CHANGES
========================================================================
Version: 0.10.19 
Date: 1999/02/4  12:45:00
Title: Structure for rhoofd more efficient on some platforms
Author: Julian D. Gale (j.gale@ic.ac.uk)

Description:
 *Triangular sum instead of whole square-matrix sum: it doubles speed
 *Inverted order in do-loops, for a better parallelisation

Files:
  rhoofd.f
  version.h, siesta.tex, CHANGES
========================================================================
Version: 0.10.18 
Date: 1999/01/31  19:15:00
Title: Bug fixed in atom + saving mixed DM + correcting spellings
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
 *DM is now saved after mixing and mixing is done even in last iteration!
  Useful for O(N) scf step by step, and for achieving convergence with 
  small mixings in different steps.
 *BUG FIXED: basis type = user had a wrong output format.
 *Misspellings corrected

Files:
  siesta.f, denmat.f: mixing and DM saving
  atom_subs.f: bug fix
  several for misspellings
  version.h, CHANGES 
========================================================================
Version: 0.10.18 
Date: 1999/01/31  11:45:00
Title: RCS Id label inclusion in every file of Src/ and Docs/ (fdf excl.)
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  A first line in every SIESTA file (in the Src and Docs directories)
  has been added with the RCS Id information which tells the version
  number of each file for developer and user information.
Note: It originally stores emilio in that line since I made the commit,
  but it does not mean anything on authorship nor responsilbility on the
  particular files. It will be changing to more adequate names with
  future changes.

Files:
  Src/ (incl. Include/ and Sys/, but not fdf/)
  Docs/
========================================================================
Version: 0.10.18 
Date: 1999/01/19  10:00:00
Title: IBM-ESSL version of rdiag (continued)
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  include 'eispack.f', previously in cdiag.f has been moved also to 
  bsd.f, cray.f, general.f, ibm.f, and osf.f.

Files:
  Sys/bsd.f     : Added include '../eispack.f'
  Sys/cray.f    : Added include '../eispack.f'
  Sys/general.f : Added include '../eispack.f'
  Sys/ibm.f     : Added include '../eispack.f'
  Sys/osf.f     : Added include '../eispack.f'
========================================================================
Version: 0.10.18 
Date: 1999/01/18  18:30:00
Title: IBM-ESSL version of rdiag
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  A new version of rdiag, written by Jorge Kohanoff, which calls the
  IBM-ESSL library routine DSYGV, was added. Additionally, the line
  include 'eispack.f' in cdiag.f has been moved to ibmessl.f, which
  is the file actually compiled.

Files:
  Sys/ibmessl.f : Added new version of rdiag
                  Added include '../eispack.f'
  cdiag.f       : Removed include 'eispack.f'
========================================================================
Version: 0.10.17
Date: 1998/12/10  23:00:00
Title: Several fixes to dynamics subroutines.
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  This version patches several problems detected in the molecular
  dynamics routines:
  1) problems with natoms=1
  2) output of cell velocities for several variable cell shape 
     dynamics options
  3) error of reading of MD.BulkModulus variable (units included
     in the reading)
  Also, problems with DENCHAR program by J.Junquera are fixed
Files:
  Src/siesta.f   : Calls to dynamics rutines: print out pressure.
  Src/redata.f   : Correct reading of MD.BulkModulus
  Src/dynamics.f : Correct bug for natoms=1
  Util/Denchar/Src/denchar.f  : fdf_init declared as external
  Util/Denchar/Src/colinear.f : Bug fixed
========================================================================
Version: 0.10.16
Date: 1998/12/02  16:00:00
Title: New utility DENCHAR for 2D charge density plotting 
       (Alternative to Contour by E. Artacho)
Author: Javier Junquera (junquera@condmat01.geol.uniovi.es)

Description:
  Utility to read the density matrix and other information generated by 
  SIESTA and generate 2D grids in arbitrary planes for 2D contour drawing. 
  The SIESTA package has been modified to dump the necessary information
  to new output files.  This package is an alternative to the program
  Coutour (By E. Artacho). 
  DENCHAR  allows to plot the charge in an arbitrary plane using 
  a grid of arbitrary fineness (independent of the grid used in SIESTA). 
  The total charge density, the spin components, the magnetization 
  (difference of charges of spin up and down) and the difference between 
  the selfconsistent charge and the sum of atomic densities can be plotted.
  DENCHAR uses FDF to read the data of the plane in which the contours
  are plotted, and some other information (like names of the density
  matrix and other output files from SIESTA).  A manual is provided,
  as well as a directory with examples.
  DENCHAR contains the FDF package from A. Garcia and J. Soler,
  and many routines from SIESTA.

Files: 
  Util/Denchar/Docs/denchar.tex            : NEW. user guide

  Util/Denchar/Examples/AtomicIndex.fdf  | 
  Util/Denchar/Examples/NormalVector.fdf | 
  Util/Denchar/Examples/TwoLines.fdf     |
  Util/Denchar/Examples/ThreePoints.fdf  | : NEW. example input files

  Util/Denchar/Src/Makefile              |
  Util/Denchar/Src/chkdim.f              |
  Util/Denchar/Src/colinear.f            |
  Util/Denchar/Src/denchar.f             |
  Util/Denchar/Src/dmna.f                |
  Util/Denchar/Src/dot.f                 |
  Util/Denchar/Src/fdf.f                 |
  Util/Denchar/Src/fdf.h                 |
  Util/Denchar/Src/fdfdefs.h             |
  Util/Denchar/Src/io.f                  |
  Util/Denchar/Src/iodm.f                |
  Util/Denchar/Src/length.f              |
  Util/Denchar/Src/matvect.f             |
  Util/Denchar/Src/neighb.f              |
  Util/Denchar/Src/paste.f               |
  Util/Denchar/Src/phiatm.f              |
  Util/Denchar/Src/planed.f              |
  Util/Denchar/Src/prmem.f               |
  Util/Denchar/Src/ranger.f              |
  Util/Denchar/Src/readpla.f             |
  Util/Denchar/Src/redata.f              |
  Util/Denchar/Src/rhoofr.f              |
  Util/Denchar/Src/rlylm.f               |
  Util/Denchar/Src/splint.f              |
  Util/Denchar/Src/volcel.f              | : NEW. code sources and makefiles
========================================================================
Version: 0.10.15 
Date: 1998/12/01  15:30:00
Title: Three bug corrections related with k-sampling
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  If bands were asked without k-sampling for energy, a conflict occurred
  between routines diagon and bands, which share common blocks. Argument
  gamma has been added to diagon, in order to ensure that it uses complex
  diagonalization (even only for gamma) when the bands routine is used.
  Also, an incorrect call to redcel in bands produced a core dump when
  using the option BandLinesScale=ReciprocalLatticeVectors.
  Finally, a bug in dhscf has been corrected, which produced an incorrect
  value of the dipole moment when k-sampling was used.
Files:
  bands.f  : Corrected call to redcell
  dhscf.f  : Corrected calculation of x0 before calling dipole
  diagon.f : Added argument gamma
  siesta.f : Call to diagon
========================================================================
Version: 0.10.14 
Date: 1998/11/23  17:30:00
Title: Placing imported routines in separated files
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Routines not written by us, which were scattered across many files,
  have been placed in separated files, for copyright reasons.
  Apropriate acknowledgements have been added in the manual.
Files:
  arw.f      : NEW. Contains routines bcorgn, bcrmax, cnfig, egofb, 
               lmxofz, numin, numout, nrmlzg,  polint, qvlofz, 
               vhrtre, yofe, previously in atom_subs.f:
  atom_subs.f: Routines bcorgn, bcrmax, cnfig, egofb, lmxofz,
               numin, numout, nrmlzg,  polint, qvlofz, 
               vhrtre, yofe, moved to arw.f
               Routines ratint, spline, splint moved to recipes.f
               Routines paste, pasteb moved to paste.f
  cft.f      : NEW. Contains routine cft, previously in poison.f
  cdiag.f    : Routines eisch1, tql2c, htribk moved to eispack.f
  eispack.f  : NEW. Contains eisch1, tql2c, htribk, previosly in cdiag.f
  four1.f    : SUPRESSED. Routine four1 now in recipes.f
  ordix.f    : SUPRESSED. Routine ordix now in recipes.f
  paste.f    : NEW. Contains routines paste, pasteb, previously in
               atom_subs.f
  poison.f   : Routine cft moved to file cft.f
  recipes.f  : NEW. Contains routines four1, ordix, ratint, splin, 
               spline, splint, splinu, previously in other files.
  splin.f    : SUPRESSED. Routines splin, splinu now in recipes.f
  Makefile   : Adapted to the changes above
  Docs/siesta.tex : New section of acknowledgements, plus some update
                    of the Projected Changes and Additions section
========================================================================
Version: 0.10.14
Date: 1998/11/17  21:15:00
Title: New utility: 2D contour plotting
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  Utility to read 3D-grid functions information generated by SIESTA
  (.RHO, .DRHO, etc.) and generate 2D grids in arbitrary planes for
  2D contour drawing. It does not affect the rest of the SIESTA pack.

Files: 
  Util/Contour/grid2d.f          : the program
  Util/Contour/raw.in, noraw.in  : input examples
  Util/Contour/gnux11, gnups     : gnuplot use examples
  Util/Contour/README            : short explanation
========================================================================
Version: 0.10.14
Date: 1998/10/23  21:00:00
Title: Alphabetic index at the end of the manual (please check and keep)
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  An alphabetic index is added at the end of the manual. It is made by
  introducing \index{whatever} commands in the siesta.tex file, 
  running 'latex siesta', then 'makeindex siesta', and then 'latex
  siesta' again. 
Files:
  siesta.tex
  siesta.ind (index generated by makeindex)
========================================================================
Version: 0.10.14 
Date: 1998/10/23  18:30:00
Title: Bug corrections, mainly with k-sampling
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Parameters maxna and maxno were reduced to their minimun acceptable
    values (without margin for atom movements) when other parameters
    were changed, increasing the number of recompilations.
  Array conect in hsparse was incorrectly initialized with k-sampling.
  Array listno in listsc was written out-of-bounds when its dimension
    was too small.
Files:
  siesta.f  : avoid reducing maxna and maxno
  hsparse.f : corrected initialization of array conect
  listsc.f  : conditional writting of listno
========================================================================
Version: 0.10.13 
Date: 1998/10/18  14:00:00
Title: Plotting DeltaRho (Rho-Rho_atoms), msiesta, and manual revision *.h
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  New SaveDeltaRho FDF option to save the electronic density minus the
  sum of the atomic densities. File SystemLabel.DRHO
Files:
  dhscf.f:      Does the icalculating and calling to iorho (who writes).
                New argument at interface: fildrh, name of file to write.
  siesta.f:     Adapt to new dhscf.f interface and generate new name.
  grdsam.f:     Adapt to new dhscf.f interface.
  Util/msiesta: If init, cp *.h to working directory
  siesta.tex:   Documented + redocumenting .h files and generation.
  version.h and CHANGES
========================================================================
Version: 0.10.12 
Date: 1998/10/14  21:00:00
Title: One more optional input in block PAO.Basis
Author: Daniel Sanchez-Portal (daniel@polar.fmc.uam.es)

Description:
      -Now variable PAO.BasisType can assume different values for 
       different species. New optional input in data block PAO.Basis
Files:
  atom.f         :
  atom_subs.f    : 
  redbasis_subs.f:  
  redbasis.f     : 
  initatom.f     :
  version.h      : Changed the date but not the number of last version,
                   which is still 0.10.12
  Docs/siesta.tex  : Added description of the new parameter
========================================================================
Version: 0.10.12 
Date: 1998/10/13  17:00:00
Title: BUG FIX  in siesta, atom_subs and redbasis_subs 
Author: Daniel Sanchez-Portal (daniel@polar.fmc.uam.es)

Description:
     -New version of subroutine mulliken did not work properly because
      new arguments were not included in its call in main program
     -Corrected some bugs (lack of initialization for some variables)  
      in some subroutines from atom_subs.f, redbasis_subs.f (detected
      while runing in a Linux machine).
     -Corrected length of common blocks in atom_subs.f to avoid 
      errors in some compilers (detected while compiling in a  Linux
      machine).
      
Files:
  siesta.f       : Corrected call of subroutine mulliken
  atom_subs.f    : Bug fix
  redbasis_subs.f: Bug fix 
  version.h      : Changed the date but not the number of last version,
                   which is still 0.10.12
  Examples/H2O/Out : Updated outputs
  Examples/H2O/OrderN/Out : Updated outputs
  Examples/Si64/Out : Updated outputs
  Docs/siesta.tex  : Added description of the data block PAO.BasisSizes
========================================================================
Version: 0.10.12
Date: 1998/10/10  20:00:00
Title: BUG FIX in outcoor + New flag in outcoor + Cosmetics
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  - outcoor would generate wrong fractional coordinates because of a
    matrix transposition (fixed).
  - New 'WriteCoorStepNot' for not writing coordinates at each time step
  - Cosmetics for output in various files.
  - Output formats in new atom-related: it should be '1x' instead of 'x'

Files:
  outcoor.f   : bug + flag
  mulliken.f  : formats to 1x
  matel.f     : cosmetics (Estee Lauder)
  redata.f    :   "
  atom.f      :   "
  atom_subs.f :   "
  siesta.tex  : new flag + some small changes
  version.h
========================================================================
Version: 0.10.11
Date: 1998/10/9  19:00:00
Title: New implementation of the subroutine atom, and more flexible input
       for the basis set 
Author: Daniel Sanchez-Portal(daniel@polar.fmc.uam.es)

Description:
  General restructuring of atom subroutine(s), cutting it to pieces,
  redefining functions for interface with SIESTA, and redefining the
  input for the basis, being now much more flexible.

  Semicore states (in a simple version) can be now introduced.

  A BUG was FIXED for perturbative polarization orbitals.

Files:

atom.f: 
  Strongly modified. The routine has been completely restructured. Different
  calculations (local pseudopot., basis set, neutral-potential, etc...) are now
  performed by different routines which are called by the 'main' routine atom.
  These new routines are included in the file atom_subs.f.
  Semicore states can be automatically included, though in a quite naive way.
atom_functions.f: 
  NEW. Include all the 'atom dependent' functions. Most of the old ones
 (phiatm, rcut, ...) have been modified, and new functions have been coded.
atom.h: 
  Type declaration for the parameters included in the file. Parameter 
  ntbmax increased to 500.
atomlwf.f: 
  subroutine atomlwf: lmax, lmaxs and nzls erased from the input
  subroutine initguess: lmax, lmaxs and nzls erased from the input, information
  now provided by functions lomaxfis and nztfl
atom_subs.f: 
  32 new subrotuines have been added. Fixed a BUG in the interpolation of
  polarization orbitals. As a consecuence, the contribution to the forces
  coming from this orbitals, in spite of being consitent with energy, show 
  an oscillatory behaviour which could worse the convergence with the grid 
  spacing.
  The effect could be more important only for H, or other elements having 
  'p' polarization orbitals.
chcore.f: 
  Deleted (now included in atom_functions.f)
dnaefs.f: 
  Argument izs removed, information now provided by izofis function
epskb.f : 
  Deleted (now included in atom_functions.f)
initatom.f: 
  Several arguments have been removed from the call to this routine.
  Included a call to subroutine redbasis (before calling subroutine atom).
  Checks for several dimensions have been deleted.
Makefile: 
  Added files: atom_functions.f, redbasis.f redbasis_subs.f
  Deleted files: chcore.f epskb.f phiatm.f psover.f rcore.f rcut.f uion.f
  All the deteled routines, together with other 'atom depedent' functions,
  now included in the file atom_functions.f
  File initatom.f now depends on dimensions in atom.h
matel.f : 
  Deleted arguments lmaxs, lmxkbs, maxls and nzls in subroutine matel0.
  The information is now provided by functions lomaxfis, lmxkbfis and nztfl.
mulliken.f : 
  Added arguments isa, iphorb and iaorb. Changes in the ouput
  format for the population analisys: Now a label with the
  symmetry of each orbital is also printed.
naefs.f: 
  Argument izs removed, information now provided by izofis function
ordern.f: 
  lmax, lmaxs and nzls erased from the input
outcoor.f:  
  Argument atm_label removed, information now provided by
phiatm.f : 
  Deleted (now included in atom_functions.f)
rcore.f :  
  Deleted (now included in atom_functions.f)
rcut.f  :  
  Deleted (now included in atom_functions.f)
redata.f :  
  Several arguments have been removed from the call to this routine.
  All the information about atomic orbitals, pseudopotentials and atomic
  masses is now read by subroutine redbasis called by subroutine initatom. 
  Default masses for floating Bessel functions set to 1.0d30 a.u.
  Dynamics type is always set to 'cg' if the system contains just one atom.
redbasis.f: 
  NEW. Reads the information about atomic orbitals, pseudopotentials and atomic
  masses. Called by subroutine initatom.
redbasis_subs.f: 
  NEW. This file include nine routines used by redbasis to read the input (fdf)
  file in several possible formats.
siesta.f : 
  Several arrays containing information about the chemical
  species and the basis set have been removed. Calls
  of routines redata, initatom, matel0,naefs, dnaefs, ordern,
  and outcoor have also been modified.
Include/atom.h:
  Type declaration for the parameters included in the file. Parameter
  ntbmax increased to 500.
Include/siesta.h : 
  Parameters maxl, maxos, maxs, maxzet have been suppressed.
Examples/H2O/Out : Updated outputs 
Examples/H2O/OrderN/Out : Updated outputs 
Examples/Si64/Out : Updated outputs
Docs/siesta.tex  : Updated basis set description
========================================================================
Version: 0.10.10 
Date: 1998/08/28  19:00:00
Title: Efficient k-sampling implementation
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  The need to use very large supercells, in order to do k-sampling,
  has been eliminated, making k-sampling efficient. Other canges are:
  - BUG corrected in dhscf => now finds more adjusted cutoffs.
  - Now k-sampling and bands are compatible with non-collinear spin
  - Suppressed automatic k-sampling when using SuperCell
  - Auxiliary arrays now shared by diagon and bands
  - Optimized matrix multiplication algorithm in diagon
  - Added LAPACK complex diagonalization routine for osfdxml systems
  - neighb initialized before each use
  - Suppressed writting the density matrix in denmat
  - Avoid decreasing array dimensions in ranger
  - Array xijo now dimensioned only when necessary

Files:
  Makefile  : Added routines diagg, diagk, diag2g, diag2k, digcel,
                             redcel, superc, and superx
              Suppressed routine diagnc
  atomlwf.f : Initialization of neighb done always
  bands.f   : Calls diagk and diag2k
              Auxiliary space shared with diagon trough common block
  denmat.f  : Suppressed writting the density matrix
  dfscf.f   : Added argument indxuo to add forces to atom in unit cell
  dhscf.f   : Calculate things only in the unit cell (many changes)
              Corrected a BUG to find the mesh cutoff for nonothorhombic cells
  dynamics.f: Corrected the name of the routines in error message
  diagnc.f  : SUPRESSED (now diag2g)
  diagg.f   : NEW. Diagonalization for gamma only
  diagk.f   : NEW. Diagonalization with k sampling
              Optimized matrix multiplication algorithm
  diag2g.f  : NEW. Same as diagg for non-collinear spin
  diag2k.f  : NEW. Same as diagk for non-collinear spin
  diagon.f  : Calls diagg, diagk, diag2g and diag2k to do the work
              Auxiliary space shared with bands trough common block
  diagon.h  : Suppressed maxspn. Added maxhs and maxpsi
  digcel.f  : NEW. Finds diagonal unit cell and supercell combination
  dnaefs.f  : Distiction of unit cell and supercell. neighb initialized
  grdsam.f  : Call to dhscf
  hsparse.f : Slight comment corrections (code not changed)
  initatom.f: Suppress repeated arguments
  iohs.f    : Array xij not written when only gamma point is used
  kgrid.f   : Suppressed automatic k-sampling for SuperCell use
  kinefsm.f : Distiction of unit cell and supercell. neighb initialized
  listsc.f  : NEW. Expands neighbour lists from unit cell to supercell
  naefs.f   : Distiction of unit cell and supercell. neighb initialized
  nlefsm.f  : Distiction of unit cell and supercell. neighb initialized
  overfsm.f : Distiction of unit cell and supercell. neighb initialized
  ranger.f  : Avoid decreasing array dimensions
  recoor.f  : Expand coordinates to supercell
  redata.f  : Supercell atomic coord. now done by new supcel routine
              Specified SuperCell now becomes operative unit cell
  redcel.f  : NEW. Reads the unit-cell/supercell vectors
  rhooda.f  : Added argument indxuo to work only within unit cell
  rhoofd.f  : Added argument indxuo to work only within unit cell
  siesta.f  : Calculate things only in the unit cell (many changes)
  siesta.h  : Suppressed parameter maxkba
              Added parameter maxxij to dimension array xijo
              Name of parameter dimaux changed to maxpul
  superc.f  : NEW. Finds the required supercell and expands arrays to it.
  superx.f  : NEW. Expands coordinates from unit cell to supercell.
  version.h : New version 0.10.10
  vmat.f    : Added argument indxuo to work only within unit cell
  vmb.f     : Return if nat=1
  xijorb.f  : Name of argument 'cell' changed to 'scell'.
  Include/siesta.h : Suppressed parameter maxkba
  Include/diagon.h : Suppressed maxspn. Added maxhs and maxpsi
  Sys/bsd.f     : cdiag added to system-dependent routines
  Sys/cray.f    : cdiag added to system-dependent routines
  Sys/general.f : cdiag added to system-dependent routines
  Sys/ibm.f     : cdiag added to system-dependent routines
  Sys/ibmessl.f : cdiag added to system-dependent routines
  Sys/osf.f     : cdiag added to system-dependent routines
  Sys/osfdxml.f : New version of cdiag to use LAPACK routine zhegv
  Sys/sgi.f     : cdiag added to system-dependent routines
  Docs/siesta.tex     : Updated k-sampling instructions
  Docs/siesta/CHANGES
  Examples/H2O/Out/*  : Updated outputs
  Examples/Si64/Out/* : Updated outputs
========================================================================
Version: 0.10.9 
Date: 1998/07/14  11:30:00
Title: Increased tolerance in shaper routine
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  In some cases, the system shape was incorrectly reported as bulk
  because the tolerance in routine linvec (1.e-10) was too small.

Files:
  shaper.f : Tolerance in routine linvec increased to 1.e-6
========================================================================
Version: 0.10.8 
Date: 1998/07/13  16:15:00
Title: Corrected calculation of local density of states
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  After previous change, LDOS was incorrectly calculated, because the
  hamiltonian was reinitialized but the dhscf part was not included
  before calling diagon to find the LDOS density matrix.

Files:
  siesta.f : Eliminate the reinitialization of H
========================================================================
Version: 0.10.7
Date: 1998/06/26  17:30:00
Title: Grid-cell sampling for accelerated grid convergence
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  Sampling displacements of the system with respect to the grid
  across the grid cell is used to symmetrize energies, forces, stresses
  and dipoles. It allows a better convergence with grid cutoff by
  reducing the egg-box effect. The displacements are introduced 
  within the block GridCellSampling (see the manual)

Files:
  grdsam.f : new subroutine doing the sampling at the end of an SCF cycle
  siesta.f
  dhscf.f  : sampling is done by calling dhscf for each displacement
  Makefile
  siesta.tex
========================================================================
Version: 0.10.6  and  0.9.2
Date: 1998/06/22  21:45:00
Title: Corrected MAXL dimension in ylmexp. (SEVERE BUG for L>2)
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Due to an insuficient dimension, the overlap was incorrect for L>2,
  including the f Kleinman-Bylander operators.

Files:
  ylmexp.f : maxLM = maxL**2 changed to (maxL+1)**2
  ylmylm.f : Same correction
========================================================================
Version: 0.10.5
Date: 1998/06/22  21:45:00
Title: Corrected supercell hamiltonian symmetrization
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  The condition if (ncells .lt. 1) was incorrect, because ncells must
  be at least one. As a consecuence, no supercell symmetrization was
  done. Now it has been corrected to if (ncells .gt. 1)

Files:
  diagon.f : if (ncells .lt. 1) changed to if (ncells .gt. 1)
  Examples/Si64/Out/si64.out    : Updated output
  Examples/Si64/Out/out.fdf     : Updated output
  Examples/Si64/Out/siesta.size : Updated output
========================================================================
Version: 0.10.4
Title: Remove unused subroutine ylmr
Author: Jose M. Soler (jose.soler@uam.es)

Files:
  atom_subs.f : Subroutine ylmr removed
=======================================================================
Version: 0.10.3
Date: 1998/06/22  21:45:00
Title: No mixing in last iteration and when wmix=0
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  An unexpected behavior occurred when only one iteration was done,
  because in the first iteration, the whole new density matrix is
  taken, irrespective of the mixing weight (this is because the first
  density matrix is not idenpotent). Now, the mixing subroutines are 
  not called in the last iteration, even if it is also the first one.

Files:
  siesta.f : Conditions to call mixing and pulayx
========================================================================
Version: 0.10.2
Date: 1998/06/22  21:45:00
Title: Added non-collinear spin
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  In the non-collinear-spin density functional, spinor wavefunctions
  and 2x2 spin density matrices allow the spin to change direction
  at every point. Ref: T. Oda et al, PRL 80, 3622 (1998).
  Non-collinear-spin density matrix has 4 components (nspin=4).
  No k-sampling allowed in this version for non-collinear-spin.

Files:
  bands.f    : Return if nspin=4
  dfscf.f    : Free-atom and SCF contributions separated and initialized
  dhscf.f    : Handle the nspin=4 case
  diagnc.f   : (New) Eigenvalue problem in spinor space (doubled)
  diagnc.h   : (New) Dimension parameters for diagnc
  initdm.f   : Initialize the non-collinear-spin density matrix
  mulliken.f : Handle the nspin=4 case
  redata.f   : Read the NonCollinearSpin fdf label
  rdiag.f    : Word ERROR added in error message
  siesta.f   : Handle the nspin=4 case. Call diagnc
  xc.f       : Diagonalize the spin density matrix in routine ldaxc
  Makefile   : Add diagnc
  siesta.tex : Add NonCollinearSpin and modify DM.InitSpin options
========================================================================
Version: 0.10.1  and  0.9.1
Date: 1998/05/18  13:21:16
Title: msiesta not to find .h files in subdirectories
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:
  An unexpected behavior of msiesta was that it could find (and use
  to replace) .h files in subdirectories of the working directory.
  This was due to the use of 'find' by msiesta, now supressed.

Files:
  Util/msiesta : use of find supressed.
========================================================================
Version: 0.10.0 <=> 0.9.0 <=> 0.8.53
========================================================================
Version: 0.8.53
Date: 1998/05/5  21:30:00
Title: Revising script files + comment on them in the manual
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  Script files qsiesta and qrrsiesta allow running in the absence of other
  scripts from the working directory.

  msiesta copies Include/ordern.h and Include/diagon.h in working directory
  if init.

  Manual has a comment on the convenience of "touch" *.h in a working
  directory if recompiling after some time (after other systems have been
  compiled.

Files:
  qsiesta, qrrsiesta, msiesta
  siesta.tex
========================================================================
Version: 0.8.52
Date: 1998/05/4  20:25:00
Title: Printing Qtot before DM normalization in O(N) solution
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  Write Qtot before and after the DM renormalization, in O(N) calculations.
  This is usefull to bracket the value of eta.

Files:
  ordern.f       : Change the format of the printout of qtot
  denmat.f       : Write qtot before normalization
========================================================================
Version: 0.8.51 
Date: 1998/05/3  22:30:00
Title: Removing unused variables + adding parenthesis: Avoiding warnings
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  From the compilation of SIESTA 0.8.50 with g77 -Wall (linux), warnings
  concerning unused variables and ambiguous math expressions have been
  used for their correction. Unused variables have been removed and 
  parenthesis have been added to math expressions.

Files: (and variables removed)
  Sys/cray.f    : times (in cputim.f)
  Sys/ibm.f     : times (in cputim.f)
  Sys/ibmessl.f : i, j, np (in poison.f)
  Sys/osfdxml.f : i, j, np (in poison.f)
  atom.f        : loctype, namaux
  atom_subs.f   :
  bands.f       : ie
  bessph.f      :
  cdiag.f       :
  constr.f      : fz
  cputim.f      : times
  denmat.f      : iunit
  dhscf.f       : epsxc, qatm, qscf, ro, wspin
  diagon.f      : found
  efield.f      :
  fermid.f      :
  four1.f       :
  gradient.f    :
  hsparse.f     : kno, jno, ina
  idiag.f       :
  initatom.f    : il
  initdm.f      : fname
  iorho.f       : sname
  kgrid.f       :
  nlefsm.f      : kna
  ordvec.f      : jv 
  outcoor.f     : i, iunit, title
  overfsm.f     :
  poison.f      :
  prmem.f       : namety
  psover.f      : is
  radfft.f      :
  ranger.f      : drm, dxm, iv, ivx, nxlast, volmin
  rdiag.f       :
  redata.f      : alat_defect, smassr, iscale, flc
  reord.f       : iaux, j1, j2, j3
  rlylm.f       :
  siesta.f      : overflowna, pi
  splin.f       :
  vmat.f        : p0
  xc.f          : 
  xijorb.f      : kno, jno, ina
========================================================================
Version: 0.8.50 (continued, no code change but cosmetics)
Date: 1998/04/29  20:45:00
Title: Output cosmetics + adding E_KS output for each SCF loop end.
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  Surface reflectivity and different light sources have been introduced.
  The illumination data may be specified in light.dat file.

Files:
  siesta.f  (E_KS writing + cosmetics)
  ordern.f  (output cosmetics)
  chkdim.f  (")
  cgwf.f    (")
  siesta.tex (Alberto added to front page of manual)
========================================================================
Version: 0.8.50
Date: 1998/04/15  16:00:00
Title: Variable illumination in plrho
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Surface reflectivity and different light sources have been introduced.
  The illumination data may be specified in light.dat file.

Files (all in siesta/Util/Plrho):
  ray.f     : New function, which returns a pixel light intensity (ray)
  pltr3d.f  : Call to ray
  plrho.f   : Added include 'ray.f' statement
  light.dat : New. Example of illumination data file
  plrho_guide.txt : Documentation of these changes
========================================================================
Version: 0.8.50
Date: 1998/04/15  16:00:00
Title: Printed Fermi energy
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Fermi energy re-printed after the eigenvalues

Files:
  siesta.f : Added a write line.
========================================================================
Version: 0.8.49
Date: 1998/04/14 21:40:00
Title: Reading atomic masses + cosmetics + fix bugs (linux.make, outcell)
Author: Emilio Artacho (Emilio.Artacho@uam.es)

Description:
  Atomic masses can be now read through an fdf block: AtomicMass.
  The species not included in the block assume standard value for the
  species. If block not present, standard values for all (as before).
   
  linux.make lacked RANLIB definition. Fixed.

  outcell.f wrote cell volume in wrong units. Fixed.

  Cosmetics: initatom does not write poems any more. And others.

Files:
   remass.f : new for mass reading
   redata.f : calls it plus cosmetics
   Makefile
   outcell.f: bug fixed
   initatom.f
   atom.f
   prversion.f
   siesta.tex
========================================================================
Version: 0.8.48
Date: 1998/04/04 17:15:00
Title: Temperature in output
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:

The temperature is writen on output for any MD flavour.
(Error corrected in if statement)

Files:
   siesta.f
========================================================================
Version: 0.8.48
Date: 1998/04/04 17:15:00
Title: Optimized memory for Order-N routines
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:

Redefined the dimension of several matrices in the Order-N routines,
which were oversized. The result is a reduction in executable size
for Order-N calculations. The reduction is related to the maxnhf 
parameter.

Files:
   denmat.f:   eliminate nhfmax parameter. sustitute by nfmax 
               in chcc and cscc matrices definitions
   egandd.f:   substitute maxnhf by maxnf in definition of f and fs
   gradient.f: eliminate nhfmax parameter. sustitute by nfmax 
               in f and fs matrices definitions
========================================================================
Version: 0.8.47
Date: 1998/03/25 13:00:00
Title: New Util scripts. Makefile extensions
Author: Alberto Garcia <wdpgaara@lg.ehu.es>

Description:

The scripts in Util have been rewritten using Bourne shell constructs. Only
minor changes in their functionality have been introduced (mostly more
robust warnings).

Added support for Cray and SGI machines. For the latter, a default
binary architecture -mips4 is assumed. Added a $(COMMENTS) symbol
to sgi.make (echoed in Makefile) to warn the user.

Files:
Directory Util: prdate, msiesta, rsiesta, rrsiesta, qsiesta, qrrsiesta
Directory Src/Sys: cray.f, cray.make, sgi.f, sgi.make: new files.
Directory Src: Makefile: Made 'nodebug' compilation the default.
                         Corrected outcoor entry. Echoed $(COMMENTS).
========================================================================
Version: 0.8.46
Date: 1998/03/18 13:45:00
Title: Suppressed an incorrect call to matel0
Author: Jose M. Soler (jose.soler@uam.es)

Description:
 Suppressed an extra call to matel0, which was inadvertently left in 
 siesta.f in last version.
 Variables I1=1 and I2=2 introduced in matel to avoid a compilation
 message with the -C option (array bounds check) 

Files:
 siesta.f
 matel.f
========================================================================
Version: 0.8.45
Date: 1998/03/16 16:32:00
Title:  Commentaries changed.  
Author: Daniel Sanchez-Portal (daniel@polar.fmc.uam.es)

Subroutine initatom.f :
 Arrays rcls, contrf, lmaxs, lmxkbs, nzls 
 have to be considered as belonging to the output rather than to the 
 input of the routine. The commentary on the begining of the routine
 has been changed in that sense.
Subroutine atom.f :
 The same as initatom.f 

Subroutine r_vs_e and polarization:
 Some lines have been commented to avoid the 'uncontroled' ouput 
 that appered when the programme was run in some machines.

Files:
  initatom.f : Updated header commentaries
      atom.f : Updated header commentaries
 atom_subs.f : Some lines commented in routines r_vs_e and polarization
========================================================================
Version: 0.8.44
Date: 1998/03/13 13:30:00
Title: Optimized diagonalization
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Some loops for the generation of the density matrix from the 
  eigenvectors were interchanged, to improve memory access.
  New versions for rdiag and cdiag, using lapack routine dsygv
  of the DEC dxml library. 
  These changes reduce CPU time by more than 50% in many cases.

Files:
  diagon.f      : Exchanged some loops
  Sys/*.f       : Added include '../rdiag.f' sentence
  Sys/osfdxml.f : Added new rdiag version, calling a lapack routine
  Makefile      : Supressed rdiag
  Examples/H2O/Out/*    : Updated outputs
  Examples/H2O/OrderN/* : Updated outputs
  Examples/Si64/Out/*   : Updated outputs
========================================================================
Version: 0.8.44
Date: 1998/03/13 13:30:00
Title: Reorganized system-dependent versions
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  In order to handle more easly the system-dependent versions, the
  'general' (source code) versions are kept in the Src directory.
  The files Src/Sys/*.f, containing the system-dependent versions,
  now contain sentences like include '../poison.f', when necessary.

Files:
  Src/poison.f : (new) General version
  Src/cputim.f : (new) General version
  Src/Sys/*.f  : explicit source code of general versions substituted
                 by sentences like include '../poison.f'
========================================================================
Version: 0.8.44
Date: 1998/03/13 13:30:00
Title: Creation of matel.h
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Although the sizes of the arrays in routine matel are independent of
  system size, and neglegible for large systems, they were dimensioned
  for the largest systems (5 species with spd DZP) and they took most 
  of the memory for small systems. A new file matel.h, written by a
  new matel0 entry point in matel.f, was introduced to solve this,
  using the run-compile loop method.

Files:
  Include/matel.h : (new) basic dimension parameters for matel
  matel.h  : same as Include/matel.h
  matel.f  : new matel0 entry point
  siesta.f : call to matel0
========================================================================
Version: 0.8.44
Date: 1998/03/13 13:30:00
Title: Corrected decomposition of final energies
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  A missing term -Uatm in the ion-electron interaction energy, printed
  in the 'Final energy' output was added.
  Ecorrec was changed to eta*DQ (only the printed name).
  Ekinion was included in the final energy decomposition.
  
Files:
  siesta.f
========================================================================
Version: 0.8.43
Date: 1998/03/10 11:30:00
Title: Changed tolerace in routine livec
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Changed tolerace to 1.d-10 in routine livec, called by shaper,
  in order to solve a problem found by Pablo for a slab.
  
Files:
  shaper.f  : Parameter TOL of LIVEC changed to 1.D-10
========================================================================
Version: 0.8.42
Date: 1998/02/23 12:05:03
Title: Implemented Version string management
Author: Jose M. Soler (jose.soler@uam.es), 
        Alberto Garcia (wdpgaara@lg.ehu.es)

Description:
  The version of the code in use is written in version.h, and is
  printed in every siesta run. That version number is consistent
  with the one appearing on the manual front page, as well as the
  corresponding date. 
    Odd version numbers (like 0.9) are distribution releases, 
  with possible bug fixes: 0.9 fix 3.
    Even version numbers (like 0.10) are development versions, 
  which include new implementacions as patches: 0.10 pl 5
  (pl: patch level).

Files:
  version.h   : has version number stored within
  prversion.f : prints version
  siesta.f    : calling version files
  Makefile    : version file dependencies
========================================================================
Version: 0.8.41
Date: 1998/02/20 19:31:22
Title: Examples directory restructured
Author: Jose M. Soler (jose.soler@uam.es), 

Description:
  Two exmaples now: H2O and Si64. Both diagonalizing. 

Files: (within siesta/Examples/)
   Vps/        (pseudopotentials)
      README
      H.inp     
      O.inp
      Si.inp
      H.vps
      O.vps
      Si.vps
   H2O/
      h2o.fdf
      Out/
         h2o.out
         out.fdf
         siesta.size
   Si64/
      si64.fdf
      Out/
         si64.out
         out.fdf
         siesta.size
========================================================================
Version: 0.8.40
Date: 1998/02/20 14:37:00
Title: FIX: CG order-N minimization parameters
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
Changed minimization parameters to solve convergence problem
in order-N solution of H2O.

Files: 
  cgwf.f
========================================================================
Version: 0.8.39
Date: 1998/02/19 18:31:38
Title: Moving the executable in utility *siesta scripts 
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  The utility files for automatized running of siesta (msiesta, rsiesta,
  and qsiesta) have been slightly modified: the executable code siesta
  is moved to the working directory, so that different systems can run
  simultaneously without interfering, as long as the working directories
  are different.
  Simultaneous compilation is not advised.

  qrrsiesta has been added: it does recurrent run-recompile in batch
  queues (both this one and qsiesta are prepared for NQS batch system,
  available at least for DEC systems)

Files: (in Util/)
  rsiesta 
  msiesta
  qsiesta
  qrrsiesta : (new) equivalent to rrsiesta for NQS batch system
========================================================================
Version: 0.8.38
Date: 1998/02/19 17:02:22
Title: Printing of hostname and date/time transferred to script
Author: Jose M. Soler (jose.soler@uam.es),

Description:
  Date, time and hostname are printed in the output file at the
  beginning and the end of a siesta run. The prdate subroutine used
  to do it using system calls which demanded large amounts of extra
  memory. Now, that function has been transferred to a script (prdate)
  which is called by the rsiesta script. The original subroutine has
  been kept empty.

Files:
  prdate (in Util/) (new)
  rsiesta (in Util/)
  prdate.f : now empty, it does nothing, kept for possible future.
========================================================================
Version: 0.8.37
Date: 1998/02/19 17:02:22
Title: Dipole moment, now also calculated for chains and slabs
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Related to ExternalElectricField. Possibility of calculating 
dipole moment for chains and slabs, not only for molecules, as
long as it is normal to the direction(s) of repetition.

Files:
  dhscf.f
  dipole.f : (sign of dipole moment corrected)
========================================================================
Version: 0.8.36
Date: 1998/02/19 17:02:22
Title: Implemented constraints for dynamics/relaxations
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Fixes constraints to the change of atomic coordinates during
  geometry relaxation or molecular dynamics, usinf FDF data block
  GeometryConstraints. Allowed constraints are:
   -cellside: fixes the unit-cell side lengths to
              their initial values (not implemented yet).
   -cellangle: fixes the unit-cell angles to
               their initial values (not implemented yet).
   -position: fixes the positions of the specified atoms to
               their initial values.
   -center: fixes the center (mean position, not center of mass) of a 
            group of atoms to its initial value (not implemented yet).
   -rigid: fixes the relative positions of a group of atoms, without 
           restricting their displacement or rotation as a rigit unit
           (not implemented yet).
   -routine: Additionally, the user may write a problem-specific routine 
             called constr, which inputs the atomic forces and stress 
             tensor and outputs them orthogonalized to the constraints. 
  Example:
     %block GeometryConstraints
        cellside   c
        cellangle  alpha  beta  gamma
        position  from -1 to -10
        rigid  1  2
        center 1  2   0.0  0.0  1.0
        routine constr
     %endblock GeometryConstraints

Files:
  constr.f   : (new) User-written subroutine for constr-definition
               (also in Src/Include/ for hanling like .h files)
  fixed.f    : (new) Relaxation and dynamics with constrined forces
  siesta.f   : Calls fixed
  Makefile   : Added fixed.f and constr.f
  siesta.tex : Documented
========================================================================
Version: 0.8.35
Date: 1998/02/19 17:02:22
Title: Implemented ExternalElectricField
Author: Jose M. Soler (jose.soler@uam.es)

Description: 
  An external electric field can be applied to molecules,
  chains and slabs, using an FDF data block. Example:
      %block ExternalElectricField
        0.000  0.000  0.100  V/Ang
      %endblock ExternalElectricField
  The field must be perpendicular to bulk directions 
  (like those parallel to a slab), or otherwise siesta will
  automatically orthogonalize it (and print a warning).
  The field is applied using the real space grid of dhscf.
  The discontinuity of the potential is automatically 
  placed in the vacuum region, between repeated 
  molecules/chains/slabs.

Files:
  cross.f  : (new) Vector poduct (used by efield)
  dhscf.f  : Calls to efield and shaper
  efield.f : (new) External electric field implementation
  fdf.f    : Added electric field units
  Makefile : Added cross.f and efield.f
  siesta.f : Call to shaper
  shaper.f : New argument to return the bulk directions
  siesta.tex : ExternalElectricField documented
========================================================================
Version: 0.8.34
Date: 1998/02/19 17:02:22
Title: Calculate XC potential only where there is density
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Up to this point the XC potential was calculated for the whole grid.
  Now it is calculated only for those points for which there is a finite
  electronic density.

Files:
  xc.f
========================================================================
Version: 0.8.33
Date: 1998/02/17 16:31:04
Title: FIX: divided-by-zero problem in MD T=0. Miscellanea.
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  Small modifications to correct problems with initial temperature 
  for MD (when T=0). Additionally:
  - Parameter namax added to coceri.f and outcoor.f
  - Small modifications of extrapolation procedure between
    succesive minimizations in orderN (make linear extrapolation
    ONLY when last minimization took less than 50 iterations)
  - Redefine parameter restart (from 50 to 300) in cgwf.f

Files:
  vmb.f    : T=0 problem fixed
  siesta.f : id.
  outcoor.f: parameter namax added
  coceri.f : id.
  ordern.f : extrapolation
  cgwf.f   : restart parameter
========================================================================
Version: 0.8.32
Date: 1998/02/17 16:31:04
Title: Velocities in XV for all dynamics options 
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  The velocities are now written in file .XV . Before they were all
  zero except for the Verlet option. It allows their use on restart.

Files:
  dynamics.f
========================================================================
Version: 0.8.31
Date: 1998/02/11 19:07:00
Title: FIX: Non-standard FORTRAN in Emilio's 0.8.37 and 0.8.39 patches
Author: Alberto Garcia (wdpgaara@lg.ehu.es)

Description:
  Data statement out of order in redata.f, initdm.f, and recoor.f
  Adjustable array illegal in f77 in outcoor.f and coceri.f

Files:
  outcoor.f
  coceri.f
  initdm.f
  recoor.f
  redata.f
========================================================================
Version: 0.8.30
Date: 1997/12/31 12:46:41
Title: Non conventional order in p and d orbitals (Mulliken)
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  Noted that the order how the p and d orbitals are stored, and 
  appear in places like Mulliken output, is not conventional. It was
  no bug, it was supposed to be so, but it was not clear. It has been
  made clear now in the manual, in the WriteMullikenPop explanation,
  among other instances. The order is: y, z, x for the p's, and
  xy, yz, z^2, xz and x^2-y^2, for the d's.

Files:
  siesta.tex (in Docs/) : documented.
========================================================================
Version: 0.8.29
Date: 1997/12/27 12:31:09
Title: Initial spin-polarization input for spin-polarized calculations
Author: Emilio Artacho (emilio.artacho@uam.es) 

Description:
  Modification in DM initialization:
  - Now it is done in new separate subroutine  initdm.f
  - It allows the introduction of initial spin polarizations
    atom by atom with new %block DM.InitSpin: there is one line per 
    atom to be spin-polarized, containing the atom index and the desired
    initial spin-polarization. Example:
             %block DM.InitSpin
                5  -1.
                3   +
                7   -
                +   1
               -.5  2
             %endblock DM.InitSpin

Files:
  initdm.f : (new) DM initialization, including spin if required.
  siesta.f : calling initdm.f
  Makefile : include reference to initdm.f
  siesta.tex : documentation on DM.InitSpin block
  minvec.f : spelling (no effect of code)
  idiag.f  : id.
========================================================================
Version: 0.8.28
Date: 1997/12/23 19:58:24
Title: Storage of density matrices for Pulay convergence acceleration
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  Pulay mixing routines have been modified.  
  * An option is included to store the intermediate information
    in files or in memory. The fdf variable is DM.PulayOnFile.
    If true, SIESTA will use files SystemLabel.P1 and SystemLabel.P2
    to store the intermediate information. If false, it will 
    be stored in auxiliary arrays in memory. 
  * The I/O from disk has been optimized, to decreasse the size
    of the Pulay files and also the number of I/O operations
  * IMPORTANT: A new parameter has been included in siesta.h !!!!
    This is necessary to open space for the Pulay auxiliary
    storage arrays.  This means that old siesta.h files will NOT
    work with the new version, unless the new variable is defined.

Files:
  pulayx.f
  redata.f
  siesta.f
  siesta.h
  siesta.tex
========================================================================
Version: 0.8.27
Date: 1997/12/23 19:58:24
Title: Initial temperature for molecular dynamics
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  A new MD feature has been implemented: the possibility of
  specifying an initial temperature for the MD sumulation.
  The fdf variable is MD.InitialTemperature.
  The atomic velocities are randomly assigned according to the
  Maxwell-Boltzmann distribution (imposing the constraint of
  zero center of mass velocity). 

Files:
  vmb.f   : (new)
  redata.f
  siesta.f
  Makefile : include vmb.f
  siesta.tex
========================================================================
Version: 0.8.26
Date: 1997/12/23 19:58:24
Title: Renormalize the charge for ordern
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  The density matrix routine for O(N) has been slightly modified,
  to renormalize the DM so that the total charge is the correct
  one. This is quite necessary to achieve selfconsistency with
  the O(N) functional, although is not well justified (in principle
  is not variational!!).

Files:
  egandd.f: Small modifications to renormalize the charge
  denmat.f: Modified to renormalize the density matrix
========================================================================
Version: 0.8.25
Date: 1997/12/23 19:58:24
Title: FIX: Corrected scale of the time step
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  An IMPORTANT error in the dynamics routines has been corrected.
  The routines had a unit conversion error that affected the 
  scale of the time step (the dynamics were correct,
  but the time units were scaled).

Files:
  dynamics.f: Corrects serious error of units in foverm variable
========================================================================
Version: 0.8.24
Date: 1997/12/22 20:49:04
Title: Input/Output: Coordinates, Lattice Parameters, Pseudopotentials,
       Maximum and Mean Forces, Splitgauss
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  * Coordinates input has been separated to new subroutine (recoor)
    that hangs from redata.
  * Output of cell vectors and parameters separated into new routine
    (outcell) (only for intermediate and final writing in case of
    lattice relaxation or MD Parrinello-Rahman)
  * More flexible output of coordinates (both intermediate and final):
    - It can write in any of the formats that can be used for input
      (except ScaledCartesian if there was no lattice parameter in input)
    - Output format specified in new fdf: AtomCoorFormatOut.
      Default (if not given): uses same as for input
      (AtomicCoordinatesFormat)
      For both fdf's the value 'Fractional' can be used instead of
      'ScaledByLatticeVectors'
    New subroutine (outcoor)
  * Optional writing of atomic coordinates in separate files with
    adequate formats for being read by:
    - XMOL (symbol and x y z in Ang)               WriteCoorXmol   true
    - CERIUS (cell pars, sym, x y z in fractional) WriteCoorCerius true
    New subroutines (coxmol, coceri)
  * Writes maximum force and residual mean square force 
    after total force
  * Writes atomic coordinates as x, y, z, is, Symbol, number. It can
    be taken to the fdf input file as is.
  * New possibility of introducing lattice vectors:
        %block LatticeParameters
           a  b  c  alpha  beta  gamma
        %endblock LatticeParameters
    It checks whether both blocks (LatticeParameters and LatticeVectors)
    are present, and stops with ERROR if it is the case. Otherwise
    it generates the vectors according to whatever is present or
    automatically if none.
  * redata now writes the vectors in rows (instead of columns as before) 
    and without the 'redata: ' so that they can be incorporated
    as written to the input.
  * Pseudopotentials will be read from 'syslabel'.vps instead of .psatom.data. 
    For backwards compatibility, if .vps is not found, then .psatom.data 
    is looked for. In this case a warning is given.
  * Making Siesta write a message saying when it reads XV
  * Scale factor for splitgauss is now a scale factor and not the alpha
    in exp(-alpha*r**2). Scale factor is 1/sqrt(alpha)
  * Parrinello-Rahman MD (with or w/o quench) now writes stress tensor and
    lattice parameters for every time step
  * Mulliken: formatted output (pure cosmetics)

Files:
  recoor.f : (new) reads coordinates
  outcell.f: (new) writes cell vectors
  outcoor.f: (new) writes coordinates
  coxmol.f : (new) writes coordinates in XMol format in a separate file
  coceri.f : (new) writes coordinates in CERIUS format in a separate file
  ioxv.f   : writes message
  mulliken.f : Cosmetics
  redata.f : calling
  siesta.f : calling 
  atom.f   : reading .vps + scale factor for splitgauss.
  Makefile
  siesta.tex
========================================================================
Version: 0.8.23
Date: 1997/12/11 17:42:24
Title: Added check for excesive proximity between atoms
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  The program warns about atoms being closer than a specific distance:
  one Bohr by default, which can be modified by 
    WarningMinimumAtomicDistance
  Helpful to avoid the frequent errors in coordinate input, which,
  when atoms are extremely close originates an overlap matrix error.

Files:
  siesta.f
  siesta.tex
========================================================================
Version: 0.8.22
Date: 1997/12/11 17:42:24
Title: Plotting charge density, LDOS(x,y,z), Potentials
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Plotting SIESTA's outputs in real space. All plots are done in
  two steps:
   * Running SIESTA with an option for it to write a file with the
     information to be plotted:
      - SaveRho                    : logical: valence charge density 
                                     (pseudocore)
      - SaveElectrostaticPotential : logical: Pseudopots + Hartree
      - SaveTotalPotential         : logical: id + XC
      - LocalDensityOfStates       : data block: charge density 
                                     associated to an energy range 
                                     specified in the block:
                                        %block LocalDensityOfStates
                                           -3.50  0.00   eV
                                        %endblock LocalDensityOfStates
     These informations are stored in corresponding files (.RHO, .VH,
     .VT, .LDOS, respectively). It is stored: information about the
     real-space grid (defined by the cutoff => fineness of plot depends
     on cutoff!!) and values of the specific funtion at the grid points.
   * Generating a plot for X11 and/or Postscript, etc.
     This is done with the utility plrho program now at Util/Plrho.
     It requires the presence in the computer of the graphic library
     PGPLOT, set of FORTRAN subroutines to plot on different devices.
     It is public domain and not difficult to install.
       Plrho plots isosurfaces (surfaces of constant value of the
     particular function, like traditional plots of orbitals) in 3D
     using perspective and shading. It allows plotting two functions
     at the same time: First function (say Rho) as isosurface, and 
     the value of the second function (say electrostatic potential)
     is plotted on the Rho isosurface with a color coding (similar 
     to GRASP for biopolymers).

Files:
  iorho.f
  siesta.f
  dhscf.f
  siesta.tex
  Util/README
  Util/Plrho/ new directory wi th new files:
    plrho.f, plrho.h, paste.f, plsurf.f, rotate.f, icolor.f, pltr3d.f, 
    plrho_guide.txt, plrho.dat, and README
========================================================================
Version: 0.8.21
Date: 1997/11/5 10:59:49
Title: FIX: Correcting input/output for coordinates and velocities .XV
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  (1) Corrected output unit for writing coordinates and velocities
      Fri Oct 24 18:16:00 1997
  (2) An incorrect 'write(iu,*) na' changed to read
      Wed Nov  5 10:59:49 1997

Files:
  ioxv.f
========================================================================
Version: 0.8.20
Date: 1997/10/24 18:16:00
Title: Shift all atomic coordinates by shifting the origins
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Vector specifying a rigid shift to apply to the atomic coordinates,
  given in the same format and units as these. Notice that the atomic
  positions (shifted or not) need not be within the cell formed by
  LatticeVectors, since periodic boundary conditions are always
  assumed. 
    %block AtomicCoordinatesFormat
        1.000   3.000   2.000
    %endblock AtomicCoordinatesFormat

Files:
  redata.f
  siesta.tex
========================================================================
Version: 0.8.19
Date: 1997/10/22 10:12:06
Title: FIX: Added a tolerance in vector-length comparisons in minvec.f
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Some systems entered an infinite loop in the first call to DHSCF
  (building grid etc) due to a strict comparison of two vectors in
  minvec.f. Added a tolerance, problem solved. (It used to happen 
  in a Linux system at least).

Files:
  minvec.f
========================================================================
Version: 0.8.18
Date: 1997/10/16 18:14:16
Title: Off-site orbitals: fixes and changes for new basis handling
Author: Daniel Sanchez-Portal (daniel@polar.fmc.uam.es)

Description:
  Off-site orbitals: to use them new species has to be defined, and
  each orbital center has to be regarded as an 'atom' of that 'species'
  and coordinates have to be assigned to it. Two kinds
   * Orbitals that would correspond to some atom, but the atom is not 
     there. The species is to be given the corresponding atomic number
     with negative sign. Siesta will put the orbitals of that atom
     in the given ccordinates but without pseudopotentail and without
     its electrons. Useful for calculating the basis-set superposition
     error (BSSE).
   * Bessel functions. Corresponding node at r_c. EnergyShift has no
     meaning here. The r_c has to be gicen in the PAO_basis_and_PS_lmax
     block.

Files:
  redata.f
  atom_subs.f
  atom.f 
========================================================================
Version: 0.8.17
Date: 1997/10/15 18:08:52
Title: New makefile options for IBMs and DECs without libraries + RANLIB
Author: Alberto Garcia (wdpgaara@lg.ehu.es) and Emilio Artacho

Description:
  - unknown.make: Added dummy RANLIB command to warn the user.
  - New makefile ARCH options for IBMs and DECs without libraries: 
    osf and ibm

Files:
  unknown.make
  ibm.f
  ibm.make
  osf.f
  osf.make
  siesta.tex
========================================================================
Version: 0.8.16
Date: 1997/9/26 17:30:03
Title: Supercell: fixes and improvements
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  - Imposed the translational supercell symmetry on forces.
  - Changed the call to hsparse and xijorb to improve the performance of
    diagon when there is a supercell.
  - Changed the k-grid default to gamma of the SUPER cell.
  - Improved performance of diagon for a supercell.

Files:
  siesta.f
  kgrid.f
  xijorb.f
  diagon.f
  hsparse.f
  iorder.f
  ordvec.f
  Makefile
  siesta.tex
========================================================================
Version: 0.8.15
Date: 1997/9/26 17:30:03
Title: FIX: Stress & forces with part core  + automatic cell generation
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  - Corrected force and stress with partial core correction.
  - Added printout of the number of mesh points.
  - Corrected error in automatic cell generation.

Files:
  dhscf.f
  diagon.f
  siesta.f
  redata.f
  siesta.tex
========================================================================
Version: 0.8.14
Date: 1997/8/28 15:25:16
Title: siesta.PAO.BasisType --> PAO.BasisType
Author: Daniel Sanchez-Portal (daniel@polar.fmc.uam.es)

Description:
  Old FDF label siesta.PAO.BasisType is now PAO.BasisType.
  Its possible values: split, nodes, nonodes, user, and splitgauss.

Files:
  atom.f
  Examples/h2o.fdf
  Examples/h2o.gga.fdf
========================================================================
Version: 0.8.13
Date: 1997/8/25 18:42:20
Title: Manual (quick start, introduction) + Utilities (new rrsiesta)
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  * Manual siesta.tex:
    - Largely expanded INTRODUCTION section.
    - New QUICK START section.
    - New k-sampling options documented.
    - New error&warning messages and two known problems documented.
  * Script utilities:
    - New rrsiesta: Really-run-siesta. Keeps recompiling until siesta 
      really runs. 
    - rsiesta: Extracts from output all errors and warnings and prints 
      them at the end.

Files:
  Util/rrsiesta (new)
  Util/rsiesta
  siesta.tex
========================================================================
Version: 0.8.12
Date: 1997/8/25 18:42:20
Title: k-sampling, supercells, and bands
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  * Supercell: New fdf block that allows automatic generation of a
    supercell out of the repetition of the unit cell. Coordinates
    have to be given only for atoms in the unit cell.
      %block SuperCell
         M(1,1)  M(2,1)  M(3,1)
         M(1,2)  M(2,2)  M(3,2)
         M(1,3)  M(2,3)  M(3,3)
      %endblock SuperCell
    and the supercell is defined as 
    SuperCell(ix,i) = \sum_j CELL(ix,j)*M(j,i).
    Diagonalization is done for the unit cell.
    DHSCF works with the supercell.
  * k-sampling: Improved. But it can only be done if a supercell is
    defined such that any atom only sees one image of any other.
  * Bands: k-lines are introduced to obtain eigenvalues along them
    for conventional band (spaghetti) plots.

Files:
  idiag.f  (new)
  bands.f  (new)
  diagon.f
  kgrid.f
  redata.f
  siesta.f
  siesta.h
  Src/Include/siesta.h
  Makefile
  siesta.tex
========================================================================
Version: 0.8.11
Date: 1997/8/8 18:53:19
Title: FIX: Found the bug in stress calculation
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  There was a term missing in the stress calculation associated to the
  derivative of 1/r in the electrostatic energy (at last it was not
  related with the orbitals' scale factors as speculated before).
    There was an additional term missing for GGA. The whole has been 
  restructured. The new contribution is calculated in poison

Files:
  Sys/osfdxml.f  : Added stress to argument list of poison.
  Sys/bsd.f      : id.
  Sys/general.f  : id.
  Sys/ibmessl.f  : id.
  xc.f
  dhscf.f
  Makefile
========================================================================
Version: 0.8.10
Date: 1997/8/8 18:09:25
Title: Input for controlling Pulay mixing
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  The fdf variable DM.NumberPulay is introduced. It controls Pulay 
  mixing by stating that Pulay is to be performed every n iterations
  (the others being linear mixing) n being the value given in 
  DM.NumberPulay. If less than 2 it performs no Pulay mixing.
  The mixing itself was introduced before by Pablo but another
  input was used.

Files:
  pulayx.f
  redata.f
  siesta.f
  siesta.tex
========================================================================
Version: 0.8.9
Date: 1997/8/8 18:09:25
Title: Input for controlling initial spin density: Ferro or Antiferro
Author: Emilio Artacho (emilio.artacho@uam.es)

Description:
  The new FDF logical variable DM.InitSpinAF is introduced.
  It defines the initial spin density for a spin polarized calculation. 
  The spin density is initially constructed with the maximum possible
  spin polarization for each atom in its atomic configuration.
  This variable defines the relative orientation of the atomic
  spins:
    false: gives ferromagnetic order (all spins up).
    true: gives antiferromagnetic order. Up and down are assigned 
          according to order in the block 
          AtomicCoordinatesAndAtomicSpecies: up for the odd atoms, 
          down for even.
Files:
  redata.f
  siesta.f
  siesta.tex
========================================================================
Version: 0.8.8
Date: 1997/8/7 12:05:06
Title: Utility scripts rsiesta, msiesta, and qsiesta
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Shell scripts introduced to run siesta from an arbitrary directory.
  All three use the environment variable SIESTA_DIR (../Src by default)

Files:
  Util/msiesta makes (compiles) siesta
  Util/rsiesta runs siesta directly
  Util/qsiesta submits a siesta batch job, using NQS batch system
========================================================================
Version: 0.8.7
Date: 1997/8/7 12:05:06
Title: Directory Include/ and ranger.f and ranger.h
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  * New directory Src/Include where all the recommended initial *.h
    (atom, dhscf, siesta, diagon, ordern) are stored, instead the
    Src/*.h0
  * Subroutine ranger.f separated from neighb.f, and new ranger.h

Files:
  Src/Include/atom.h, dhscf.h, diagon.h, ordern.h, siesta.h and ranger.h
  ranger.f (new)
  neighb.f
  Makefile 
========================================================================
Version: 0.8.6
Date: 1997/8/5 19:36:47
Title: Automatic basis implementation
Author: Daniel Sanchez-Portal (daniel@polar.fmc.uam.es)

Description:
  Implemented into SIESTA the possibility of automatic generation of
  the basis orbitals requiring minimal (or even none) information
  at the input fdf file. General basis information for automatic basis
  generation:
   * PAO.EnergyShift: It defines the different (first-z) orbitals' r_c's
     by their excitation energy. Giving this number the basis generated
     is automatically a compensated basis (default 20 mRy).
   * PAO.SplitNorm: A standard to define default sensible radii for the 
     split-valence type of basis. It gives the amount of norm that
     the second-zeta split-off piece has to carry. The split radius 
     is defined accordingly. If multiple-zeta is used, the corresponding 
     radii are obtained by imposing smaller fractions of the SplitNorm 
     (1/2, 1/4 ...) value as norm carried by the higher zetas. (def 0.15)
   * PAO.BasisSize: Defines basis sizes: SZ or MINIMAL for single-z;
     DZ for double-z; and DZP or STANDARD for DZ plus polarization.
     (def DZP).
   * PAO.PolarizationOrbitals: true: adds polarization orbitals of
     perturbative kind.
   * PAO.SplitPolarizationOrbitals: true means to split the polarization
     orbitals of perturbative kind.
  These new inputs plus the old
   * siesta.PAO.BasisType (now split, splitgauss, nodes, nonodes, user),
  permit the definition of the basis with no need of the old 
  block PAO_basis_and_PS_lmax. If this block is not present, then the
  new block Chemical_species_label is needed, which inputs the different
  species for the different atoms:
     %block     ChemicalSpeciesLabel
        1    6    C
     %endblock  ChemicalSpeciesLabel
  Note that just writing this block and nothing else for the basis, siesta
  generates a quite sensible basis for the atoms involved (in this case 
  just carbon): DZP, cutting with an energy shift of 20 mRy (approx 
  4.2 Bohr for carbon), splitting with 0.15 of the norm, etc. If the
  PAO_basis_and_PS_lmax is there, then only those data which are specified
  with a zero will be generated automatically. Nonzero specifications in
  this block have priority.
     A file is written for each atom called 'label'.PAO.basis with the
  numerical basis used. Same format as read by PAO.BasisType = user.

Files:
  parse.f   : (new) routine which parses an input line into names 
              and numbers
  atom.f    : Basis changes heavily here.
  initatom.f: changed interface and added calls to chkdim
  redata.f  : PAO_basis_and_PS_lmax is now optional.
              Added Chemical_species_label block.
              Added argument atm_label.
  siesta.f  : changed interfaces to redata and initatom
  Makefile  : added parse.f
========================================================================
Version: 0.8.5
Date: 1997/8/4 18:12:39
Title: FIX: Corrected a SEVERE bug for spin polarization
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  Corrected a SEVERE bug for spin polarization. Correct ispin
  index in eigenvalue printout.

Files:
  siesta.f
========================================================================
Version: 0.8.4
Date: 1997/7/24 15:46:34
Title: Pulay mixing
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)

Description:
  Introduced new routine to perform Pulay mixing: 
  Modified and partly re-written by P. Ordejon, July'97, on a routine
  original of In-Ho Lee, Beckman Inst., Univ. of Illinois, Mar. 25 '97.
  It represents an SCF convergence accelerator nased on storing the
  history of convergence for a few cycles and guessing the next based
  on that story.

Files:
  pulayx.f
  siesta.f
  Makefile
========================================================================
Version: 0.8.3
Date: 1997/7/21 14:45:48
Title: Alaternative local pseudopotential for shallow cores
Author: Daniel Sanchez-Portal (daniel@polar.fmc.uam.es)

Description:
  The local pseudopot is usially the one generated by a positive charge
  equal to the net of the core, but spread in a Gaussian of the width 
  of the core. The core radius is taken as the radius outside which
  the pseudopotentials all (s,p,d..) go like Z/r within a tolerance. 
  This cutoff is also defining the range of the KB projectors
    However, atoms with shallow cores (Ga, Ge, ...) demand a very
  long core radius, not necessarily because the different pseudopots
  remain different for long radii, but because the charge of the core
  spreads and the Z/r behavior comes too slowly.
    For these cases (controlled by an if, if the value of that core 
  radius is too long) an alternative local pseudopotential is defined:
  A smooth curve ( Vloc(r)=v3exp(v1*r^2+v2*r^3) ) for  r < Rc(KB) 
  is matched to the pseudopot coming from r > Rc(KB). Rc(KB) is the
  new core radius (for the KB) very close to the one used in the 
  atomic program, and the one for which diff pseudopots converge to one.
  There is also the possibility of using 
  Vloc(r)=v4exp(v1*r^2+v2*r^3+v3*r^4) for matching not only value and
  first derivative, but also second derivative.
    The program does everything. ATOM informs in output.
  
Files:
  atom.f
  atom_subs.f
========================================================================
Version: 0.8.2
Date: 1997/7/16 15:00:22
Title: Makefile: a unique file for different architectures
Author: Alberto Garcia (wdpgaara@lg.ehu.es)

Description:
  Compilation procedure for SIESTA using one only Makefile file. The
  user has to define the system variable ARCH taking one of the 
  prepared possibilities in Src/Sys (like export ARCH=linux). 
  The new directoy Src/Sys has the .make files for the different
  architectures (compiler names, flags and other pecularities) and
  the fortran subroutines that depend on the machine: cputim.f
  and others like poison.f that may call propriety libraries.
  general.f is all purpose, all architecture, and selfcontained
  for the use on any platform.
    This way, the old architecture adapted files in Src (poison, 
  cputim, for different systems) disappear.

Files:
  Makefile
  Sys/osfdxml.f
  Sys/bsd.f
  Sys/general.f
  Sys/ibmessl.f
  Sys/ibmessl.make
  Sys/linux.make
  Sys/osfdxml.make
  Sys/freebsd.make
  Sys/hp.make
  makefile, Makefile.DEC, Makefile.IBM, Makefile.linux, 
  poison.general.f, cputim.general.f, poison.DEC.f, poison.IBM.f, 
  poison.f, cputim.DEC.f, cputim.IBM.f, and cputim.f  all disappear.
========================================================================
Version: 0.8.1
Date: 1997/7/15 21:39:57
Title: k-sampling
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  k-sampling implementation. It is only partial since dhscf.f and all 
  dealings in the grid are left untouched (and real). It is therefore
  only possible to do k-samplings on cells such that any atom sees only
  one image of any other atom. K-sampling in this case is then just
  mutiplying by phases in the right places.

Files:
  atom.f
  cdiag.f
  dhscf.f
  diagon.f
  fermid.f
  kgrid.f (new)
  rdiag.f
  rdiagon.f (supressed)
  siesta.f
  siesta.h
  xijorb.f (new) Vectors among atom centers
  Makefile
  siesta.tex
========================================================================
Version: SIESTA 0.8 
Date: 1997/7/15 21:39:57
Title: Several: Output files + shaper + dipole + prdate + automatic cell
Author: Jose M. Soler (jose.soler@uam.es)

Description:
  * Several routines saving information to files: 
    - iodm.f   : the 'save' file is SystemLabel.DM
    - iolwf.f  : the 'save' file is SystemLabel.LWF
    - iohs.f   : writes/reads H y S
    - iorho.f  : writes/reads rho in the mesh
    - ioxv.f   : writes/reads positions and velocities 
  * Dipole moment is calculated from grid integration
  * shaper.f obtains the shape of a system: molecule, chain, slab, solid
  * prdate: prints time, date and computer name at the beginning and
    the end of the calculation in the output file.
  * Automatic cell: if there is no lattice parameter nor lattice vectors
    specified in input, they are all generated such that there is no
    overlap between cells (plus a 10% extra) (shape: molecule)
      If the lattice parameter is given but not the lattice vectors a
    cubic cell is assumed.

Files:
  dipole.f
  dhscf.f
  iodm.f
  iolwf.f
  iohs.f
  iorho.f
  ioxv.f
  redata.f
  shaper.f
  prdate.f
  siesta.f
  Makefile
  siesta.tex
========================================================================

            PRIOR TO SIESTA 0.8: Some important changes
                  (see Log.Messages for details)

========================================================================
Date: 1997/6/23 16:28:07
Title: SIESTA optimization, including adaptation to dxml of DEC
Author: Jose M. Soler (jose.soler@uam.es)
========================================================================
Date: 1997/6/6 17:33:15
Title: OrderN options (Kim, Ordejon-Mauri, file)
       siesta.h generation
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)
========================================================================
Date: 1997/5/6 16:54:33
Title: Mulliken populations in output
Author: Pablo Ordejon (ordejon@condmat01.geol.uniovi.es)
========================================================================
Date: 1997/4/16 20:20:15
Title: Smooth core charge for local pseudopot: core overlap handling
Author: Daniel Sanchez-Portal (daniel@polar.fmc.uam.es)
========================================================================
Date: Once upon a time
Title: Atomic program package for pseudopotential generation:
       Berkeley's code, maintained by Alberto Garcia, is incorporated
       into directory Pseudo
Author: Alberto Garcia (wdpgaara@lg.ehu.es)
========================================================================
