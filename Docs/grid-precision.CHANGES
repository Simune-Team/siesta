Changes to the default precision of grid magnitudes

The grid functions (charge densities, potentials, etc) are now in
double precision by default. The 'phi' array that holds the values of
the basis orbitals on the real-space grid is kept in single precision.

The following pre-processing symbols at compile time control the 
precision selection:

#ifdef GRID_SP
    integer, parameter :: grid_p = sp
    integer, parameter :: phi_grid_p = sp
#elif defined(GRID_DP)
    integer, parameter :: grid_p = dp
    integer, parameter :: phi_grid_p = dp
#else
    integer, parameter :: grid_p = dp
    integer, parameter :: phi_grid_p = sp
#endif

GRID_DP will lead to a sizable memory increase, as 'phi' is the main
user of memory on the grid. On the other hand, the gains in accuracy
are negligible, as the operations over 'phi' are accumulated in double
precision variables.

GRID_SP recovers the old Siesta default. It will not free much
memory, and it will show some numerical differences.
