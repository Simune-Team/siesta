RELEASE NOTES FOR SIESTA-2.0.2


This is the second bug-fix package after the release of Siesta-2.0


SUMMARY OF CHANGES

* Fix for k-point update when kgrid_cutoff is used
* Initialize vol2 correctly in m_check_supercell.f
* Parallel bug fix and cleanup in writewave.F
* Fix units conversion in Util/Optical/optical
* Wrap several I/O operations for MPI. Other parallel fixes
* Fix tag in MPI send/receive in mulliken


CHANGES IN DETAIL

* Fix for k-point update when kgrid_cutoff is used

The user can specify a kgrid_cutoff or a Monkhorst-Pack grid
to determine the k-point sampling. 

If a MP grid is specified and there are unit-cell changes during the
calculation, the k-point set does not change (in fractional
reciprocal-lattice coordinates). The sampling accuracy changes
implicitly.

On the other hand, the k-point set should change in principle if a
kgrid_cutoff has been given and the cell volume changes, but due to a
programming error the k-point grid was fixed after the first
iteration.

The error affects variable-cell calculations specifying a
kgrid_cutoff.

The k-point grid used for achieving self-consistency is now
re-computed inside the geometry loop if:

The calculation is a cell-optimization one (i.e., if MD.VariableCell
is .true.), or if it is a "siesta-server" run. This is the old default.

Additionally, if the user sets the fdf flag "ChangeKgridInMD" to
.true., the grid will be recomputed also during MD runs that potentially
change the unit cell: Parrinello-Rahman, Nose-Parrinello-Rahman, and
Anneal.

A user might want to avoid sudden changes in the k-point set
while performing molecular dynamics runs or cell optimizations,
notably if the calculations are not very well converged. In that
case a MP grid, and not a kgrid_cutoff, should be specified.

A related problem that has been fixed in this patch is the 
possible overriding of the user's MP displacement specification after
the first iteration.

There is no backwards compatibility after this bugfix. To recover the
old behavior when a kgrid_cutoff was specified, the user should check
the old output, extract the information about the MP grid generated
automatically by the program, and put it in an MP block.

* Initialize vol2 correctly in m_check_supercell.f

This bug could potentially change the flow of the program.

* Parallel bug fix and cleanup in writewave.F

The code in writewave.F has been cleaned up a bit and a fix for a bug
appearing in parallel execution has been fixed.

* Fix units conversion in Util/Optical/optical

Optical.f is a program to analyze the file .EPSIMG and obtain the
optical properties. A unit conversion was done from eV to Ry instead
of to Ha.

* Wrap several I/O operations for MPI. Other parallel fixes

 - The calls to io_close in iohs.F were not restricted to the master node.
 - Wrap output in broyden_optim.F
 - Fix allocation of temporary array in savepsi in parallel
 - Add 'show_distribution' routine to warn (for now) the user
   when there are nodes which do not handle any orbitals.

* Fix tag in MPI send/receive in mulliken

  Output was incorrect in parallel.


NEW TESTS

 Added 'born' and  'born_spin' tests (just for the mechanics: they
 do not have a lot of physical sense).

OTHER

 - Add experimental 'compare' target to Makefile.

