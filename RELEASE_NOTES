#BETA#BETA#BETA#BETA#BETA#BETA#
B                             B
E            SIESTA           E
#             4.1             #
T             b-4             T
A                             A
#BETA#BETA#BETA#BETA#BETA#BETA#

Release notes for siesta 4.1-b4 beta version

--- Default changes:
    MeshCutoff has been increased to 300 Ry (from 100)
    MaxSCFIterations has been increased to 1000 (from 50)
    SCFMustConverge is now default true (from false)

--- Added developer documentation found in Docs/developer
    Both ford (preferred) and Doxygen may be used

--- Generally increased precision in many output files

--- Lots of fixes and updates for the Lua/flook interaction

--- Auxiliary supercell handling when reading DM matrices:
    Siesta can now read and convert nearly *any* DM matrix and make it
    match the used sparse pattern.

--- Fixed minor inconsistencies when handling Bessel basis

--- Updated all diagonalization routines
    - ELPA and MRRR for k-point sampling.
    - Less memory usage

--- Fixed bug on reading *.ion* files (lp:1751723)

--- Updated internal integration table sizes (slightly increased precision)

--- PDOS files now also contain the fermi-level such that tools may easily
    align the energy to 0.

--- Added more digits to dDmax which may be relevant when performing
    Spin-Orbit/Non-Collinear calculations.

--- Fixed bug related to writing out non-collinear spin eigenvalues,
    and also for spin-orbit. (lp:1708634)

--- Fixed parallel PDOS calculations of non-colinear and spin-orbit.
    (lp:1718162)

--- Added calculated charges to the Lua interface (check the charges
    while running).

--- Fixed lots of compilation issues related to the utilities
    (lp:1712317, lp:1712319, lp:1711850)

--- Fix for reading a ghost basis (lp:1736455, lp:1738425)

--- Fix when fdf-input lines are too long. Instead of discarding the
    remaining line, fdf now "dies" to inform users of possible erroneous
    input. (lp:1728281)

--- Fixed Monkhorst-Pack displacements when the displacement was larger
    than 1 (lp:1721479)

--- Fix for possible heap allocated arrays (Intel compilers) (lp:1704370)

--- Ensured many files to be closed properly at the end of the runs.

--- Added basic compiler information to the siesta/transiesta/tbtrans
    header (compiler output)

--- Performing SOC calculations does not not require all species
    to have SOC contributions.

--- TranSiesta / TBtrans changes:

-- Disk-space reduction when mixing non-periodic and periodic electrodes

-- Now tiling is also enabled for Bloch expansions. This is actually faster
   than repetitions, so users should prefer tiling the electrodes

-- TranSiesta is now intrinsic to the Siesta executable. An
   electrode should now be calculated using 'siesta --electrode'
   The TranSiesta executable still exists but is nothing but 'siesta --electrode'

-- Many bug-fixes related to pivoting tables; this should only
   change the effective BTD matrices, and has no relevance to the
   accuracy of the calculations

-- Huge performance increase in TBtrans in many different parts of the code

-- Bug-fix for out-of-core calculations for spin-polarized TBT.Spin 2 calculations

-- Fixed the default 2-terminal Poisson ramp. The ramp is now
   defaulted to be positioned in the central region.
     TS.Poisson ramp-central

-- Small memory reduction by de-allocating unused siesta memory when
   entering transiesta.
   
-- Fixed the box Poisson for N-electrode calculations when using
   skewed electrodes. Thanks to Azar Ostovan and Thomas Frederiksen.

-- Fixed tbtrans setup for bias-window-only calculations. Now the contours
   are correctly interpreted.

-- Fixed tbtrans AVCEIG output.

-- Change TBtrans DOS output such that there is no normalization

-- Enabled tbtrans 1-orbital calculations in the BTD matrices.

-- Fixed sign-convention changes in orbital-currents. Now they are
   checked and works together with sisl (>0.9).

-- Allowed external GF files for the self-energies. This is mainly beneficial
   for TBtrans as we can add external electrodes *anywhere* in the device.
   Say Buttiker-probes.

-- Bugfix when the left electrode was set to -|V|/2 (the default |V|/2 is
   unaffected).

-- Added much more output to the TBT*.nc files; electrode information is now
   complete, and also the BTD matrices are written.

-- Enabled tbtrans -fdf TBT.Analyze which runs all pivoting schemes, this
   may be very beneficial to run with tbtrans before performing calculations.
   Choosing the correct pivoting scheme can be really important!

-- Enabled output file on tbtrans command line:
     tbtrans --out TBT.out RUN.fdf
   is (more or less) equivalent to:   
     tbtrans RUN.fdf > TBT.out

-- Made Fermi charge correction more aggressive for faster convergence.

-- TBtrans can now calculate DM, COOP and COHP curves. They are calculated
   in the supercell picture and can thus be analyzed cross-boundary as well.
   They are calculated both from the Green function and the spectral function.
   The coming >0.9.3 release of sisl will enable this analysis.

-- Fixed TBtrans DOS (Green) calculations when performing k-point calculations. There
   can be small differences when comparing Green function DOS between this version
   and prior versions. The bug is only present when time-reversal-symmetry is applied.

#BETA#BETA#BETA#BETA#BETA#BETA#
B                             B
E            SIESTA           E
#             4.1             #
T             b-3             T
A                             A
#BETA#BETA#BETA#BETA#BETA#BETA#

Release notes for siesta 4.1-b3 beta version

--- Manual greatly overhauled and updated in various parts

--- Fixed DOS and PDOS for non-colinear and spin-orbit

--- Fixed bug when printing initial spin-configuration

--- Enabled restarting calculations with different spin-configurations,
    i.e. one may go from an unpolarized calculation to a polarized, or
    from a polarized to an unpolarized (also non-colinear and spin-orbit).

--- Lots of bug-fixes for transiesta and tbtrans

--- Bug-fix for spin-orbit coupling normalization

--- Fixed minor memory leaks

--- Many improvements for Lua enabled runs

--- Added installation scripts of
    netcdf/hdf5/zlib/flook

--- Fixes to the <>.nc file for high spin configuration >= non-colinear

#BETA#BETA#BETA#BETA#BETA#BETA#
B                             B
E            SIESTA           E
#             4.1             #
T             b-2             T
A                             A
#BETA#BETA#BETA#BETA#BETA#BETA#

Release notes for siesta 4.1-b2 beta version

--- The configure script has been removed.
    Its use was discouraged and would often yield erroneous
    arch.make files.
    To circumvent any confusions it has been obsoleted until
    further notice.

    * Instead of the configure script two default arch.make files
    now exist in the Obj directory.
       gfortran.make
       intel.make
    which should be guidelines for creating ones own arch.make file.

--- Several bug-fixes which was reported for the b1 release has been
    resolved.


#BETA#BETA#BETA#BETA#BETA#BETA#
B                             B
E            SIESTA           E
#             4.1             #
T             b-1             T
A                             A
#BETA#BETA#BETA#BETA#BETA#BETA#

Release notes for siesta 4.1-b2 beta version

(This is also known as the MaX R1 release)

Please see the Manual for full details

*** Backward-compatibility issues:

    * The mixing routines have completely changed, hence the same
    convergence path cannot be expected. This, unfortunately, makes
    comparison difficult with prior versions. However, the final
    converged system should be transferable.

    * SIESTA now defaults to mixing the Hamiltonian instead of the
    density matrix. To revert to density-matrix mixing, use
    "SCF.Mix DM". The option to mix after the initial scf step is now
    'on' by default.

    * SIESTA now defaults to monitoring convergence for both the
    density matrix AND the Hamiltonian. To revert to only density
    matrix convergence, use: "SCF.Converge.H false"

    * A major number of fdf-flags concerning mixing
    parameters have changed to a more consistent naming scheme.
    However, all previous flags are still in effect but the newer
    flags have precedence. The previous flags are the default values
    for the newer flag-names.

    * Two additional files are created:
       H_DMGEN and
       H_MIXED
      these contain the Hamiltonian at various stages through the SCF.
      Currently they are intended for developers and may be removed in
      the final 4.1 release.
      You may delete these without problems.
      

*** New features
    
-- LDA+U (Javier Junquera)

    * Full incorporation of the LDA+U implementation in SIESTA
    * Two different LDA+U projectors available
    * Estimate the best U according to: Cococcioni and Gironcoli in PRB, 2005

-- Spin-Orbit coupling (Ramon Cuadrado)

    * On-site approximation for spin-orbit-coupling matrix elements.

-- MRRR method for diagonalization (Alberto Garcia)

    * This will typically be faster than divide-and-conquer algorithm
    and may be the future default. For Gamma-point calculations.

-- ELPA method for diagonalization (Alberto Garcia)

    * This provides better scalability compared to ScaLAPACK for large
    # of processors. For Gamma-point calculations.

-- Added interface to the PEXSI library for calculating the density
   matrix, DOS, and LDOS (Alberto Garcia)

    * This library provides massive parallelism and better
    scalability, but should only be used for very large systems.

-- SIESTA is now hybrid-parallelised (Nick R. Papior)

    * One may compile Siesta/Transiesta in serial, OpenMP, MPI, or
    MPI+OpenMP mode.

-- Re-write of non-equilibrium Green function code (Nick R. Papior)

    * N>=1 terminal support in transiesta
    * Improved convergence
    * Different ways of handling charge-reductions in SCF
    * All electrodes have settings _per electrode_ for full customization
    * Greatly reduced memory usage
    * Skewed axis are enabled for further reduction of complex systems
    * Implemented MUMPS method for inversion
    * Implemented LAPACK for inversion
    * Implemented BTD method for inversion (extremely fast)
    * Fully OpenMP threaded
    * Start directly from transiesta enabled
    * Temperature gradients as non-equilibrium a possibility
    
-- Complete rewrite of tbtrans utility (Nick R. Papior)

    * Made tbtrans a stand-alone utility for user-defined tight-binding method
    * EXTREME SCALE version (BTD-only)
      - Memory consumption _only_ dependent on "device" region
    * N>=1 electrode support
    * Region projections for transmission through "eigenstates"
    * Custom change of the self-energies
    * k -> k' transmissions
    * Interpolation of bias Hamiltonians
    * Bond-currents
    * Fully OpenMP threaded and/or MPI parallelized
    * DOS and bulk transmission for electrodes
    * Gf-DOS/spectral-DOS for device region
      

-- Mixing routines rewritten (Nick R. Papior)
    
    * New mixing schemes Pulay (Guarenteed Reduction)
    * Custom mixing restart options (full user customizability)

-- Added more constraints (Nick R. Papior)

    * Constraints are verbose and many new ways of using constraints exists

-- NetCDF4 file format for siesta -> parallel IO (Nick R. Papior)

    * Provides a standard intrinsically grouped file for retaining
    nearly all siesta related information in one file.

-- Enabled convergence control of density-, energy density matrices,
   Hamiltonian and energy. 

-- LUA scripting in siesta (Nick R. Papior)
    
    * This is an experimental feature

-- Gate calculations (Nick R. Papior)

    * Charge and Hartree gate

-- Utilities (Nick R. Papior)

    * All make-files are now prepared to enable parallel builds
      - this makes compilation *MUCH* faster. For example:
         make -j4
        will compile using 4 cores.
    * Grimme utility
      - easy creation of FDF block for Grimme parameters
    * SpPivot, pivot sparsity pattern using several different routines
    * TS/** different utilities related to transiesta
