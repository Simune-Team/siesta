Units

*** WARNING ***
The support for full-spinor wavefunctions (non-collinear spin,
spin-orbit coupling) has necessitated a CHANGE in the conventions
for output of the NON-SPIN-POLARIZED curves.
*** ----------------

## DOS curves

They come out in (eV)^(-1). Non-spin cases have an extra factor
of 2. For spin-polarized systems, two curves are output.
For the full-spinor case, only one curve is output.

(**NOTE that in previous versions of the program the extra factor of
2 for non-spin cases was NOT really applied, despite statements to the
contrary in these notes :-( ).

## COOP curves

They come out in (eV)^(-1).  If they are integrated up to the Fermi
level, (including all the interactions for all orbitals, even those
on-site (for this, specify a minimum distance of 0.0 in the .mpr file
and a big enough maximum distance)), the result is N (the number of
electrons in the unit cell) when the system is not spin-polarized.
(** NOTE: This is a change with respect to the previous version: the
values are DOUBLED now).

When there are two spin components, two curves are ouput in the .coop
file, and the SUM of the integrals for both would be N.  For the
full-spinor case, only one curve is output, and the integrated value
up to the Fermi level is N.

## COHP curves

They come out in Ry * (eV)^(-1) (the Ry part comes from the
Hamiltonian factor -- THIS SHOULD BE CHANGED).  If they are integrated
up to the Fermi level, (including all the interactions for all
orbitals, even those on-site (for this, specify a minimum distance of
0.0 in the .mpr file and a big enough maximum distance)), the result
is E_bs (the band-structure energy) when the system is not
spin-polarized.
(** NOTE: This is a change with respect to the previous version: the
values are DOUBLED now).

When there are two spin components, two curves are ouput in the .cohp
file, and the sum of the integrals for both would be E_bs.  For the
full-spinor case, only one curve is output, and the integrated value
up to the Fermi level is E_bs.

It is important to note that E_bs is *not* the Kohn-Sham energy, 
but the sum of KS eigenvalues up to the Fermi level (with the
appropriate k-point weights). E_bs is now computed by Siesta
as Tr(DM*H), where DM is the density matrix (see the Siesta paper)
and output as Ebs.

E_bs can also be computed integrating the DOS curves:

E_bs = Integral (DOS(E)*E*dE)

up to the Fermi level. NOTE that the DOS curves for the non-spin case
*already* have the factor of 2.  Mprop now includes a third column in
the Filename.intdos file showing the integrated E_bs(E). By reading
the entry for a value of E close to the Fermi level E_bs can
estimated. This is useful to get Ebs for legacy calculations performed
with versions of Siesta that did not compute E_bs.

In order for mprop to estimate the Fermi level accurately (to match
Siesta's own value), it is advisable to use a small smearing. By using
a relatively high number of sampling points ( -n option), and an
energy upper limit that matches E_fermi, the COOP and COHP curves can be
easily integrated by a simple sum (and a factor of the spacing).

For example:

mprop -s 0.1 -n 1000  -M E_fermi  Filename ( no .mpr extension)

