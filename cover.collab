Dear Colleague:

We are pleased to announce the availability of SIESTA 1.1, the first
major release of our Self-Consistent DFT LCAO program since
1999. (See the Release Notes at the end of this file.)

You can download the new version by pointing your Web browser to

http://trastero.uam.es/descarga?id=XXXXX_Serial__XXXXX

Just enter your email address in the input field of the form and
click on the "Descarga" button.

Please note that this URL will work for a limited period of time (nine
days approximately). If you cannot download the file in the next few
days, please contact Oscar Paz (oscar.paz@uam.es) to request a new URL.
Oscar will help you with any other downloading problems.

You should look at the file Docs/CONDITIONS for information regarding
the use of SIESTA. If you have been collaborating with one of the
developers, you can continue the work on the project with the new
version.


Best wishes,

      The SIESTA team (http://www.uam.es/siesta)  siesta@wm.lc.ehu.es

      Emilio Artacho,        University of Cambridge
      Julian Gale,           Imperial College, London
      Alberto Garcia,        Universidad del Pais Vasco, Bilbao
      Javier Junquera        Universidad Autonoma de Madrid
      Richard M. Martin,     University of Illinois at Urbana-Champaign
      Pablo Ordejon,         ICMAB-CSIC, Barcelona
      Daniel Sanchez-Portal, Universidad del Pais Vasco, San Sebastian
      Jose M. Soler,         Universidad Autonoma de Madrid


=======================

Release Notes for SIESTA-1.1, September 25, 2001

(See the Manual for documentation of the new features. A complete list
of changes can also be found in the Docs/CHANGES file.)

NEW FEATURES AND USER-INTERFACE CHANGES

* SIESTA is now written in Fortran90. By using the dynamic memory
allocation features of the language, we have eliminated the need to
recompile the program for each particular project. Only a very small
number of parameters, which will seldom need to be changed, are still
hardwired. (See file Src/atmparams.f). Running now: siesta <in.fdf >out.

* SIESTA can now read ASCII (.psf extension) pseudopotential files, in
addition to the binary ones (with the .vps extension). Files with the
extension .psatom.data are no longer accepted.

* Orbital and projector information can be saved to and read from files.
It allows for easier manipulation of the basis. It also makes SIESTA
as a code less dependent on the basis, which can be prepared
beforehand if the user so chooses.

* Soft-confinement potentials can be used to generate smoother basis
sets, avoiding kinks.

* SIESTA can now run in parallel, using MPI for communication, as well
as the Blacs and Scalapack libraries. (Note: This feature is not
available in all distributions of the program.)

* A direct SCF option has been included, that leads to the
recalculation of the orbital values at the mesh points on the
fly. Although this increases the CPU time, it significantly reduces
the memory usage of the program by up to a factor of a half.

* Harris functional forces implemented, allowing for efficient
non-selfconsistent calculations.

* Improvements in performance.


REPORTING BUGS

This long-awaited version of SIESTA is a significant rewrite, and
incorporates a number of new features. We believe that it represents
an important step forward in functionality and ease of use. On the
other hand, due to the large number of changes and the wide variety of
options, modes of operation, and supported environments, it is very
likely that a number of quirks and bugs have escaped our detection.

That is why we request your cooperation. You should test the new
version by using it to re-run some of the calculations you have done
in the past and comparing the results, and by exercising any new
features you might want to start using.

Any problems should be reported back to us, using the "send-bug"
script located in the top directory or (better) the Web interface at
the main SIESTA home page at http://www.uam.es/siesta (login as
'user' with any non-empty password). Please tell us also about any 
problems regarding:

* Installation 
* Documentation 
* Memory use 
* Speed 
* Auxiliary programs

We encourage you to follow the bug reporting guidelines in the SIESTA
manual.







