#
# Makefile for SIESTA tests
#
# Usage:
#
#          make                      --- Run all tests
#          make tests=fe_broyden     --- Run a single test
#          make batch                --- Dispatch to batch system
#                                        (site-dependent)
#                                        (needs extra configuration)
#
#          By default, the version of SIESTA used is the one in Src.
#          To use another one:
#
#          make SIESTA=/some/path/to/siesta-program ....
#
#          It is also possible to have separate working directories,
#          by using the a "label". For example:
#
#          make label=finer 
#     
#          The default label is "work".
#
# See also test.mk for details, and the scripts in Scripts for 
# examples of other options for batch processing.
#
#
REFERENCE=../../ref-version/Tests
#
label=work
#
tests= h2o h2o_reparam h2o_basis h2o_dos h2o_orderN \
       floating benzene bessel mgco3 si2x1h force_2 born born_spin\
       var_cell constant_volume batio3 fe fe_broyden sih si64 \
       h2oZ sih_op_broyden h2o_op_broyden zmatrix md_pr md_npr \
       md_anneal md_verlet md_nose si_bandpoints sih_fire \
       graphite_c6 oxyn partial h2o_findp_bug h2o_radialgrid ag ch4
#
#  Need to add the new tests and generate the reference outputs and xml files.
#
#
all: 
	for i in ${tests} ; do \
		(cd $$i ; make completed) ; \
	done
#
xmlcheck: 
	for i in ${tests} ; do \
		(cd $$i ; make xmlcheck) ; \
	done
#
batch:
	@for i in ${tests} ; do \
		(qsub $(HOME)/bin/sge_run.sh "make tests=$$i xmlcheck") ; \
	done
clean:
	@for i in ${tests} ; do \
		(cd $$i ; make clean) ; \
	done
#
#   Global comparisons with other Tests directories
#
compare:
	@for i in ${tests} ;do \
             echo "---------$$i start" ;  \
             diff $$i/$$i.out ${REFERENCE}/$$i/$$i.out ; \
             echo "****---------$$i done" ; \
     done | grep -v " timer: " | grep -v " elaps: " | grep -v " of run"

compare-xml:    # Needs more work
	for i in ${tests} ;do \
             echo "---------$$i start of xml comparison" ;  \
             $(XML-TESTER) $$i/$$i.xml ${REFERENCE}/$$i/$$i.xml ; \
             echo "****---------$$i xml comparison done" ; done 

update-xml:
	for i in ${tests};\
        do \
             echo "---------Updating $$i xml files" ;   \
             cp $$i/$(label)/$$i.xml Reference-xml/$$i.xml ; \
        done

xmllint:
	for i in ${tests} ;\
        do \
            echo "---------$$i Check xml file" ;  \
            xmllint $$i/$$i.xml >/dev/null ; \
        done 





